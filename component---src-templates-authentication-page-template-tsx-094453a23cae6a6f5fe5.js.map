{"version":3,"file":"component---src-templates-authentication-page-template-tsx-094453a23cae6a6f5fe5.js","mappings":"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","sources":["webpack://adkaora.com/./src/components/UI/MultiStyleText/MultiStyleText.tsx","webpack://adkaora.com/./src/components/UI/ScrollButton/ScrollButton.tsx","webpack://adkaora.com/./src/queries/AuthenticationLabelsQuery.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ChangePasswordForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ConfirmAccountForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ForgottenPasswordForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ForgottenPasswordVerification.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/SignInForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/SignUpForm.tsx","webpack://adkaora.com/./src/components/Sections/UserPanel/UserPanel.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/DeleteAccountForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/UpdateAttributesForm.tsx","webpack://adkaora.com/./src/templates/AuthenticationPageTemplate.tsx"],"sourcesContent":["import {classes} from \"~/utilities/classes\"\nimport \"./MultiStyleText.css\"\n\ninterface MultiStyleTextProps extends React.HTMLAttributes<HTMLSpanElement> {\n    flex?: boolean | undefined\n    children?: string | undefined | null\n    className1?: string\n    className2?: string\n    style1?: React.CSSProperties | undefined\n    style2?: React.CSSProperties | undefined\n}\n\nconst MultiStyleText = (props: MultiStyleTextProps) => {\n    const {className, className1, className2, flex = false, style1, style2, children: _children} = props\n    const children = _children?.trim()\n\n    if (!children) return null\n    const numberOfChars = children.length\n    const words = children.split(\" \")\n    const numberOfWords = words.length\n\n    let part1 = \"\"\n    let part2 = \"\"\n\n    if (numberOfWords === 1) {\n        part1 = children.substring(0, Math.round(children.length / 2))\n        part2 = children.substring(Math.round(children.length / 2), children.length)\n    } else {\n        let half = 0\n        for (let index = 1; numberOfChars / 2 - index > 0; index++) {\n            half = children.indexOf(\" \", numberOfChars / 2 - index)\n            if (half !== -1) {\n                break\n            }\n        }\n        part1 = children.substring(0, half)\n        part2 = children.substring(half, children.length)\n    }\n\n    return (\n        <span className={classes(\"multi-style-vu88\", flex ? \"flex-vu88\" : \"grid-vu88\", className)}>\n            <span className={classes(\"part-1-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className1)} style={style1}>\n                {part1}\n            </span>\n            <span className={classes(\"part-2-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className2)} style={style2}>\n                {part2.trimEnd()}\n            </span>\n        </span>\n    )\n}\n\nexport default MultiStyleText\n","import {HTMLAttributes} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./ScrollButton.css\"\n\ninterface ScrollButtonProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ScrollButton = (props: ScrollButtonProps) => {\n    const {onClick, className, ...otherProps} = props\n    return (\n        <div className={classes(\"scroller-r94f\", className)} {...otherProps}>\n            <div className=\"mouse-r94f\">\n                <div className=\"scroll-r94f\"></div>\n            </div>\n            <ChevronDownIcon className=\"icon-r94f\" />\n        </div>\n    )\n}\n\nexport default ScrollButton\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useAuthenticationLabelsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.AuthenticationLabelsQuery = useStaticQuery(graphql`\n        query AuthenticationLabels {\n            allContentfulAuthenticationLabels {\n                nodes {\n                    node_locale\n                    username\n                    password\n                    newPasswordSuccess\n                    name\n                    lastName\n                    email\n                    companyName\n                    companyType\n                    phoneNumber\n                    role\n                    attributesUpdateSuccess\n                    confirmationMessage {\n                        raw\n                    }\n                    passwordChangeMessage {\n                        raw\n                    }\n                    resetMessage {\n                        raw\n                    }\n                    signInMessage {\n                        raw\n                    }\n                    signUpMessage {\n                        raw\n                    }\n                    cognitoErrorMessage {\n                        raw\n                    }\n                    confirmationCode\n                    changePasswordButtonLabel\n                    clickHereLinkLabel\n                    completeRegistrationButtonLabel\n                    confirmButtonLabel\n                    forgottenPasswordQuestion\n                    resendConfirmationCodeLinkLabel\n                    resendConfirmationCodeQuestion\n                    signInButtonLabel\n                    signOutButtonLabel\n                    signUpButtonLabel\n                    validationInvalidConfirmationCode\n                    validationInvalidCredentials\n                    validationInvalidEmail\n                    validationInvalidLastName\n                    validationInvalidName\n                    validationInvalidPassword\n                    validationInvalidPasswordSpecs {\n                        raw\n                    }\n                    validationInvalidPhoneNumber\n                    alreadyHaveAccount\n                    missingAccount\n                    accountRequired {\n                        raw\n                    }\n                    wellcome\n                    cancelButtonLabel\n                    newPassword\n                    oldPassword\n                    resetPasswordButtonLabel\n                    updateFailed\n                    validationInvalidVerificationCode\n                    verificationCode\n                    validationEmailAlreadyUsed\n                    confirmAccountSuccess\n                }\n            }\n            allContentfulAuthenticationLabels2 {\n                nodes {\n                    forgottenPasswordMessage {\n                        raw\n                    }\n                    forgottenPasswordVerificationMessage {\n                        raw\n                    }\n                    node_locale\n                    update\n                    updateAttributesMessage {\n                        raw\n                    }\n                    attributesUpdateSuccess\n                    deleteAccountMessage {\n                        raw\n                    }\n                    deleteAccountButtonLabel\n                    accountDeleteSuccess\n                    updateAttributesButtonLabel\n                    deleteAccount\n                    backToTheHomepage\n                    unkownErrorMessage\n                    privateAreaAccessLinkMessage\n                    privateAreaAccessMessage\n                }\n            }\n        }\n    `)\n\n    let labelsData1 = data.allContentfulAuthenticationLabels.nodes[0]!\n    let labelsData2 = data.allContentfulAuthenticationLabels2.nodes[0]!\n\n    for (let translation of data.allContentfulAuthenticationLabels.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData1 = translation\n            break\n        }\n    }\n\n    for (let translation of data.allContentfulAuthenticationLabels2.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData2 = translation\n            break\n        }\n    }\n\n    const labelsData = {...labelsData1, ...labelsData2}\n\n    return labelsData\n}\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {passwordRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ChangePasswordFields = {\n    password: string\n    newPassword: string\n}\n\nconst ChangePasswordForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const changePasswordForm = useForm<ChangePasswordFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onChangePasswordSubmitHandler: SubmitHandler<ChangePasswordFields> = data => {\n        setDisabled(true)\n        authContext.changePassword(data.password, data.newPassword).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={changePasswordForm.handleSubmit(onChangePasswordSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.passwordChangeMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.oldPassword}\n                    invalid={changePasswordForm.formState.errors.password !== undefined}\n                    {...changePasswordForm.register(\"password\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {changePasswordForm.formState.errors.password !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.newPassword}\n                    invalid={changePasswordForm.formState.errors.newPassword !== undefined}\n                    {...changePasswordForm.register(\"newPassword\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {changePasswordForm.formState.errors.newPassword !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.changePasswordButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedIn}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ChangePasswordForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {cognitoCodeRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ConfirmAccountFields = {\n    confirmationCode: string\n}\n\nconst ConfirmAccountForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const confirmationForm = useForm<ConfirmAccountFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onConfirmAccountSubmitHandler: SubmitHandler<ConfirmAccountFields> = data => {\n        setDisabled(true)\n        authContext.confirmAccount(data.confirmationCode).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={confirmationForm.handleSubmit(onConfirmAccountSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.confirmationMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.confirmationCode}\n                    invalid={confirmationForm.formState.errors.confirmationCode !== undefined}\n                    {...confirmationForm.register(\"confirmationCode\", {\n                        required: true,\n                        pattern: cognitoCodeRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {confirmationForm.formState.errors.confirmationCode && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidConfirmationCode}</div>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.confirmButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ConfirmAccountForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {emailRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ForgotPasswordFields = {\n    email: string\n}\n\nconst ForgottenPasswordForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, onButtonClickCallback, setEdited, ...otherProps} = props\n    const forgottenPasswordForm = useForm<ForgotPasswordFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onForgottenPasswordSubmitHandler: SubmitHandler<ForgotPasswordFields> = data => {\n        setDisabled(true)\n        authContext.forgottenPassword(data.email).then(() => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedOut = () => {\n        authContext.setStatus(\"SIGNED_OUT\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"on\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={forgottenPasswordForm.handleSubmit(onForgottenPasswordSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.forgottenPasswordMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"email\"\n                    placeholder={labels.email}\n                    invalid={\n                        forgottenPasswordForm.formState.errors.email !== undefined ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_INVALID\"\n                    }\n                    {...forgottenPasswordForm.register(\"email\", {\n                        required: true,\n                        pattern: emailRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {(forgottenPasswordForm.formState.errors.email !== undefined ||\n                    authContext.status === \"FORGOTTEN_PASSWORD_INVALID\") && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                OK\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedOut}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ForgottenPasswordForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {cognitoCodeRegex, passwordRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ForgottenPasswordVerificationFields = {\n    verificationCode: string\n    newPassword: string\n}\n\nconst ForgottenPasswordVerificationForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const forgottenPasswordVerificationForm = useForm<ForgottenPasswordVerificationFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onForgottenPasswordVerificationSubmitHandler: SubmitHandler<ForgottenPasswordVerificationFields> = data => {\n        setDisabled(true)\n        authContext.forgottenPasswordConfirmNewPassword(data.verificationCode, data.newPassword).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedOut = () => {\n        authContext.setStatus(\"SIGNED_OUT\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={forgottenPasswordVerificationForm.handleSubmit(onForgottenPasswordVerificationSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">\n                {labels.forgottenPasswordVerificationMessage?.raw}\n            </RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"number\"\n                    placeholder={labels.verificationCode}\n                    invalid={\n                        forgottenPasswordVerificationForm.formState.errors.verificationCode !== undefined ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION_INVALID\"\n                    }\n                    {...forgottenPasswordVerificationForm.register(\"verificationCode\", {\n                        required: true,\n                        pattern: cognitoCodeRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {(forgottenPasswordVerificationForm.formState.errors.verificationCode !== undefined ||\n                    authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION_INVALID\") && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidVerificationCode}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.newPassword}\n                    invalid={forgottenPasswordVerificationForm.formState.errors.newPassword !== undefined}\n                    {...forgottenPasswordVerificationForm.register(\"newPassword\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {forgottenPasswordVerificationForm.formState.errors.newPassword !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.changePasswordButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedOut}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ForgottenPasswordVerificationForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport CheckIcon from \"~/icons/CheckIcon\"\nimport ErrorIcon from \"~/icons/ErrorIcon\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {emailRegex, passwordRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype SignInFields = {\n    email: string\n    password: string\n}\n\nconst SignInForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const signInForm = useForm<SignInFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onSignInSubmitHandler: SubmitHandler<SignInFields> = data => {\n        setDisabled(true)\n        authContext.signIn(data.email, data.password).then(result => {\n            setDisabled(false)\n            setEdited(false)\n            // if (result === \"SIGNED_IN\") {\n            //     window.scrollTo({top: 0, behavior: \"smooth\"})\n            // }\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToForgottenPassword = () => {\n        authContext.setStatus(\"FORGOTTEN_PASSWORD\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"on\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={signInForm.handleSubmit(onSignInSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.signInMessage?.raw}</RichTextField>\n            {authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_SUCCESS\" && (\n                <div className=\"center-pt86\">\n                    <CheckIcon className=\"check-icon-pt86\" />\n                    <div className=\"success-label-pt86\">{labels.newPasswordSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_OUT_ACCOUNT_CONFIRMED\" && (\n                <div className=\"center-pt86\">\n                    <CheckIcon className=\"check-icon-pt86\" />\n                    <div className=\"success-label-pt86\">{labels.confirmAccountSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_FAIL\" && (\n                <div className=\"center-pt86\">\n                    <ErrorIcon className=\"error-icon-pt86\" />\n                    <div className=\"success-label-pt86\">{labels.updateFailed}</div>\n                </div>\n            )}\n            <div className=\"cell-pt86\">\n                <InputText\n                    type=\"email\"\n                    placeholder={labels.email}\n                    invalid={\n                        signInForm.formState.errors.email !== undefined ||\n                        (authContext.status === \"SIGNED_OUT_INVALID\" && edited === false)\n                    }\n                    {...signInForm.register(\"email\", {\n                        required: true,\n                        pattern: emailRegex,\n                        disabled: disabled,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signInForm.formState.errors.email && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    type=\"password\"\n                    placeholder={labels.password}\n                    invalid={\n                        signInForm.formState.errors.password !== undefined ||\n                        (authContext.status === \"SIGNED_OUT_INVALID\" && edited === false)\n                    }\n                    {...signInForm.register(\"password\", {\n                        required: true,\n                        pattern: passwordRegex,\n                        disabled: disabled,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signInForm.formState.errors.password !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n                {authContext.status === \"SIGNED_OUT_INVALID\" && edited === false && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidCredentials}</div>\n                )}\n                <div className=\"forgotten-password-pt86\">\n                    <Button color=\"link\" onClick={switchToForgottenPassword}>\n                        {labels.forgottenPasswordQuestion}\n                    </Button>\n                </div>\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.signInButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default SignInForm\n","import {useContext, useRef} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext, {AllAttributes} from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {emailRegex, nameRegex, passwordRegex, phoneRegex} from \"~/utilities/RegexStrings\"\nimport TransitionContext from \"../../../contexts/TransitionContext\"\nimport {useLinksQuery} from \"../../../queries/LinksQuery\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype SignUpFields = {\n    email: string\n    password: string\n    given_name: string\n    family_name: string\n    phone_number: string\n    company_name: string | undefined\n    company_type: string | undefined\n    role: string | undefined\n}\n\nconst SignUpForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const signUpForm = useForm<SignUpFields>()\n    const emailRef = useRef<HTMLDivElement>(null)\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n    const links = useLinksQuery()\n    const transitionContext = useContext(TransitionContext)\n\n    const onSignUpSubmitHandler: SubmitHandler<SignUpFields> = data => {\n        setDisabled(true)\n        const adkaorauser: AllAttributes = {\n            given_name: data.given_name,\n            family_name: data.family_name,\n            phone_number: data.phone_number,\n            company_name: data.company_name,\n            company_type: data.company_type,\n            role: data.role,\n        }\n        authContext.signUp(data.email, data.password, adkaorauser).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={signUpForm.handleSubmit(onSignUpSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.signUpMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\" ref={emailRef}>\n                <InputText\n                    disabled={disabled}\n                    type=\"email\"\n                    placeholder={labels.email}\n                    invalid={\n                        signUpForm.formState.errors.email !== undefined ||\n                        authContext.status === \"SIGN_UP_ALREADY_REGISTERED\"\n                    }\n                    {...signUpForm.register(\"email\", {\n                        required: true,\n                        pattern: emailRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {authContext.status === \"SIGN_UP_ALREADY_REGISTERED\" && edited === false && (\n                    <div className=\"messages-box-pt86\">{labels.validationEmailAlreadyUsed}</div>\n                )}\n                {signUpForm.formState.errors.email !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.password}\n                    invalid={signUpForm.formState.errors.password !== undefined}\n                    {...signUpForm.register(\"password\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.password !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.name}\n                    invalid={signUpForm.formState.errors.given_name !== undefined}\n                    {...signUpForm.register(\"given_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.given_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.lastName}\n                    invalid={signUpForm.formState.errors.family_name !== undefined}\n                    {...signUpForm.register(\"family_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.family_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidLastName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"tel\"\n                    placeholder={labels.phoneNumber}\n                    invalid={signUpForm.formState.errors.phone_number !== undefined}\n                    {...signUpForm.register(\"phone_number\", {\n                        required: true,\n                        pattern: phoneRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.phone_number !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidPhoneNumber}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyName}\n                    invalid={signUpForm.formState.errors.company_name !== undefined}\n                    {...signUpForm.register(\"company_name\", {\n                        required: false,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyType}\n                    invalid={signUpForm.formState.errors.company_type !== undefined}\n                    {...signUpForm.register(\"company_type\", {\n                        required: false,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.role}\n                    invalid={signUpForm.formState.errors.role !== undefined}\n                    {...signUpForm.register(\"role\", {\n                        required: false,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.completeRegistrationButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default SignUpForm\n","import {useContext} from \"react\"\nimport Button from \"~/components/UI/Button/Button\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport CheckIcon from \"~/icons/CheckIcon\"\nimport ErrorIcon from \"~/icons/ErrorIcon\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {useLinksQuery} from \"../../../queries/LinksQuery\"\nimport GenericLink from \"../../UI/GenericLink/GenericLink\"\n\nimport \"./UserPanel.css\"\n\ninterface UserPanelProps extends React.HTMLAttributes<HTMLDivElement> {\n    disabled: boolean\n    setDisabled: (value: boolean) => void\n    edited: boolean\n    setEdited: (value: boolean) => void\n}\n\nconst UserPanel = (props: UserPanelProps) => {\n    const {className, children, disabled, setDisabled, edited, setEdited, ...otherProps} = props\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n    const links = useLinksQuery()\n\n    const onSignOutClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        setDisabled(true)\n        authContext.signOut().then(() => {\n            setDisabled(false)\n        })\n    }\n\n    const onChangePasswordClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        authContext.setStatus(\"CHANGE_PASSWORD\")\n    }\n\n    const onUpdateAttributesClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        authContext.setStatus(\"UPDATE_ATTRIBUTES\")\n    }\n    const onDeleteAccountClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        authContext.setStatus(\"DELETE_ACCOUNT\")\n    }\n\n    return (\n        <div className={classes(\"user-panel-container-g9dr\", className)} {...otherProps}>\n            {authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_SUCCESS\" && (\n                <div className=\"center-g9dr\">\n                    <CheckIcon className=\"check-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.newPasswordSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_FAIL\" && (\n                <div className=\"center-g9dr\">\n                    <ErrorIcon className=\"error-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.updateFailed}</div>\n                </div>\n            )}\n            {authContext.status === \"UPDATE_ATTRIBUTES_SUCCESS\" && (\n                <div className=\"center-g9dr\">\n                    <CheckIcon className=\"check-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.attributesUpdateSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"UPDATE_ATTRIBUTES_FAIL\" && (\n                <div className=\"center-g9dr\">\n                    <ErrorIcon className=\"error-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.updateFailed}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_IN\" && (\n                <div className=\"signed-in-message-g9dr\">\n                    {labels.privateAreaAccessMessage}\n                    <GenericLink to={links.privateArea.url}>{links.privateArea.name}</GenericLink>\n                </div>\n            )}\n            <div className=\"left-g9dr\">\n                {authContext.attributes?.email && <div>{authContext.attributes?.email}</div>}\n                {authContext.attributes?.given_name && <div>{authContext.attributes?.given_name}</div>}\n                {authContext.attributes?.family_name && <div>{authContext.attributes?.family_name}</div>}\n                {authContext.attributes?.phone_number && <div>{authContext.attributes?.phone_number}</div>}\n                {authContext.attributes?.company_name && <div>{authContext.attributes?.company_name}</div>}\n                {authContext.attributes?.company_type && <div>{authContext.attributes?.company_type}</div>}\n                {authContext.attributes?.role && <div>{authContext.attributes?.role}</div>}\n            </div>\n            <div className=\"right-g9dr\">\n                <Button onClick={onSignOutClickHandler} disabled={disabled}>\n                    {labels.signOutButtonLabel}\n                </Button>\n                <Button disabled={disabled} onClick={onChangePasswordClickHandler}>\n                    {labels.changePasswordButtonLabel}\n                </Button>\n                <Button disabled={disabled} onClick={onUpdateAttributesClickHandler}>\n                    {labels.update}\n                </Button>\n                <Button color=\"red\" onClick={onDeleteAccountClickHandler} disabled={disabled}>\n                    {labels.deleteAccount}\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default UserPanel\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {emailRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype DeleteAccountFields = {\n    email: string\n}\n\nconst DeleteAccountForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const deleteAccountForm = useForm<DeleteAccountFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onDeleteAccountSubmitHandler: SubmitHandler<DeleteAccountFields> = data => {\n        setDisabled(true)\n        authContext.deleteAccount().then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={deleteAccountForm.handleSubmit(onDeleteAccountSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.deleteAccountMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"email\"\n                    placeholder={labels.email}\n                    invalid={deleteAccountForm.formState.errors.email !== undefined}\n                    {...deleteAccountForm.register(\"email\", {\n                        required: true,\n                        validate: value => value === authContext.attributes?.email,\n                        pattern: emailRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {deleteAccountForm.formState.errors.email && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <Button color=\"red\" className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.confirmButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedIn}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default DeleteAccountForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext, {AllAttributes} from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {nameRegex, phoneRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype UpdatedAttributesFields = {\n    given_name: string\n    family_name: string\n    phone_number: string\n    company_name: string | undefined\n    company_type: string | undefined\n    role: string | undefined\n}\n\nconst UpdatedAttributesForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const updatedAttributesForm = useForm<UpdatedAttributesFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onUpdatedAttributesSubmitHandler: SubmitHandler<UpdatedAttributesFields> = data => {\n        setDisabled(true)\n        const adkaorauser: AllAttributes = {\n            given_name: data.given_name,\n            family_name: data.family_name,\n            phone_number: data.phone_number,\n            company_name: data.company_name,\n            company_type: data.company_type,\n            role: data.role,\n        }\n        authContext.updateAttributes(adkaorauser).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={updatedAttributesForm.handleSubmit(onUpdatedAttributesSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.updateAttributesMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.name}\n                    invalid={updatedAttributesForm.formState.errors.given_name !== undefined}\n                    {...updatedAttributesForm.register(\"given_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                        value: authContext.attributes?.given_name ? authContext.attributes?.given_name : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {updatedAttributesForm.formState.errors.given_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.lastName}\n                    invalid={updatedAttributesForm.formState.errors.family_name !== undefined}\n                    {...updatedAttributesForm.register(\"family_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                        value: authContext.attributes?.family_name ? authContext.attributes?.family_name : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {updatedAttributesForm.formState.errors.family_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidLastName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"tel\"\n                    placeholder={labels.phoneNumber}\n                    invalid={updatedAttributesForm.formState.errors.phone_number !== undefined}\n                    {...updatedAttributesForm.register(\"phone_number\", {\n                        required: true,\n                        pattern: phoneRegex,\n                        value: authContext.attributes?.phone_number ? authContext.attributes?.phone_number : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {updatedAttributesForm.formState.errors.phone_number !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidPhoneNumber}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyName}\n                    invalid={updatedAttributesForm.formState.errors.company_name !== undefined}\n                    {...updatedAttributesForm.register(\"company_name\", {\n                        required: false,\n                        value: authContext.attributes?.company_name ? authContext.attributes?.company_name : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyType}\n                    invalid={updatedAttributesForm.formState.errors.company_type !== undefined}\n                    {...updatedAttributesForm.register(\"company_type\", {\n                        required: false,\n                        value: authContext.attributes?.company_type ? authContext.attributes?.company_type : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.role}\n                    invalid={updatedAttributesForm.formState.errors.role !== undefined}\n                    {...updatedAttributesForm.register(\"role\", {\n                        required: false,\n                        value: authContext.attributes?.role ? authContext.attributes?.role : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.updateAttributesButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedIn}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default UpdatedAttributesForm\n","import {PageProps} from \"gatsby\"\nimport {IGatsbyImageData} from \"gatsby-plugin-image\"\nimport {GatsbySeo} from \"gatsby-plugin-next-seo\"\nimport {Fragment, useContext, useRef, useState} from \"react\"\nimport ChangePasswordForm from \"~/components/Forms/Authentication/ChangePasswordForm\"\nimport ConfirmAccountForm from \"~/components/Forms/Authentication/ConfirmAccountForm\"\nimport ForgottenPasswordForm from \"~/components/Forms/Authentication/ForgottenPasswordForm\"\nimport ForgottenPasswordVerificationForm from \"~/components/Forms/Authentication/ForgottenPasswordVerification\"\nimport SignInForm from \"~/components/Forms/Authentication/SignInForm\"\nimport SignUpForm from \"~/components/Forms/Authentication/SignUpForm\"\nimport HeroSection from \"~/components/Sections/HeroSection/HeroSection\"\nimport UserPanel from \"~/components/Sections/UserPanel/UserPanel\"\nimport Button from \"~/components/UI/Button/Button\"\nimport MultiStyleText from \"~/components/UI/MultiStyleText/MultiStyleText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport ScrollButton from \"~/components/UI/ScrollButton/ScrollButton\"\nimport SectionContainer from \"~/components/UI/SectionContainer/SectionContainer\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport DeleteAccountForm from \"../components/Forms/Authentication/DeleteAccountForm\"\nimport UpdatedAttributesForm from \"../components/Forms/Authentication/UpdateAttributesForm\"\nimport GenericLink from \"../components/UI/GenericLink/GenericLink\"\nimport CheckIcon from \"../icons/CheckIcon\"\n\nimport \"./AuthenticationPageTemplate.css\"\n\ninterface SignInPageProps extends PageProps<any, SignInPageContext> {}\n\nconst SignInPage: React.FC<SignInPageProps> = props => {\n    const signInPageData = props.pageContext.data\n    const [isEdited, setEdited] = useState(false)\n    const [isDisabled, setDisabled] = useState(false)\n    const containerRef = useRef<HTMLDivElement>(null)\n    const authContext = useContext(AuthContext)\n    const links = useLinksQuery()\n    const labels = useAuthenticationLabelsQuery()\n    const i18n = useContext(I18nContext)\n    let timeoutRef = useRef<NodeJS.Timeout>()\n\n    const signOut = () => {\n        setDisabled(true)\n        authContext.signOut().then(() => {\n            setDisabled(false)\n        })\n    }\n\n    const centerForm = () => {\n        if (!containerRef.current) return\n        containerRef.current.scrollIntoView({behavior: \"smooth\", block: \"start\"})\n    }\n\n    const switchToSignUp = () => {\n        authContext.setStatus(\"SIGN_UP\")\n        timeoutRef.current = setTimeout(() => centerForm(), 10)\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n    }\n\n    const switchToSignedOut = () => {\n        authContext.setStatus(\"SIGNED_OUT\")\n        timeoutRef.current = setTimeout(() => centerForm(), 10)\n    }\n\n    return (\n        <Fragment>\n            <GatsbySeo\n                title={`${signInPageData.title}`}\n                canonical={`${process.env.SITE_URL}${links.authentication.url}`}\n                language={i18n.language}\n                openGraph={{\n                    url: `${process.env.SITE_URL}${links.about.url}`,\n                    title: `${signInPageData.title}`,\n                    locale: i18n.language,\n                    images: [\n                        {\n                            url: `${signInPageData.heroImage?.url}`,\n                            width: Number(signInPageData.heroImage?.width),\n                            height: Number(signInPageData.heroImage?.height),\n                            alt: `${signInPageData.heroImage?.title}`,\n                        },\n                    ],\n                }}\n            />\n            <HeroSection\n                image={signInPageData.heroImage?.gatsbyImageData}\n                imageAlt={signInPageData.heroImage?.title}\n                mobileImage={signInPageData.heroImageMobile?.gatsbyImageData}\n            >\n                {authContext.status === \"SIGNED_IN\" && authContext.attributes ? (\n                    <Fragment>\n                        <h1 className=\"hero-title-part-3-d2bh\">{labels.wellcome}</h1>\n                        <h2 className=\"hero-title-part-4-d2bh\">{`${authContext.attributes?.given_name} ${authContext.attributes?.family_name}`}</h2>\n                    </Fragment>\n                ) : (\n                    <MultiStyleText flex className1=\"hero-title-part-1-d2bh\" className2=\"hero-title-part-2-d2bh\">\n                        {signInPageData.title}\n                    </MultiStyleText>\n                )}\n            </HeroSection>\n            <SectionContainer tabbed marginPost customTab={<ScrollButton />}>\n                <div className=\"authentication-container-8hxd\" ref={containerRef}>\n                    {authContext.status === \"GENERIC_ERROR\" && (\n                        <RichTextField className=\"authentication-text-8hxd\">{labels.unkownErrorMessage}</RichTextField>\n                    )}\n                    {authContext.status === \"INVALID_USER_POOL\" && (\n                        <RichTextField className=\"authentication-text-8hxd\">\n                            {labels.cognitoErrorMessage?.raw}\n                        </RichTextField>\n                    )}\n                    {(authContext.status === \"SIGN_UP\" ||\n                        authContext.status === \"SIGN_UP_INVALID\" ||\n                        authContext.status === \"SIGN_UP_ALREADY_REGISTERED\") && (\n                        <SignUpForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"CONFIRMATION_NECESSARY\" && (\n                        <ConfirmAccountForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {(authContext.status === \"SIGNED_OUT\" ||\n                        authContext.status === \"SIGNED_OUT_INVALID\" ||\n                        authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_SUCCESS\" ||\n                        authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_FAIL\" ||\n                        authContext.status === \"SIGNED_OUT_ACCOUNT_CONFIRMED\") && (\n                        <SignInForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"NEW_PASSWORD_REQUIRED\" && (\n                        <ConfirmAccountForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"CHANGE_PASSWORD\" && (\n                        <ChangePasswordForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {(authContext.status === \"FORGOTTEN_PASSWORD\" ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_INVALID\") && (\n                        <ForgottenPasswordForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {(authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION\" ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION_INVALID\") && (\n                        <ForgottenPasswordVerificationForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"UPDATE_ATTRIBUTES\" && (\n                        <UpdatedAttributesForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"DELETE_ACCOUNT\" && (\n                        <DeleteAccountForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"DELETE_ACCOUNT_SUCCESS\" && (\n                        <div className=\"user-panel-container-g9dr\">\n                            <div className=\"center-g9dr\">\n                                <CheckIcon className=\"check-icon-g9dr\" />\n                                <div className=\"success-label-g9dr\">\n                                    {labels.accountDeleteSuccess}\n                                    <GenericLink\n                                        className=\"link-8hxd\"\n                                        to={links.homepage.url}\n                                        onClick={() => authContext.resetStatus()}\n                                    >\n                                        {labels.backToTheHomepage}\n                                    </GenericLink>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {(authContext.status === \"SIGNED_IN\" ||\n                        authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_SUCCESS\" ||\n                        authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_FAIL\" ||\n                        authContext.status === \"UPDATE_ATTRIBUTES_SUCCESS\" ||\n                        authContext.status === \"UPDATE_ATTRIBUTES_FAIL\") && (\n                        <Fragment>\n                            <UserPanel\n                                disabled={isDisabled}\n                                setDisabled={setDisabled}\n                                edited={isEdited}\n                                setEdited={setEdited}\n                            />\n                        </Fragment>\n                    )}\n                </div>\n                {(authContext.status === \"SIGNED_OUT\" || authContext.status === \"SIGNED_OUT_INVALID\") && (\n                    <div className=\"switch-container-8hxd\">\n                        <span className=\"switch-label-8hxd\">\n                            {`${labels.missingAccount} `}\n                            <Button color=\"link\" onClick={switchToSignUp}>\n                                {labels.clickHereLinkLabel}\n                            </Button>\n                        </span>\n                    </div>\n                )}\n                {(authContext.status === \"SIGN_UP\" ||\n                    authContext.status === \"SIGN_UP_INVALID\" ||\n                    authContext.status === \"SIGN_UP_ALREADY_REGISTERED\") && (\n                    <div className=\"switch-container-8hxd\">\n                        <span className=\"switch-label-8hxd\">\n                            {`${labels.alreadyHaveAccount} `}\n                            <Button color=\"link\" onClick={switchToSignedOut}>\n                                {labels.clickHereLinkLabel}\n                            </Button>\n                        </span>\n                    </div>\n                )}\n                {authContext.status === \"CONFIRMATION_NECESSARY\" ||\n                    authContext.status === \"FORGOTTEN_PASSWORD\" ||\n                    (authContext.status === \"FORGOTTEN_PASSWORD_INVALID\" && (\n                        <div className=\"switch-container-8hxd\">\n                            <span className=\"switch-label-8hxd\">\n                                {`${labels.resendConfirmationCodeQuestion} `}\n                                <Button color=\"link\" onClick={() => authContext.resendConfirmationCode()}>\n                                    {labels.resendConfirmationCodeLinkLabel}\n                                </Button>\n                            </span>\n                        </div>\n                    ))}\n            </SectionContainer>\n        </Fragment>\n    )\n}\n\nexport default SignInPage\n\ninterface SignInPageContext {\n    data: {\n        readonly node_locale: string\n        readonly slug: string | null\n        readonly title: string | null\n        readonly heroImage: {\n            readonly gatsbyImageData: IGatsbyImageData | null\n            readonly url: string | null\n            readonly width: number | null\n            readonly height: number | null\n            readonly title: string | null\n        } | null\n        readonly heroImageMobile: {\n            readonly gatsbyImageData: IGatsbyImageData | null\n            readonly url: string | null\n            readonly width: number | null\n            readonly height: number | null\n            readonly title: string | null\n        } | null\n    }\n}\n"],"names":["props","className","className1","className2","flex","style1","style2","children","_children","trim","numberOfChars","length","numberOfWords","split","part1","part2","substring","Math","round","half","index","indexOf","_jsxs","classes","_jsx","style","trimEnd","onClick","otherProps","ChevronDownIcon","useAuthenticationLabelsQuery","i18n","useContext","I18nContext","data","useStaticQuery","labelsData1","allContentfulAuthenticationLabels","nodes","labelsData2","allContentfulAuthenticationLabels2","translation","node_locale","language","disabled","setDisabled","edited","setEdited","onButtonClickCallback","changePasswordForm","useForm","authContext","AuthContext","labels","onSubmit","handleSubmit","changePassword","password","newPassword","then","result","RichTextField","passwordChangeMessage","_labels$passwordChang","raw","InputText","type","placeholder","oldPassword","invalid","undefined","formState","errors","register","required","pattern","passwordRegex","containerClassName","onKeyDown","validationInvalidPasswordSpecs","_labels$validationInv","_labels$validationInv2","Button","loading","changePasswordButtonLabel","color","setStatus","cancelButtonLabel","confirmationForm","autoComplete","confirmAccount","confirmationCode","confirmationMessage","_labels$confirmationM","cognitoCodeRegex","validationInvalidConfirmationCode","confirmButtonLabel","forgottenPasswordForm","forgottenPassword","email","forgottenPasswordMessage","_labels$forgottenPass","status","emailRegex","validationInvalidEmail","forgottenPasswordVerificationForm","forgottenPasswordConfirmNewPassword","verificationCode","forgottenPasswordVerificationMessage","validationInvalidVerificationCode","signInForm","signIn","signInMessage","_labels$signInMessage","CheckIcon","newPasswordSuccess","confirmAccountSuccess","ErrorIcon","updateFailed","validationInvalidCredentials","forgottenPasswordQuestion","signInButtonLabel","signUpForm","emailRef","useRef","useLinksQuery","TransitionContext","adkaorauser","given_name","family_name","phone_number","company_name","company_type","role","signUp","signUpMessage","_labels$signUpMessage","ref","validationEmailAlreadyUsed","name","nameRegex","validationInvalidName","lastName","validationInvalidLastName","phoneNumber","phoneRegex","validationInvalidPhoneNumber","companyName","companyType","completeRegistrationButtonLabel","links","attributesUpdateSuccess","privateAreaAccessMessage","GenericLink","to","privateArea","url","attributes","_authContext$attribut","_authContext$attribut2","_authContext$attribut3","_authContext$attribut4","_authContext$attribut5","_authContext$attribut6","_authContext$attribut7","_authContext$attribut8","_authContext$attribut9","_authContext$attribut10","_authContext$attribut11","_authContext$attribut12","_authContext$attribut13","_authContext$attribut14","event","signOut","signOutButtonLabel","update","deleteAccount","deleteAccountForm","deleteAccountMessage","_labels$deleteAccount","validate","value","updatedAttributesForm","updateAttributes","updateAttributesMessage","_labels$updateAttribu","updateAttributesButtonLabel","signInPageData","pageContext","isEdited","useState","isDisabled","containerRef","timeoutRef","centerForm","current","scrollIntoView","behavior","block","Fragment","GatsbySeo","title","canonical","authentication","openGraph","about","locale","images","heroImage","_signInPageData$heroI","width","Number","_signInPageData$heroI2","height","_signInPageData$heroI3","alt","_signInPageData$heroI4","HeroSection","image","_signInPageData$heroI5","gatsbyImageData","imageAlt","_signInPageData$heroI6","mobileImage","heroImageMobile","_signInPageData$heroI7","wellcome","MultiStyleText","SectionContainer","tabbed","marginPost","customTab","ScrollButton","unkownErrorMessage","cognitoErrorMessage","_labels$cognitoErrorM","SignUpForm","ConfirmAccountForm","SignInForm","ChangePasswordForm","ForgottenPasswordForm","ForgottenPasswordVerificationForm","UpdatedAttributesForm","DeleteAccountForm","accountDeleteSuccess","homepage","resetStatus","backToTheHomepage","UserPanel","missingAccount","setTimeout","clickHereLinkLabel","alreadyHaveAccount","resendConfirmationCodeQuestion","resendConfirmationCode","resendConfirmationCodeLinkLabel"],"sourceRoot":""}