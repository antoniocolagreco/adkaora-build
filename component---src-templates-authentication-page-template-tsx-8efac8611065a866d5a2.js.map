{"version":3,"file":"component---src-templates-authentication-page-template-tsx-8efac8611065a866d5a2.js","mappings":"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","sources":["webpack://adkaora.com/./src/components/UI/RichText/RichText.tsx","webpack://adkaora.com/./src/components/UI/ScrollButton/ScrollButton.tsx","webpack://adkaora.com/./src/queries/AuthenticationLabelsQuery.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ChangePasswordForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ConfirmAccountForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ForgottenPasswordForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ForgottenPasswordVerification.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/SignInForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/SignUpForm.tsx","webpack://adkaora.com/./src/components/Sections/UserPanel/UserPanel.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/DeleteAccountForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/UpdateAttributesForm.tsx","webpack://adkaora.com/./src/templates/AuthenticationPageTemplate.tsx"],"sourcesContent":["import {documentToHtmlString} from \"@contentful/rich-text-html-renderer\"\nimport clsx from \"clsx\"\nimport React from \"react\"\nimport \"./RichText.css\"\n\nexport interface RichTextFieldProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst RichTextField: React.FC<RichTextFieldProps> = props => {\n    const {children, className, ...otherPros} = props\n\n    if (typeof children !== \"string\") return null\n\n    return (\n        <div\n            className={clsx(\"rich-56aq\", className)}\n            dangerouslySetInnerHTML={children ? {__html: documentToHtmlString(JSON.parse(children))} : undefined}\n            {...otherPros}\n        />\n    )\n}\n\nexport default RichTextField\n","import clsx from \"clsx\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport \"./ScrollButton.css\"\n\ninterface ScrollButtonProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ScrollButton = (props: ScrollButtonProps) => {\n    const {onClick, className, ...otherProps} = props\n    return (\n        <div className={clsx(\"scroller-r94f\", className)} {...otherProps}>\n            <div className=\"mouse-r94f\">\n                <div className=\"scroll-r94f\"></div>\n            </div>\n            <ChevronDownIcon className=\"icon-r94f\" />\n        </div>\n    )\n}\n\nexport default ScrollButton\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useAuthenticationLabelsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.AuthenticationLabelsQuery = useStaticQuery(graphql`\n        query AuthenticationLabels {\n            allContentfulAuthenticationLabels {\n                nodes {\n                    node_locale\n                    username\n                    password\n                    newPasswordSuccess\n                    name\n                    lastName\n                    email\n                    companyName\n                    companyType\n                    phoneNumber\n                    role\n                    attributesUpdateSuccess\n                    confirmationMessage {\n                        raw\n                    }\n                    passwordChangeMessage {\n                        raw\n                    }\n                    resetMessage {\n                        raw\n                    }\n                    signInMessage {\n                        raw\n                    }\n                    signUpMessage {\n                        raw\n                    }\n                    cognitoErrorMessage {\n                        raw\n                    }\n                    confirmationCode\n                    changePasswordButtonLabel\n                    clickHereLinkLabel\n                    completeRegistrationButtonLabel\n                    confirmButtonLabel\n                    forgottenPasswordQuestion\n                    resendConfirmationCodeLinkLabel\n                    resendConfirmationCodeQuestion\n                    signInButtonLabel\n                    signOutButtonLabel\n                    signUpButtonLabel\n                    validationInvalidConfirmationCode\n                    validationInvalidCredentials\n                    validationInvalidEmail\n                    validationInvalidLastName\n                    validationInvalidName\n                    validationInvalidPassword\n                    validationInvalidPasswordSpecs {\n                        raw\n                    }\n                    validationInvalidPhoneNumber\n                    alreadyHaveAccount\n                    missingAccount\n                    accountRequired {\n                        raw\n                    }\n                    wellcome\n                    cancelButtonLabel\n                    newPassword\n                    oldPassword\n                    resetPasswordButtonLabel\n                    updateFailed\n                    validationInvalidVerificationCode\n                    verificationCode\n                    validationEmailAlreadyUsed\n                    confirmAccountSuccess\n                }\n            }\n            allContentfulAuthenticationLabels2 {\n                nodes {\n                    forgottenPasswordMessage {\n                        raw\n                    }\n                    forgottenPasswordVerificationMessage {\n                        raw\n                    }\n                    node_locale\n                    update\n                    updateAttributesMessage {\n                        raw\n                    }\n                    attributesUpdateSuccess\n                    deleteAccountMessage {\n                        raw\n                    }\n                    deleteAccountButtonLabel\n                    accountDeleteSuccess\n                    updateAttributesButtonLabel\n                    deleteAccount\n                    backToTheHomepage\n                    unkownErrorMessage\n                    privateAreaAccessLinkMessage\n                    privateAreaAccessMessage\n                }\n            }\n        }\n    `)\n\n    let labelsData1 = data.allContentfulAuthenticationLabels.nodes[0]!\n    let labelsData2 = data.allContentfulAuthenticationLabels2.nodes[0]!\n\n    for (const translation of data.allContentfulAuthenticationLabels.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData1 = translation\n            break\n        }\n    }\n\n    for (const translation of data.allContentfulAuthenticationLabels2.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData2 = translation\n            break\n        }\n    }\n\n    const labelsData = {...labelsData1, ...labelsData2}\n\n    return labelsData\n}\n","import clsx from \"clsx\"\nimport React, {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {passwordRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ChangePasswordFields = {\n    password: string\n    newPassword: string\n}\n\nconst ChangePasswordForm: React.FC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const changePasswordForm = useForm<ChangePasswordFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onChangePasswordSubmitHandler: SubmitHandler<ChangePasswordFields> = data => {\n        setDisabled(true)\n        authContext.changePassword(data.password, data.newPassword).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            className={clsx(\"form-login-pt86\", className)}\n            onSubmit={changePasswordForm.handleSubmit(onChangePasswordSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.passwordChangeMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.oldPassword}\n                    invalid={changePasswordForm.formState.errors.password !== undefined}\n                    {...changePasswordForm.register(\"password\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {changePasswordForm.formState.errors.password !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.newPassword}\n                    invalid={changePasswordForm.formState.errors.newPassword !== undefined}\n                    {...changePasswordForm.register(\"newPassword\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {changePasswordForm.formState.errors.newPassword !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.changePasswordButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedIn}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ChangePasswordForm\n","import clsx from \"clsx\"\nimport React, {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {cognitoCodeRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ConfirmAccountFields = {\n    confirmationCode: string\n}\n\nconst ConfirmAccountForm: React.FC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const confirmationForm = useForm<ConfirmAccountFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onConfirmAccountSubmitHandler: SubmitHandler<ConfirmAccountFields> = data => {\n        setDisabled(true)\n        authContext.confirmAccount(data.confirmationCode).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={clsx(\"form-login-pt86\", className)}\n            onSubmit={confirmationForm.handleSubmit(onConfirmAccountSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.confirmationMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.confirmationCode}\n                    invalid={confirmationForm.formState.errors.confirmationCode !== undefined}\n                    {...confirmationForm.register(\"confirmationCode\", {\n                        required: true,\n                        pattern: cognitoCodeRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {confirmationForm.formState.errors.confirmationCode && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidConfirmationCode}</div>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.confirmButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ConfirmAccountForm\n","import clsx from \"clsx\"\nimport React, {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {emailRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ForgotPasswordFields = {\n    email: string\n}\n\nconst ForgottenPasswordForm: React.FC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, onButtonClickCallback, setEdited, ...otherProps} = props\n    const forgottenPasswordForm = useForm<ForgotPasswordFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onForgottenPasswordSubmitHandler: SubmitHandler<ForgotPasswordFields> = data => {\n        setDisabled(true)\n        authContext.forgottenPassword(data.email).then(() => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedOut = () => {\n        authContext.setStatus(\"SIGNED_OUT\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"on\"\n            className={clsx(\"form-login-pt86\", className)}\n            onSubmit={forgottenPasswordForm.handleSubmit(onForgottenPasswordSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.forgottenPasswordMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    placeholder={labels.email}\n                    invalid={\n                        forgottenPasswordForm.formState.errors.email !== undefined ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_INVALID\"\n                    }\n                    {...forgottenPasswordForm.register(\"email\", {\n                        required: true,\n                        pattern: emailRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {(forgottenPasswordForm.formState.errors.email !== undefined ||\n                    authContext.status === \"FORGOTTEN_PASSWORD_INVALID\") && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                OK\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedOut}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ForgottenPasswordForm\n","import clsx from \"clsx\"\nimport React, {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {cognitoCodeRegex, passwordRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ForgottenPasswordVerificationFields = {\n    verificationCode: string\n    newPassword: string\n}\n\nconst ForgottenPasswordVerificationForm: React.FC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const forgottenPasswordVerificationForm = useForm<ForgottenPasswordVerificationFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onForgottenPasswordVerificationSubmitHandler: SubmitHandler<ForgottenPasswordVerificationFields> = data => {\n        setDisabled(true)\n        authContext.forgottenPasswordConfirmNewPassword(data.verificationCode, data.newPassword).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedOut = () => {\n        authContext.setStatus(\"SIGNED_OUT\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={clsx(\"form-login-pt86\", className)}\n            onSubmit={forgottenPasswordVerificationForm.handleSubmit(onForgottenPasswordVerificationSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">\n                {labels.forgottenPasswordVerificationMessage?.raw}\n            </RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    placeholder={labels.verificationCode}\n                    invalid={\n                        forgottenPasswordVerificationForm.formState.errors.verificationCode !== undefined ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION_INVALID\"\n                    }\n                    {...forgottenPasswordVerificationForm.register(\"verificationCode\", {\n                        required: true,\n                        pattern: cognitoCodeRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {(forgottenPasswordVerificationForm.formState.errors.verificationCode !== undefined ||\n                    authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION_INVALID\") && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidVerificationCode}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    placeholder={labels.newPassword}\n                    invalid={forgottenPasswordVerificationForm.formState.errors.newPassword !== undefined}\n                    {...forgottenPasswordVerificationForm.register(\"newPassword\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {forgottenPasswordVerificationForm.formState.errors.newPassword !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.changePasswordButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedOut}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ForgottenPasswordVerificationForm\n","import clsx from \"clsx\"\nimport React, {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport CheckIcon from \"~/icons/CheckIcon\"\nimport ErrorIcon from \"~/icons/ErrorIcon\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {emailRegex, passwordRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype SignInFields = {\n    email: string\n    password: string\n}\n\nconst SignInForm: React.FC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const signInForm = useForm<SignInFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onSignInSubmitHandler: SubmitHandler<SignInFields> = data => {\n        setDisabled(true)\n        authContext.signIn(data.email, data.password).then(result => {\n            setDisabled(false)\n            setEdited(false)\n            // if (result === \"SIGNED_IN\") {\n            //     window.scrollTo({top: 0, behavior: \"smooth\"})\n            // }\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToForgottenPassword = () => {\n        authContext.setStatus(\"FORGOTTEN_PASSWORD\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"on\"\n            className={clsx(\"form-login-pt86\", className)}\n            onSubmit={signInForm.handleSubmit(onSignInSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.signInMessage?.raw}</RichTextField>\n            {authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_SUCCESS\" && (\n                <div className=\"center-pt86\">\n                    <CheckIcon className=\"check-icon-pt86\" />\n                    <div className=\"success-label-pt86\">{labels.newPasswordSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_OUT_ACCOUNT_CONFIRMED\" && (\n                <div className=\"center-pt86\">\n                    <CheckIcon className=\"check-icon-pt86\" />\n                    <div className=\"success-label-pt86\">{labels.confirmAccountSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_FAIL\" && (\n                <div className=\"center-pt86\">\n                    <ErrorIcon className=\"error-icon-pt86\" />\n                    <div className=\"success-label-pt86\">{labels.updateFailed}</div>\n                </div>\n            )}\n            <div className=\"cell-pt86\">\n                <InputText\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    placeholder={labels.email}\n                    invalid={\n                        signInForm.formState.errors.email !== undefined ||\n                        (authContext.status === \"SIGNED_OUT_INVALID\" && edited === false)\n                    }\n                    {...signInForm.register(\"email\", {\n                        required: true,\n                        pattern: emailRegex,\n                        disabled: disabled,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signInForm.formState.errors.email && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    placeholder={labels.password}\n                    invalid={\n                        signInForm.formState.errors.password !== undefined ||\n                        (authContext.status === \"SIGNED_OUT_INVALID\" && edited === false)\n                    }\n                    {...signInForm.register(\"password\", {\n                        required: true,\n                        pattern: passwordRegex,\n                        disabled: disabled,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signInForm.formState.errors.password !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n                {authContext.status === \"SIGNED_OUT_INVALID\" && edited === false && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidCredentials}</div>\n                )}\n                <div className=\"forgotten-password-pt86\">\n                    <Button color=\"link\" onClick={switchToForgottenPassword}>\n                        {labels.forgottenPasswordQuestion}\n                    </Button>\n                </div>\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.signInButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default SignInForm\n","import clsx from \"clsx\"\nimport React, {useContext, useRef} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext, {AllAttributes} from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {emailRegex, nameRegex, passwordRegex, phoneRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype SignUpFields = {\n    email: string\n    password: string\n    given_name: string\n    family_name: string\n    phone_number: string\n    company_name: string | undefined\n    company_type: string | undefined\n    role: string | undefined\n}\n\nconst SignUpForm: React.FC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const signUpForm = useForm<SignUpFields>()\n    const emailRef = useRef<HTMLDivElement>(null)\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onSignUpSubmitHandler: SubmitHandler<SignUpFields> = data => {\n        setDisabled(true)\n        const adkaorauser: AllAttributes = {\n            given_name: data.given_name,\n            family_name: data.family_name,\n            phone_number: data.phone_number,\n            company_name: data.company_name,\n            company_type: data.company_type,\n            role: data.role,\n        }\n        authContext.signUp(data.email, data.password, adkaorauser).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={clsx(\"form-login-pt86\", className)}\n            onSubmit={signUpForm.handleSubmit(onSignUpSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.signUpMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\" ref={emailRef}>\n                <InputText\n                    disabled={disabled}\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    placeholder={labels.email}\n                    invalid={\n                        signUpForm.formState.errors.email !== undefined ||\n                        authContext.status === \"SIGN_UP_ALREADY_REGISTERED\"\n                    }\n                    {...signUpForm.register(\"email\", {\n                        required: true,\n                        pattern: emailRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {authContext.status === \"SIGN_UP_ALREADY_REGISTERED\" && edited === false && (\n                    <div className=\"messages-box-pt86\">{labels.validationEmailAlreadyUsed}</div>\n                )}\n                {signUpForm.formState.errors.email !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    placeholder={labels.password}\n                    invalid={signUpForm.formState.errors.password !== undefined}\n                    {...signUpForm.register(\"password\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.password !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    autoComplete=\"given-name\"\n                    placeholder={labels.name}\n                    invalid={signUpForm.formState.errors.given_name !== undefined}\n                    {...signUpForm.register(\"given_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.given_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    autoComplete=\"family-name\"\n                    placeholder={labels.lastName}\n                    invalid={signUpForm.formState.errors.family_name !== undefined}\n                    {...signUpForm.register(\"family_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.family_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidLastName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"tel\"\n                    autoComplete=\"tel\"\n                    placeholder={labels.phoneNumber}\n                    invalid={signUpForm.formState.errors.phone_number !== undefined}\n                    {...signUpForm.register(\"phone_number\", {\n                        required: true,\n                        pattern: phoneRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.phone_number !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidPhoneNumber}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    autoComplete=\"organization\"\n                    placeholder={labels.companyName}\n                    invalid={signUpForm.formState.errors.company_name !== undefined}\n                    {...signUpForm.register(\"company_name\", {\n                        required: false,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyType}\n                    invalid={signUpForm.formState.errors.company_type !== undefined}\n                    {...signUpForm.register(\"company_type\", {\n                        required: false,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    autoComplete=\"organization-title\"\n                    placeholder={labels.role}\n                    invalid={signUpForm.formState.errors.role !== undefined}\n                    {...signUpForm.register(\"role\", {\n                        required: false,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.completeRegistrationButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default SignUpForm\n","import clsx from \"clsx\"\nimport React, {useContext} from \"react\"\nimport Button from \"~/components/UI/Button/Button\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport CheckIcon from \"~/icons/CheckIcon\"\nimport ErrorIcon from \"~/icons/ErrorIcon\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {useLinksQuery} from \"../../../queries/LinksQuery\"\nimport GenericLink from \"../../UI/GenericLink/GenericLink\"\n\nimport \"./UserPanel.css\"\n\ninterface UserPanelProps extends React.HTMLAttributes<HTMLDivElement> {\n    disabled: boolean\n    setDisabled: (value: boolean) => void\n    edited: boolean\n    setEdited: (value: boolean) => void\n}\n\nconst UserPanel = (props: UserPanelProps) => {\n    const {className, children, disabled, setDisabled, edited, setEdited, ...otherProps} = props\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n    const links = useLinksQuery()\n\n    const onSignOutClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        setDisabled(true)\n        authContext.signOut().then(() => {\n            setDisabled(false)\n        })\n    }\n\n    const onChangePasswordClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        authContext.setStatus(\"CHANGE_PASSWORD\")\n    }\n\n    const onUpdateAttributesClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        authContext.setStatus(\"UPDATE_ATTRIBUTES\")\n    }\n    const onDeleteAccountClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        authContext.setStatus(\"DELETE_ACCOUNT\")\n    }\n\n    return (\n        <div className={clsx(\"user-panel-container-g9dr\", className)} {...otherProps}>\n            {authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_SUCCESS\" && (\n                <div className=\"center-g9dr\">\n                    <CheckIcon className=\"check-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.newPasswordSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_FAIL\" && (\n                <div className=\"center-g9dr\">\n                    <ErrorIcon className=\"error-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.updateFailed}</div>\n                </div>\n            )}\n            {authContext.status === \"UPDATE_ATTRIBUTES_SUCCESS\" && (\n                <div className=\"center-g9dr\">\n                    <CheckIcon className=\"check-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.attributesUpdateSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"UPDATE_ATTRIBUTES_FAIL\" && (\n                <div className=\"center-g9dr\">\n                    <ErrorIcon className=\"error-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.updateFailed}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_IN\" && (\n                <div className=\"signed-in-message-g9dr\">\n                    {labels.privateAreaAccessMessage}\n                    <GenericLink to={links.privateArea.url}>{links.privateArea.name}</GenericLink>\n                </div>\n            )}\n            <div className=\"left-g9dr\">\n                {authContext.attributes?.email && <div>{authContext.attributes?.email}</div>}\n                {authContext.attributes?.given_name && <div>{authContext.attributes?.given_name}</div>}\n                {authContext.attributes?.family_name && <div>{authContext.attributes?.family_name}</div>}\n                {authContext.attributes?.phone_number && <div>{authContext.attributes?.phone_number}</div>}\n                {authContext.attributes?.company_name && <div>{authContext.attributes?.company_name}</div>}\n                {authContext.attributes?.company_type && <div>{authContext.attributes?.company_type}</div>}\n                {authContext.attributes?.role && <div>{authContext.attributes?.role}</div>}\n            </div>\n            <div className=\"right-g9dr\">\n                <Button onClick={onSignOutClickHandler} disabled={disabled}>\n                    {labels.signOutButtonLabel}\n                </Button>\n                <Button disabled={disabled} onClick={onChangePasswordClickHandler}>\n                    {labels.changePasswordButtonLabel}\n                </Button>\n                <Button disabled={disabled} onClick={onUpdateAttributesClickHandler}>\n                    {labels.update}\n                </Button>\n                <Button color=\"red\" onClick={onDeleteAccountClickHandler} disabled={disabled}>\n                    {labels.deleteAccount}\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default UserPanel\n","import clsx from \"clsx\"\nimport React, {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {emailRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype DeleteAccountFields = {\n    email: string\n}\n\nconst DeleteAccountForm: React.FC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const deleteAccountForm = useForm<DeleteAccountFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onDeleteAccountSubmitHandler: SubmitHandler<DeleteAccountFields> = data => {\n        setDisabled(true)\n        authContext.deleteAccount().then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={clsx(\"form-login-pt86\", className)}\n            onSubmit={deleteAccountForm.handleSubmit(onDeleteAccountSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.deleteAccountMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"email\"\n                    placeholder={labels.email}\n                    invalid={deleteAccountForm.formState.errors.email !== undefined}\n                    {...deleteAccountForm.register(\"email\", {\n                        required: true,\n                        validate: value => value === authContext.attributes?.email,\n                        pattern: emailRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {deleteAccountForm.formState.errors.email && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <Button color=\"red\" className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.confirmButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedIn}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default DeleteAccountForm\n","import clsx from \"clsx\"\nimport React, {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext, {AllAttributes} from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {nameRegex, phoneRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype UpdatedAttributesFields = {\n    given_name: string\n    family_name: string\n    phone_number: string\n    company_name: string | undefined\n    company_type: string | undefined\n    role: string | undefined\n}\n\nconst UpdatedAttributesForm: React.FC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const updatedAttributesForm = useForm<UpdatedAttributesFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onUpdatedAttributesSubmitHandler: SubmitHandler<UpdatedAttributesFields> = data => {\n        setDisabled(true)\n        const adkaorauser: AllAttributes = {\n            given_name: data.given_name,\n            family_name: data.family_name,\n            phone_number: data.phone_number,\n            company_name: data.company_name,\n            company_type: data.company_type,\n            role: data.role,\n        }\n        authContext.updateAttributes(adkaorauser).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={clsx(\"form-login-pt86\", className)}\n            onSubmit={updatedAttributesForm.handleSubmit(onUpdatedAttributesSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.updateAttributesMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.name}\n                    invalid={updatedAttributesForm.formState.errors.given_name !== undefined}\n                    {...updatedAttributesForm.register(\"given_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                        value: authContext.attributes?.given_name ? authContext.attributes?.given_name : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {updatedAttributesForm.formState.errors.given_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.lastName}\n                    invalid={updatedAttributesForm.formState.errors.family_name !== undefined}\n                    {...updatedAttributesForm.register(\"family_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                        value: authContext.attributes?.family_name ? authContext.attributes?.family_name : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {updatedAttributesForm.formState.errors.family_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidLastName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"tel\"\n                    placeholder={labels.phoneNumber}\n                    invalid={updatedAttributesForm.formState.errors.phone_number !== undefined}\n                    {...updatedAttributesForm.register(\"phone_number\", {\n                        required: true,\n                        pattern: phoneRegex,\n                        value: authContext.attributes?.phone_number ? authContext.attributes?.phone_number : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {updatedAttributesForm.formState.errors.phone_number !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidPhoneNumber}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyName}\n                    invalid={updatedAttributesForm.formState.errors.company_name !== undefined}\n                    {...updatedAttributesForm.register(\"company_name\", {\n                        required: false,\n                        value: authContext.attributes?.company_name ? authContext.attributes?.company_name : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyType}\n                    invalid={updatedAttributesForm.formState.errors.company_type !== undefined}\n                    {...updatedAttributesForm.register(\"company_type\", {\n                        required: false,\n                        value: authContext.attributes?.company_type ? authContext.attributes?.company_type : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.role}\n                    invalid={updatedAttributesForm.formState.errors.role !== undefined}\n                    {...updatedAttributesForm.register(\"role\", {\n                        required: false,\n                        value: authContext.attributes?.role ? authContext.attributes?.role : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.updateAttributesButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedIn}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default UpdatedAttributesForm\n","import {HeadFC, PageProps} from \"gatsby\"\nimport {Fragment, useContext, useRef, useState} from \"react\"\nimport ChangePasswordForm from \"~/components/Forms/Authentication/ChangePasswordForm\"\nimport ConfirmAccountForm from \"~/components/Forms/Authentication/ConfirmAccountForm\"\nimport ForgottenPasswordForm from \"~/components/Forms/Authentication/ForgottenPasswordForm\"\nimport ForgottenPasswordVerificationForm from \"~/components/Forms/Authentication/ForgottenPasswordVerification\"\nimport SignInForm from \"~/components/Forms/Authentication/SignInForm\"\nimport SignUpForm from \"~/components/Forms/Authentication/SignUpForm\"\nimport HeroSection from \"~/components/Sections/HeroSection/HeroSection\"\nimport UserPanel from \"~/components/Sections/UserPanel/UserPanel\"\nimport Button from \"~/components/UI/Button/Button\"\nimport MultiStyleText from \"~/components/UI/MultiStyleText/MultiStyleText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport ScrollButton from \"~/components/UI/ScrollButton/ScrollButton\"\nimport SectionContainer from \"~/components/UI/SectionContainer/SectionContainer\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport DeleteAccountForm from \"../components/Forms/Authentication/DeleteAccountForm\"\nimport UpdatedAttributesForm from \"../components/Forms/Authentication/UpdateAttributesForm\"\nimport GenericLink from \"../components/UI/GenericLink/GenericLink\"\nimport {SEO} from \"../components/UI/SEO/SEO\"\nimport CheckIcon from \"../icons/CheckIcon\"\nimport {PageContext} from \"../types/PageContext\"\nimport \"./AuthenticationPageTemplate.css\"\n\ntype SignInPageContext = PageContext<\n    Queries.AuthenticationPageQuery[\"allContentfulPaginaAutenticazione\"][\"edges\"][0][\"node\"]\n>\n\ninterface SignInPageProps extends PageProps<any, SignInPageContext> {}\n\nconst SignInPage: React.FC<SignInPageProps> = props => {\n    const signInPageData = props.pageContext.data\n    const [isEdited, setEdited] = useState(false)\n    const [isDisabled, setDisabled] = useState(false)\n    const containerRef = useRef<HTMLDivElement>(null)\n    const authContext = useContext(AuthContext)\n    const links = useLinksQuery()\n    const labels = useAuthenticationLabelsQuery()\n    const timeoutRef = useRef<NodeJS.Timeout>()\n\n    const signOut = () => {\n        setDisabled(true)\n        authContext.signOut().then(() => {\n            setDisabled(false)\n        })\n    }\n\n    const centerForm = () => {\n        if (!containerRef.current) return\n        containerRef.current.scrollIntoView({behavior: \"smooth\", block: \"start\"})\n    }\n\n    const switchToSignUp = () => {\n        authContext.setStatus(\"SIGN_UP\")\n        timeoutRef.current = setTimeout(() => centerForm(), 10)\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n    }\n\n    const switchToSignedOut = () => {\n        authContext.setStatus(\"SIGNED_OUT\")\n        timeoutRef.current = setTimeout(() => centerForm(), 10)\n    }\n\n    return (\n        <Fragment>\n            <HeroSection\n                image={signInPageData.heroImage?.gatsbyImageData}\n                imageAlt={signInPageData.heroImage?.title}\n                mobileImage={signInPageData.heroImageMobile?.gatsbyImageData}\n            >\n                {authContext.status === \"SIGNED_IN\" && authContext.attributes ? (\n                    <Fragment>\n                        <h1 className=\"hero-title-part-3-d2bh\">{labels.wellcome}</h1>\n                        <h2 className=\"hero-title-part-4-d2bh\">{`${authContext.attributes?.given_name} ${authContext.attributes?.family_name}`}</h2>\n                    </Fragment>\n                ) : (\n                    <MultiStyleText flex className1=\"hero-title-part-1-d2bh\" className2=\"hero-title-part-2-d2bh\">\n                        {signInPageData.title}\n                    </MultiStyleText>\n                )}\n            </HeroSection>\n            <SectionContainer tabbed marginPost customTab={<ScrollButton />}>\n                <div className=\"authentication-container-8hxd\" ref={containerRef}>\n                    {authContext.status === \"GENERIC_ERROR\" && (\n                        <RichTextField className=\"authentication-text-8hxd\">{labels.unkownErrorMessage}</RichTextField>\n                    )}\n                    {authContext.status === \"INVALID_USER_POOL\" && (\n                        <RichTextField className=\"authentication-text-8hxd\">\n                            {labels.cognitoErrorMessage?.raw}\n                        </RichTextField>\n                    )}\n                    {(authContext.status === \"SIGN_UP\" ||\n                        authContext.status === \"SIGN_UP_INVALID\" ||\n                        authContext.status === \"SIGN_UP_ALREADY_REGISTERED\") && (\n                        <SignUpForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"CONFIRMATION_NECESSARY\" && (\n                        <ConfirmAccountForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {(authContext.status === \"SIGNED_OUT\" ||\n                        authContext.status === \"SIGNED_OUT_INVALID\" ||\n                        authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_SUCCESS\" ||\n                        authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_FAIL\" ||\n                        authContext.status === \"SIGNED_OUT_ACCOUNT_CONFIRMED\") && (\n                        <SignInForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"NEW_PASSWORD_REQUIRED\" && (\n                        <ConfirmAccountForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"CHANGE_PASSWORD\" && (\n                        <ChangePasswordForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {(authContext.status === \"FORGOTTEN_PASSWORD\" ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_INVALID\") && (\n                        <ForgottenPasswordForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {(authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION\" ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION_INVALID\") && (\n                        <ForgottenPasswordVerificationForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"UPDATE_ATTRIBUTES\" && (\n                        <UpdatedAttributesForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"DELETE_ACCOUNT\" && (\n                        <DeleteAccountForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"DELETE_ACCOUNT_SUCCESS\" && (\n                        <div className=\"user-panel-container-g9dr\">\n                            <div className=\"center-g9dr\">\n                                <CheckIcon className=\"check-icon-g9dr\" />\n                                <div className=\"success-label-g9dr\">\n                                    {labels.accountDeleteSuccess}\n                                    <GenericLink\n                                        className=\"link-8hxd\"\n                                        to={links.homepage.url}\n                                        onClick={() => authContext.resetStatus()}\n                                    >\n                                        {labels.backToTheHomepage}\n                                    </GenericLink>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {(authContext.status === \"SIGNED_IN\" ||\n                        authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_SUCCESS\" ||\n                        authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_FAIL\" ||\n                        authContext.status === \"UPDATE_ATTRIBUTES_SUCCESS\" ||\n                        authContext.status === \"UPDATE_ATTRIBUTES_FAIL\") && (\n                        <Fragment>\n                            <UserPanel\n                                disabled={isDisabled}\n                                setDisabled={setDisabled}\n                                edited={isEdited}\n                                setEdited={setEdited}\n                            />\n                        </Fragment>\n                    )}\n                </div>\n                {(authContext.status === \"SIGNED_OUT\" || authContext.status === \"SIGNED_OUT_INVALID\") && (\n                    <div className=\"switch-container-8hxd\">\n                        <span className=\"switch-label-8hxd\">\n                            {`${labels.missingAccount} `}\n                            <Button color=\"link\" onClick={switchToSignUp}>\n                                {labels.clickHereLinkLabel}\n                            </Button>\n                        </span>\n                    </div>\n                )}\n                {(authContext.status === \"SIGN_UP\" ||\n                    authContext.status === \"SIGN_UP_INVALID\" ||\n                    authContext.status === \"SIGN_UP_ALREADY_REGISTERED\") && (\n                    <div className=\"switch-container-8hxd\">\n                        <span className=\"switch-label-8hxd\">\n                            {`${labels.alreadyHaveAccount} `}\n                            <Button color=\"link\" onClick={switchToSignedOut}>\n                                {labels.clickHereLinkLabel}\n                            </Button>\n                        </span>\n                    </div>\n                )}\n                {authContext.status === \"CONFIRMATION_NECESSARY\" ||\n                    authContext.status === \"FORGOTTEN_PASSWORD\" ||\n                    (authContext.status === \"FORGOTTEN_PASSWORD_INVALID\" && (\n                        <div className=\"switch-container-8hxd\">\n                            <span className=\"switch-label-8hxd\">\n                                {`${labels.resendConfirmationCodeQuestion} `}\n                                <Button color=\"link\" onClick={() => authContext.resendConfirmationCode()}>\n                                    {labels.resendConfirmationCodeLinkLabel}\n                                </Button>\n                            </span>\n                        </div>\n                    ))}\n            </SectionContainer>\n        </Fragment>\n    )\n}\n\nexport default SignInPage\n\nexport const Head: HeadFC<any, SignInPageContext> = props => {\n    const signInPageData = props.pageContext.data\n\n    const links = useLinksQuery()\n\n    return (\n        <SEO\n            title={signInPageData.title ? signInPageData.title : \"authentication\"}\n            language={props.pageContext.language}\n            image={signInPageData.heroImage?.url}\n            imageAlt={signInPageData.heroImage?.title}\n            siteUrl={`${process.env.SITE_URL}${links.authentication.url}`}\n        />\n    )\n}\n"],"names":["props","children","className","otherPros","_jsx","clsx","dangerouslySetInnerHTML","__html","documentToHtmlString","JSON","parse","undefined","onClick","otherProps","_jsxs","ChevronDownIcon","useAuthenticationLabelsQuery","i18n","useContext","I18nContext","data","useStaticQuery","labelsData1","allContentfulAuthenticationLabels","nodes","labelsData2","allContentfulAuthenticationLabels2","translation","node_locale","language","_labels$passwordChang","_labels$validationInv","_labels$validationInv2","disabled","setDisabled","edited","setEdited","onButtonClickCallback","changePasswordForm","useForm","authContext","AuthContext","labels","onSubmit","handleSubmit","changePassword","password","newPassword","then","result","RichTextField","passwordChangeMessage","raw","InputText","type","placeholder","oldPassword","invalid","formState","errors","register","required","pattern","passwordRegex","containerClassName","onKeyDown","validationInvalidPasswordSpecs","Button","loading","changePasswordButtonLabel","color","switchToSignedIn","setStatus","cancelButtonLabel","_labels$confirmationM","confirmationForm","autoComplete","confirmAccount","confirmationCode","confirmationMessage","cognitoCodeRegex","validationInvalidConfirmationCode","confirmButtonLabel","_labels$forgottenPass","forgottenPasswordForm","forgottenPassword","email","forgottenPasswordMessage","status","emailRegex","validationInvalidEmail","switchToSignedOut","forgottenPasswordVerificationForm","forgottenPasswordConfirmNewPassword","verificationCode","forgottenPasswordVerificationMessage","validationInvalidVerificationCode","_labels$signInMessage","signInForm","signIn","signInMessage","CheckIcon","newPasswordSuccess","confirmAccountSuccess","ErrorIcon","updateFailed","validationInvalidCredentials","switchToForgottenPassword","forgottenPasswordQuestion","signInButtonLabel","_labels$signUpMessage","signUpForm","emailRef","useRef","adkaorauser","given_name","family_name","phone_number","company_name","company_type","role","signUp","signUpMessage","ref","validationEmailAlreadyUsed","name","nameRegex","validationInvalidName","lastName","validationInvalidLastName","phoneNumber","phoneRegex","validationInvalidPhoneNumber","companyName","companyType","completeRegistrationButtonLabel","_authContext$attribut","_authContext$attribut2","_authContext$attribut3","_authContext$attribut4","_authContext$attribut5","_authContext$attribut6","_authContext$attribut7","_authContext$attribut8","_authContext$attribut9","_authContext$attribut10","_authContext$attribut11","_authContext$attribut12","_authContext$attribut13","_authContext$attribut14","links","useLinksQuery","attributesUpdateSuccess","privateAreaAccessMessage","GenericLink","to","privateArea","url","attributes","event","signOut","signOutButtonLabel","update","deleteAccount","_labels$deleteAccount","deleteAccountForm","deleteAccountMessage","validate","value","_labels$updateAttribu","updatedAttributesForm","updateAttributes","updateAttributesMessage","updateAttributesButtonLabel","_signInPageData$heroI","_signInPageData$heroI2","_signInPageData$heroI3","_labels$cognitoErrorM","signInPageData","pageContext","isEdited","useState","isDisabled","containerRef","timeoutRef","centerForm","current","scrollIntoView","behavior","block","Fragment","HeroSection","image","heroImage","gatsbyImageData","imageAlt","title","mobileImage","heroImageMobile","wellcome","MultiStyleText","flex","className1","className2","SectionContainer","tabbed","marginPost","customTab","ScrollButton","unkownErrorMessage","cognitoErrorMessage","SignUpForm","ConfirmAccountForm","SignInForm","ChangePasswordForm","ForgottenPasswordForm","ForgottenPasswordVerificationForm","UpdatedAttributesForm","DeleteAccountForm","accountDeleteSuccess","homepage","resetStatus","backToTheHomepage","UserPanel","missingAccount","switchToSignUp","setTimeout","clickHereLinkLabel","alreadyHaveAccount","resendConfirmationCodeQuestion","resendConfirmationCode","resendConfirmationCodeLinkLabel","Head","_signInPageData$heroI4","_signInPageData$heroI5","SEO","siteUrl","authentication"],"sourceRoot":""}