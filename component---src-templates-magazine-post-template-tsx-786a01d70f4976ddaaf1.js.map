{"version":3,"file":"component---src-templates-magazine-post-template-tsx-786a01d70f4976ddaaf1.js","mappings":"uIAeA,IAToCA,IAChC,MAAM,UAACC,EAAD,SAAYC,KAAaC,GAAcH,EAC7C,OACII,EAAAA,EAAAA,KAAAA,MAAAA,CAAKH,WAAWI,EAAAA,EAAAA,GAAQ,aAAcJ,MAAgBE,EAAtD,SACKD,M,6CCyCb,IAvCwBF,IACpB,MAAM,UAACC,EAAD,WAAYK,EAAZ,WAAwBC,EAAxB,KAAoCC,GAAO,EAA3C,OAAkDC,EAAlD,OAA0DC,EAAQR,SAAUS,GAAaX,EACzFE,EAAWS,aAAH,EAAGA,EAAWC,OAE5B,IAAKV,EAAU,OAAO,KACtB,MAAMW,EAAgBX,EAASY,OAEzBC,EADQb,EAASc,MAAM,KACDF,OAE5B,IAAIG,EAAQ,GACRC,EAAQ,GAEZ,GAAsB,IAAlBH,EACAE,EAAQf,EAASiB,UAAU,EAAGC,KAAKC,MAAMnB,EAASY,OAAS,IAC3DI,EAAQhB,EAASiB,UAAUC,KAAKC,MAAMnB,EAASY,OAAS,GAAIZ,EAASY,YAClE,CACH,IAAIQ,EAAO,EACX,IAAK,IAAIC,EAAQ,EAAGV,EAAgB,EAAIU,EAAQ,IAC5CD,EAAOpB,EAASsB,QAAQ,IAAKX,EAAgB,EAAIU,IACnC,IAAVD,GAF2CC,KAMnDN,EAAQf,EAASiB,UAAU,EAAGG,GAC9BJ,EAAQhB,EAASiB,UAAUG,EAAMpB,EAASY,QAG9C,OACIW,EAAAA,EAAAA,MAAAA,OAAAA,CAAMxB,WAAWI,EAAAA,EAAAA,GAAQ,mBAAoBG,EAAO,YAAc,YAAaP,GAA/E,WACIG,EAAAA,EAAAA,KAAAA,OAAAA,CAAMH,WAAWI,EAAAA,EAAAA,GAAQ,cAAeU,EAAgB,EAAI,aAAe,GAAIT,GAAaoB,MAAOjB,EAAnG,SACKQ,KAELb,EAAAA,EAAAA,KAAAA,OAAAA,CAAMH,WAAWI,EAAAA,EAAAA,GAAQ,cAAeU,EAAgB,EAAI,aAAe,GAAIR,GAAamB,MAAOhB,EAAnG,SACKQ,EAAMS,iB,4NCnBvB,MAjBsC3B,IAClC,MAAM,SAACE,EAAD,UAAWD,KAAc2B,GAAa5B,EAC5C,OACII,EAAAA,EAAAA,KAAAA,MAAAA,CACIH,WAAWI,EAAAA,EAAAA,GAAQ,cAAeJ,MAC7BC,EACC,CACI2B,wBAAyB,CACrBC,QAAQC,EAAAA,EAAAA,GAAqBC,KAAKC,MAAM/B,MAGhD,MACF0B,K,0ICyMhB,MA9LkD5B,IAAU,IAAD,gBACvD,MAAMkC,EAAmBlC,EAAMmC,YAAYC,KACrCC,EAAmBrC,EAAMmC,YAAYG,cAErCC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAClBC,GAAQC,EAAAA,EAAAA,KACRC,GAASC,EAAAA,EAAAA,KACTC,EAAiC,GACjB,mBAAOC,EAAAA,EAAAA,OAAP,QAA+BC,EAAAA,EAAAA,OAA/B,QAA0DC,EAAAA,EAAAA,OAC/DC,SAAQC,IACjBA,EAAKC,OAASlB,EAAiBkB,MAC/BlB,EAAiBmB,OAASF,EAAKE,MACnCP,EAAcQ,KAAKH,MAGvB,IAAII,EAAwC,GAC5C,OAAQrB,EAAiBkB,MACrB,KAAKI,EAAAA,EAAAA,KACD,IAAKZ,EAAOa,aAAc,MAC1BF,EAAaX,EAAOa,aACpB,MACJ,KAAKD,EAAAA,EAAAA,OACD,IAAKZ,EAAOc,WAAY,MACxBH,EAAaX,EAAOc,WACpB,MACJ,KAAKF,EAAAA,EAAAA,QACD,IAAKZ,EAAOe,KAAM,MAClBJ,EAAaX,EAAOe,KAI5B,MAAM,EAACC,EAAD,EAAuBC,IAA2BC,EAAAA,EAAAA,UAAgC,IAClF,EAACC,EAAD,EAAiBC,IAAqBF,EAAAA,EAAAA,UAAS,KAC/C,EAACG,EAAD,EAAsBC,IAA0BJ,EAAAA,EAAAA,UAAuC,IACvFK,GAAqB3B,EAAAA,EAAAA,YAAW4B,EAAAA,IAKhCC,EAAwBC,IAC1B,MAAMC,EAAeC,OAAOF,EAAMG,cAAcC,OAChDb,EAAwBU,GACxBL,GAAuBS,EAAAA,EAAAA,qBAAoBJ,KAY/C,IAAIK,EACA1C,EAAiB2C,OACjBD,EAAgB,IAAIE,KAAKC,eAAexC,EAAKyC,SAAU,CACnDC,IAAK,UACLC,MAAO,OACPC,KAAM,YACPC,OAAO,IAAIC,KAAKnD,EAAiB2C,QAGxC,IAAIS,EAAe,GACnB,OAAQpD,EAAiBkB,MACrB,KAAKI,EAAAA,EAAAA,KACD8B,EAAgB,sBAAyB5C,EAAM6C,KAAKC,OAAOtD,EAAiBmB,OAC5E,MACJ,KAAKG,EAAAA,EAAAA,OACD8B,EAAgB,sBAAyB5C,EAAM+C,OAAOD,OAAOtD,EAAiBmB,OAC9E,MACJ,KAAKG,EAAAA,EAAAA,QACD8B,EAAgB,sBAAyB5C,EAAMgD,QAAQF,OAAOtD,EAAiBmB,OAIvF,OACI5B,EAAAA,EAAAA,MAACkE,EAAAA,SAAD,YACIvF,EAAAA,EAAAA,KAACwF,EAAAA,UAAD,CACIC,MAAQ,GAAE3D,EAAiB2D,QAC3BC,UAAWR,EACXS,YAAc,GAAE7D,EAAiB8D,oBACjChB,SAAUzC,EAAKyC,SACfiB,UAAW,CACPT,IAAKF,EACLO,MAAQ,GAAE3D,EAAiB2D,QAC3BE,YAAc,GAAE7D,EAAiB8D,oBACjCE,OAAQ3D,EAAKyC,SACbmB,OAAQ,CACJ,CACIX,IAAM,GAAD,UAAGtD,EAAiBkE,aAApB,aAAGC,EAAwBb,MAChCc,MAAO9B,OAAM,UAACtC,EAAiBkE,aAAlB,aAACG,EAAwBD,OACtCE,OAAQhC,OAAM,UAACtC,EAAiBkE,aAAlB,aAACK,EAAwBD,QACvCE,IAAM,GAAD,UAAGxE,EAAiBkE,aAApB,aAAGO,EAAwBd,cAKhDzF,EAAAA,EAAAA,KAACwG,EAAAA,EAAD,CAAaR,MAAK,UAAElE,EAAiBkE,aAAnB,aAAES,EAAwBC,gBAAiBC,SAAQ,UAAE7E,EAAiBkE,aAAnB,aAAEY,EAAwBnB,MAA/F,UACIpE,EAAAA,EAAAA,MAAAA,MAAAA,CAAAA,SAAAA,EACIrB,EAAAA,EAAAA,KAAAA,KAAAA,CAAIH,UAAU,YAAd,SAA2B2E,KAC3BxE,EAAAA,EAAAA,KAAAA,KAAAA,CAAIH,UAAU,aAAd,SAA4BiC,EAAiB2D,SAC7CpE,EAAAA,EAAAA,MAAAA,KAAAA,CAAIxB,UAAU,gBAAd,UACM,GAAE2C,EAAOqE,cACX7G,EAAAA,EAAAA,KAAC8G,EAAAA,EAAD,CACIjH,UAAU,sBACVkH,GAAK,GAAEzE,EAAM0E,SAAS5B,cAActD,EAAiB+E,uBAFzD,SAIK/E,EAAiB+E,oBAKlC7G,EAAAA,EAAAA,KAACiH,EAAAA,EAAD,WACI5F,EAAAA,EAAAA,MAAC6F,EAAAA,EAAD,CAAQzB,MAAOxD,EAAiBkF,OAAQC,aAAW,EAAnD,WACI/F,EAAAA,EAAAA,MAACgG,EAAAA,EAAD,CAAKC,UAAQ,EAAChG,MAAO,CAACiG,UAAW,mBAAjC,WACIvH,EAAAA,EAAAA,KAACwH,EAAAA,EAAD,CAEIC,SAAUjE,IAAyBkE,EAAAA,aAAAA,MACnCC,SAAU1D,EACVK,MAAOoD,EAAAA,aAAAA,MAJX,SAMKlF,EAAOoF,KALHpF,EAAOoF,KAFpB,UASK3F,EAAiB4F,eATtB,aASKC,EAA0BC,KAAI,CAACC,EAAS7G,KAEjCnB,EAAAA,EAAAA,KAACwH,EAAAA,EAAD,CAEIC,SAAUjE,IAAyBrC,EAAQ,EAC3CwG,SAAU1D,EACVK,MAAOnD,EAAQ,EAJnB,SAMK6G,aANL,EAMKA,EAASb,QALLa,aADT,EACSA,EAAS/E,YAU9BjD,EAAAA,EAAAA,KAAAA,OAAAA,CAAMiI,SA7FO/D,IACzBA,EAAMgE,iBACN,MAAMC,GAAcC,EAAAA,EAAAA,IAChB,CAACC,KAAMC,EAAAA,qBAAsBhE,MAAOT,GACpC,CAACwE,KAAME,EAAAA,oBAAqBjE,MAAOX,IAEjCyB,EAAO,GAAE9C,EAAM0E,SAAS5B,OAAO+C,IACrCpE,EAAmByE,WAAWpD,IAsFlB,UACI/D,EAAAA,EAAAA,MAACgG,EAAAA,EAAD,CAAKC,UAAQ,EAAb,WACItH,EAAAA,EAAAA,KAACyI,EAAAA,EAAD,CACIC,YAAalG,EAAOmG,uBACpBC,SAzGA1E,IACxBN,EAAkBM,EAAMG,cAAcC,QAyGdA,MAAOX,EACPrC,MAAO,CACH4E,MAAO,kBACP2C,SAAU,QACVC,UAAW,aAGnB9I,EAAAA,EAAAA,KAAC+I,EAAAA,EAAD,CAAQC,MAAM,QAAQhG,KAAK,SAA3B,SACKR,EAAOyG,oBAM5BjJ,EAAAA,EAAAA,KAACiH,EAAAA,EAAD,WACI5F,EAAAA,EAAAA,MAAC6H,EAAAA,EAAD,YACIlJ,EAAAA,EAAAA,KAACmJ,EAAAA,EAAD,CAAaC,OAAO,cACpBpJ,EAAAA,EAAAA,KAACqJ,EAAD,oBAASvH,EAAiBwH,eAA1B,aAASC,EAA0BC,YAG3CxJ,EAAAA,EAAAA,KAACiH,EAAAA,EAAD,CAAkBpH,UAAU,0BAA5B,UACIG,EAAAA,EAAAA,KAACyJ,EAAAA,EAAD,OAEJzJ,EAAAA,EAAAA,KAACiH,EAAAA,EAAD,WACIjH,EAAAA,EAAAA,KAAC0J,EAAAA,EAAD,CAAOC,KAAM,EAAGC,MAAOzG,EAAvB,SACKT,EAAcqF,KAAI,CAAC8B,EAAM1I,KAElBnB,EAAAA,EAAAA,KAAC8J,EAAAA,EAAD,CAEIrF,KAAMoF,EAAKpF,KACXgB,MAAOoE,EAAKpE,MACZO,MAAO6D,EAAK7D,MACZa,SAAUgD,EAAKhD,SACfkD,KAAMF,EAAKE,KACXnE,kBAAmBiE,EAAKjE,kBACxB3C,KAAM4G,EAAK5G,KACXD,KAAM6G,EAAK7G,KACXgH,SAAUH,EAAKG,SACfC,QAASJ,EAAKI,SAVT9I","sources":["webpack://adkaora.com/./src/components/Sections/Blank/Blank.tsx","webpack://adkaora.com/./src/components/UI/MultiStyleText/MultiStyleText.tsx","webpack://adkaora.com/./src/components/UI/Reader/Reader.tsx","webpack://adkaora.com/./src/templates/MagazinePostTemplate.tsx"],"sourcesContent":["import {HTMLAttributes} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Blank.css\"\n\ninterface BlankProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst Blank: React.FC<BlankProps> = props => {\n    const {className, children, ...otherProps} = props\n    return (\n        <div className={classes(\"blank-x5d9\", className)} {...otherProps}>\n            {children}\n        </div>\n    )\n}\n\nexport default Blank\n","import {classes} from \"~/utilities/classes\"\nimport \"./MultiStyleText.css\"\n\ninterface MultiStyleTextProps extends React.HTMLAttributes<HTMLSpanElement> {\n    flex?: boolean | undefined\n    children?: string | undefined | null\n    className1?: string\n    className2?: string\n    style1?: React.CSSProperties | undefined\n    style2?: React.CSSProperties | undefined\n}\n\nconst MultiStyleText = (props: MultiStyleTextProps) => {\n    const {className, className1, className2, flex = false, style1, style2, children: _children} = props\n    const children = _children?.trim()\n\n    if (!children) return null\n    const numberOfChars = children.length\n    const words = children.split(\" \")\n    const numberOfWords = words.length\n\n    let part1 = \"\"\n    let part2 = \"\"\n\n    if (numberOfWords === 1) {\n        part1 = children.substring(0, Math.round(children.length / 2))\n        part2 = children.substring(Math.round(children.length / 2), children.length)\n    } else {\n        let half = 0\n        for (let index = 1; numberOfChars / 2 - index > 0; index++) {\n            half = children.indexOf(\" \", numberOfChars / 2 - index)\n            if (half !== -1) {\n                break\n            }\n        }\n        part1 = children.substring(0, half)\n        part2 = children.substring(half, children.length)\n    }\n\n    return (\n        <span className={classes(\"multi-style-vu88\", flex ? \"flex-vu88\" : \"grid-vu88\", className)}>\n            <span className={classes(\"part-1-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className1)} style={style1}>\n                {part1}\n            </span>\n            <span className={classes(\"part-2-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className2)} style={style2}>\n                {part2.trimEnd()}\n            </span>\n        </span>\n    )\n}\n\nexport default MultiStyleText\n","import {documentToHtmlString} from \"@contentful/rich-text-html-renderer\"\nimport {HTMLAttributes} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Reader.css\"\n\nexport interface ReaderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n    children?: any | undefined | null\n}\n\nconst Reader: React.FC<ReaderProps> = props => {\n    const {children, className, ...otherPros} = props\n    return (\n        <div\n            className={classes(\"reader-z2vt\", className)}\n            {...(children\n                ? {\n                      dangerouslySetInnerHTML: {\n                          __html: documentToHtmlString(JSON.parse(children)),\n                      },\n                  }\n                : {})}\n            {...otherPros}\n        />\n    )\n}\n\nexport default Reader\n","import {PageProps} from \"gatsby\"\nimport {GatsbySeo} from \"gatsby-plugin-next-seo\"\nimport {Fragment, useContext, useState} from \"react\"\n\nimport Blank from \"~/components/Sections/Blank/Blank\"\nimport HeroSection from \"~/components/Sections/HeroSection/HeroSection\"\nimport Search from \"~/components/Sections/Search/Search\"\nimport Post from \"~/components/Sections/Shelf/Post\"\nimport Shelf, {ShelfSortCategories} from \"~/components/Sections/Shelf/Shelf\"\nimport Button from \"~/components/UI/Button/Button\"\nimport Gap from \"~/components/UI/Gap/Gap\"\nimport GenericLink from \"~/components/UI/GenericLink/GenericLink\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport Reader from \"~/components/UI/Reader/Reader\"\nimport SectionContainer from \"~/components/UI/SectionContainer/SectionContainer\"\nimport Switch from \"~/components/UI/Switch/Switch\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport TransitionContext from \"~/contexts/TransitionContext\"\nimport {useAcademyPostsQuery} from \"~/queries/AcademyPostsQuery\"\nimport {useBlogPostsQuery} from \"~/queries/BlogPostsQuery\"\nimport {useEventPostsQuery} from \"~/queries/EventPostsQuery\"\nimport {useLabelsQuery} from \"~/queries/LabelsQuery\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport {PostItem, PostTypes} from \"~/types/PostItem\"\nimport {generateQueryParams} from \"~/utilities/queryParams\"\nimport ContactUsForm from \"../components/Forms/ContactUsForm\"\nimport SocialShare from \"../components/UI/SocialShare/SocialShare\"\nimport \"./MagazinePost.css\"\nimport {MagazineSearchParam, MagazineSectionParam, SectionIndex, sectionsIndexToname} from \"./MagazineTemplate\"\n\ninterface MagazinePostProps extends PageProps<any, MagazinePostContext> {}\n\nconst MagazinePost: React.FC<MagazinePostProps> = props => {\n    const magazinePostData = props.pageContext.data\n    const magazinePageData = props.pageContext.secondaryData\n\n    const i18n = useContext(I18nContext)\n    const links = useLinksQuery()\n    const labels = useLabelsQuery()\n    const magazinePosts: Array<PostItem> = []\n    const allMagazinePosts = [...useBlogPostsQuery(), ...useAcademyPostsQuery(), ...useEventPostsQuery()]\n    allMagazinePosts.forEach(post => {\n        if (post.type !== magazinePostData.type) return\n        if (magazinePostData.slug === post.slug) return\n        magazinePosts.push(post as PostItem)\n    })\n\n    let shelfLabel: string | undefined | null = \"\"\n    switch (magazinePostData.type) {\n        case PostTypes.blog:\n            if (!labels.moreArticles) break\n            shelfLabel = labels.moreArticles\n            break\n        case PostTypes.events:\n            if (!labels.moreEvents) break\n            shelfLabel = labels.moreEvents\n            break\n        case PostTypes.academy:\n            if (!labels.more) break\n            shelfLabel = labels.more\n            break\n    }\n\n    const [selectedSectionIndex, setSelectedSectionIndex] = useState<SectionIndex | number>(0)\n    const [inputTextValue, setInputTextValue] = useState(\"\")\n    const [selectedSectionName, setSelectedSectionName] = useState<ShelfSortCategories | string>(\"\")\n    const transitionContenxt = useContext(TransitionContext)\n\n    const onInputChangeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInputTextValue(event.currentTarget.value)\n    }\n    const onSwitchClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const selectedType = Number(event.currentTarget.value)\n        setSelectedSectionIndex(selectedType)\n        setSelectedSectionName(sectionsIndexToname(selectedType))\n    }\n    const onFormSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const queryParams = generateQueryParams(\n            {name: MagazineSectionParam, value: selectedSectionName},\n            {name: MagazineSearchParam, value: inputTextValue},\n        )\n        const url = `${links.magazine.url}?${queryParams}`\n        transitionContenxt.navigateTo(url)\n    }\n\n    let formattedDate\n    if (magazinePostData.date) {\n        formattedDate = new Intl.DateTimeFormat(i18n.language, {\n            day: \"numeric\",\n            month: \"long\",\n            year: \"numeric\",\n        }).format(new Date(magazinePostData.date))\n    }\n\n    let canonicalUrl = \"\"\n    switch (magazinePostData.type) {\n        case PostTypes.blog:\n            canonicalUrl = `${process.env.SITE_URL}${links.blog.url}/${magazinePostData.slug}`\n            break\n        case PostTypes.events:\n            canonicalUrl = `${process.env.SITE_URL}${links.events.url}/${magazinePostData.slug}`\n            break\n        case PostTypes.academy:\n            canonicalUrl = `${process.env.SITE_URL}${links.academy.url}/${magazinePostData.slug}`\n            break\n    }\n\n    return (\n        <Fragment>\n            <GatsbySeo\n                title={`${magazinePostData.title}`}\n                canonical={canonicalUrl}\n                description={`${magazinePostData.description_short}`}\n                language={i18n.language}\n                openGraph={{\n                    url: canonicalUrl,\n                    title: `${magazinePostData.title}`,\n                    description: `${magazinePostData.description_short}`,\n                    locale: i18n.language,\n                    images: [\n                        {\n                            url: `${magazinePostData.image?.url}`,\n                            width: Number(magazinePostData.image?.width),\n                            height: Number(magazinePostData.image?.height),\n                            alt: `${magazinePostData.image?.title}`,\n                        },\n                    ],\n                }}\n            />\n            <HeroSection image={magazinePostData.image?.gatsbyImageData} imageAlt={magazinePostData.image?.title}>\n                <div>\n                    <h6 className=\"date-9jgh\">{formattedDate}</h6>\n                    <h3 className=\"title-9jgh\">{magazinePostData.title}</h3>\n                    <h6 className=\"category-9jgh\">\n                        {`${labels.category}: `}\n                        <GenericLink\n                            className=\"category-value-9jgh\"\n                            to={`${links.magazine.url}?search=${magazinePostData.category}&scroll=true`}\n                        >\n                            {magazinePostData.category}\n                        </GenericLink>\n                    </h6>\n                </div>\n            </HeroSection>\n            <SectionContainer>\n                <Search title={magazinePageData.titolo} startClosed>\n                    <Gap centered style={{marginTop: \"var(--gutter-4)\"}}>\n                        <Switch\n                            key={labels.all}\n                            selected={selectedSectionIndex === SectionIndex.index}\n                            onSelect={onSwitchClickHandler}\n                            value={SectionIndex.index}\n                        >\n                            {labels.all}\n                        </Switch>\n                        {magazinePageData.sezioni?.map((section, index) => {\n                            return (\n                                <Switch\n                                    key={section?.slug}\n                                    selected={selectedSectionIndex === index + 1}\n                                    onSelect={onSwitchClickHandler}\n                                    value={index + 1}\n                                >\n                                    {section?.titolo}\n                                </Switch>\n                            )\n                        })}\n                    </Gap>\n                    <form onSubmit={onFormSubmitHandler}>\n                        <Gap centered>\n                            <InputText\n                                placeholder={labels.searchInputPlaceholder}\n                                onChange={onInputChangeValue}\n                                value={inputTextValue}\n                                style={{\n                                    width: \"min(30vw,500px)\",\n                                    minWidth: \"240px\",\n                                    fontStyle: \"italic\",\n                                }}\n                            />\n                            <Button color=\"green\" type=\"submit\">\n                                {labels.search}\n                            </Button>\n                        </Gap>\n                    </form>\n                </Search>\n            </SectionContainer>\n            <SectionContainer>\n                <Blank>\n                    <SocialShare layout=\"magazine\" />\n                    <Reader>{magazinePostData.content?.raw}</Reader>\n                </Blank>\n            </SectionContainer>\n            <SectionContainer className=\"contact-us-section-9jgh\">\n                <ContactUsForm />\n            </SectionContainer>\n            <SectionContainer>\n                <Shelf show={2} label={shelfLabel}>\n                    {magazinePosts.map((item, index) => {\n                        return (\n                            <Post\n                                key={index}\n                                date={item.date}\n                                title={item.title}\n                                image={item.image}\n                                category={item.category}\n                                tags={item.tags}\n                                description_short={item.description_short}\n                                slug={item.slug}\n                                type={item.type}\n                                customer={item.customer}\n                                project={item.project}\n                            />\n                        )\n                    })}\n                </Shelf>\n            </SectionContainer>\n        </Fragment>\n    )\n}\n\nexport default MagazinePost\n\ninterface MagazinePostContext {\n    data: {\n        slug?: string | null\n        date?: any | null\n        title?: string | null\n        type?: string | null\n        category?: string | null\n        description_short?: string | null\n        riservato?: boolean | null\n        node_locale: string\n        image?: {\n            title?: string | null\n            height?: number | null\n            width?: number | null\n            url?: string | null\n            gatsbyImageData?: any | null\n        } | null\n        content?: {raw?: string | null} | null\n    }\n    secondaryData: {\n        id: string\n        slug?: string | null\n        titolo?: string | null\n        node_locale: string\n        allLabel?: string | null\n        searchButtonLabel?: string | null\n        searchInputPlaceholder?: string | null\n        sezioni?: Array<{titolo?: string | null; slug?: string | null} | null> | null\n    }\n}\n"],"names":["props","className","children","otherProps","_jsx","classes","className1","className2","flex","style1","style2","_children","trim","numberOfChars","length","numberOfWords","split","part1","part2","substring","Math","round","half","index","indexOf","_jsxs","style","trimEnd","otherPros","dangerouslySetInnerHTML","__html","documentToHtmlString","JSON","parse","magazinePostData","pageContext","data","magazinePageData","secondaryData","i18n","useContext","I18nContext","links","useLinksQuery","labels","useLabelsQuery","magazinePosts","useBlogPostsQuery","useAcademyPostsQuery","useEventPostsQuery","forEach","post","type","slug","push","shelfLabel","PostTypes","moreArticles","moreEvents","more","selectedSectionIndex","setSelectedSectionIndex","useState","inputTextValue","setInputTextValue","selectedSectionName","setSelectedSectionName","transitionContenxt","TransitionContext","onSwitchClickHandler","event","selectedType","Number","currentTarget","value","sectionsIndexToname","formattedDate","date","Intl","DateTimeFormat","language","day","month","year","format","Date","canonicalUrl","blog","url","events","academy","Fragment","GatsbySeo","title","canonical","description","description_short","openGraph","locale","images","image","_magazinePostData$ima","width","_magazinePostData$ima2","height","_magazinePostData$ima3","alt","_magazinePostData$ima4","HeroSection","_magazinePostData$ima5","gatsbyImageData","imageAlt","_magazinePostData$ima6","category","GenericLink","to","magazine","SectionContainer","Search","titolo","startClosed","Gap","centered","marginTop","Switch","selected","SectionIndex","onSelect","all","sezioni","_magazinePageData$sez","map","section","onSubmit","preventDefault","queryParams","generateQueryParams","name","MagazineSectionParam","MagazineSearchParam","navigateTo","InputText","placeholder","searchInputPlaceholder","onChange","minWidth","fontStyle","Button","color","search","Blank","SocialShare","layout","Reader","content","_magazinePostData$con","raw","ContactUsForm","Shelf","show","label","item","Post","tags","customer","project"],"sourceRoot":""}