{"version":3,"file":"000920603fd3f07f215f7defdeccd4414ec94779-fd9c3e4d921023c3f3ea.js","mappings":"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","sources":["webpack://adkaora.com/./src/components/Sections/Search/Search.tsx","webpack://adkaora.com/./src/components/Sections/Shelf/Post.tsx","webpack://adkaora.com/./src/components/Sections/Shelf/Shelf.tsx","webpack://adkaora.com/./src/components/UI/Drawer/Drawer.tsx","webpack://adkaora.com/./src/components/UI/Accordion/Accordion.tsx","webpack://adkaora.com/./src/components/UI/Button/LinkButton.tsx","webpack://adkaora.com/./src/components/UI/Fader/Fader.tsx","webpack://adkaora.com/./src/components/UI/Gap/Gap.tsx","webpack://adkaora.com/./src/components/UI/ScrollButton/ScrollButton.tsx","webpack://adkaora.com/./src/components/UI/Select/Select.tsx","webpack://adkaora.com/./src/components/UI/Switch/Switch.tsx","webpack://adkaora.com/./src/queries/AcademyPostsQuery.tsx","webpack://adkaora.com/./src/queries/BlogPostsQuery.tsx","webpack://adkaora.com/./src/queries/CasePostsQuery.tsx","webpack://adkaora.com/./src/queries/EventPostsQuery.tsx","webpack://adkaora.com/./src/templates/MagazineTemplate.tsx","webpack://adkaora.com/./src/utilities/queryParams.ts","webpack://adkaora.com/./src/utilities/transition.ts"],"sourcesContent":["import clsx from \"clsx\"\nimport Accordion, {AccordionProps} from \"../../UI/Accordion/Accordion\"\nimport \"./Search.css\"\n\ninterface SearchProps extends AccordionProps {}\n\nconst Search: React.FC<SearchProps> = props => {\n    const {className, ...otherProps} = props\n\n    return (\n        <Accordion\n            className={clsx(\"search-k5ec\", className)}\n            titleClassName=\"title-k5ec\"\n            iconClassName=\"icon-k5ec\"\n            {...otherProps}\n        />\n    )\n}\n\nexport default Search\n","import clsx from \"clsx\"\nimport {GatsbyImage} from \"gatsby-plugin-image\"\nimport React, {useContext} from \"react\"\nimport GenericLink from \"~/components/UI/GenericLink/GenericLink\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport {useLabelsQuery} from \"~/queries/LabelsQuery\"\nimport {PostItem, PostTypes} from \"~/types/PostItem\"\nimport LinkButton from \"../../UI/Button/LinkButton\"\n\nimport \"./Post.css\"\n\nexport interface PostProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {}\n\ntype PostStyle = 1 | 2 | 3 | 4\n\nconst Post: React.FC<PostProps & PostItem> = props => {\n    const {\n        date,\n        image,\n        title,\n        category,\n        tags,\n        description_short,\n        pdf,\n        slug,\n        customer,\n        project,\n        className,\n        children,\n        type,\n        ...otherProps\n    } = props\n    const labels = useLabelsQuery()\n    const i18n = useContext(I18nContext)\n\n    let formattedDate\n    if (date) {\n        formattedDate = new Intl.DateTimeFormat(i18n.language, {\n            day: \"numeric\",\n            month: \"long\",\n            year: \"numeric\",\n        }).format(new Date(date))\n    }\n\n    let postStyle: PostStyle = 1\n\n    switch (type) {\n        case PostTypes.blog:\n            postStyle = 1\n            break\n        case PostTypes.caseHistory:\n            postStyle = 2\n            break\n        case PostTypes.academy:\n            postStyle = 1\n            break\n        case PostTypes.events:\n            postStyle = 1\n            break\n        case PostTypes.analysis:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n        case PostTypes.video:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n        case PostTypes.onDemand:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n        case PostTypes.podcast:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n    }\n\n    return (\n        <div className={clsx(\"post-n3j4\", className)} {...otherProps}>\n            <GenericLink {...(pdf ? {to: pdf?.url} : {to: `/${i18n.language}/${type}/${slug}/`})} className=\"left-n3j4\">\n                {image?.gatsbyImageData && image.title && (\n                    <GatsbyImage alt={image.title} image={image?.gatsbyImageData} className=\"image-n3j4\" />\n                )}\n                {(postStyle === 1 || postStyle === 2) && (\n                    <div className=\"overlay-n3j4\">\n                        {formattedDate && postStyle === 1 && <span className=\"date-n3j4\">{formattedDate}</span>}\n                        {postStyle === 1 && <h5 className=\"title-n3j4\">{title}</h5>}\n                        {postStyle !== 1 && <h4 className=\"title-n3j4\">{title}</h4>}\n                    </div>\n                )}\n            </GenericLink>\n            <div className=\"right-n3j4\">\n                <div className=\"lip-n3j4\" />\n                {(postStyle === 3 || postStyle === 4) && <div className=\"text-n3j4\">{title}</div>}\n                {postStyle === 1 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.category}: `}\n                        <span className=\"green-n3j4\">{category}</span>\n                    </div>\n                )}\n                {postStyle === 1 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.tag}: `}\n                        <span className=\"green-n3j4\">{tags?.join(\", \")}</span>\n                    </div>\n                )}\n                {postStyle === 2 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.customer}: `}\n                        <span className=\"green-n3j4\">{customer}</span>\n                    </div>\n                )}\n                {postStyle === 2 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.project}: `}\n                        <span className=\"green-n3j4\">{project}</span>\n                    </div>\n                )}\n                <div className=\"text-n3j4\">{description_short}</div>\n                <div className=\"cta-n3j4\">\n                    {postStyle !== 4 && (\n                        <LinkButton to={`/${i18n.language}/${type}/${slug}/`}>{labels.read}</LinkButton>\n                    )}\n                    {postStyle === 4 && (\n                        <LinkButton to={pdf?.url} download>\n                            {labels.downloadPdf}\n                        </LinkButton>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Post\n","import clsx from \"clsx\"\nimport {Children, Fragment, useEffect, useRef, useState} from \"react\"\nimport Button from \"~/components/UI/Button/Button\"\nimport Select, {Option} from \"~/components/UI/Select/Select\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {useLabelsQuery} from \"~/queries/LabelsQuery\"\nimport {PostItem} from \"~/types/PostItem\"\nimport {PostProps} from \"./Post\"\nimport \"./Shelf.css\"\n\ninterface ShelfProps extends React.HTMLAttributes<HTMLDivElement> {\n    label?: string | undefined | null\n    withSorting?: boolean | undefined\n    withShowMore?: boolean | undefined\n    show?: number | undefined\n    loading?: boolean | undefined\n    sortyBy?: ShelfSortCategories | string | undefined | null\n    onSortSelect?: ((value: ShelfSortCategories | string) => void) | undefined | null\n}\n\nconst Shelf: React.FC<ShelfProps> = props => {\n    const {\n        className,\n        title,\n        loading,\n        label,\n        withSorting = false,\n        withShowMore = false,\n        sortyBy: sort,\n        onSortSelect,\n        show = 5,\n        children,\n        ...otherProps\n    } = props\n    const [showing, setShowing] = useState(show)\n    const [sortBy, setSortBy] = useState<ShelfSortCategories | string>(sort ? sort : ShelfSortCategories.DateC)\n    const [items, setItems] = useState<Array<React.ReactElement<PostProps>>>()\n    const [isLoading, setLoading] = useState<boolean>(false)\n    const timeoutRef = useRef<NodeJS.Timeout | undefined>()\n    const labels = useLabelsQuery()\n\n    const onSelectChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setSortBy(event.currentTarget.value)\n        if (onSortSelect) onSortSelect(event.currentTarget.value)\n    }\n\n    const updateItems = async () => {\n        const itemsToShow: Array<React.ReactElement<PostProps & PostItem>> = Children.toArray(children) as Array<\n            React.ReactElement<PostProps>\n        >\n\n        switch (sortBy) {\n            case ShelfSortCategories.CategoryC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.category) return 1\n                    if (!b.props.category) return -1\n                    return a.props.category.localeCompare(b.props.category)\n                })\n                break\n            case ShelfSortCategories.CategoryD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.category) return -1\n                    if (!b.props.category) return 1\n                    return b.props.category.localeCompare(a.props.category)\n                })\n                break\n            case ShelfSortCategories.CustomerC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.customer) return 1\n                    if (!b.props.customer) return -1\n                    return a.props.customer.localeCompare(b.props.customer)\n                })\n                break\n            case ShelfSortCategories.CustomerD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.customer) return -1\n                    if (!b.props.customer) return 1\n                    return b.props.customer.localeCompare(a.props.customer)\n                })\n                break\n            case ShelfSortCategories.DateC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.date) return 1\n                    if (!b.props.date) return -1\n                    if (a.props.date > b.props.date) return -1\n                    if (b.props.date > a.props.date) return 1\n                    return 0\n                })\n                break\n            case ShelfSortCategories.DateD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.date) return -1\n                    if (!b.props.date) return 1\n                    if (a.props.date > b.props.date) return 1\n                    if (b.props.date > a.props.date) return -1\n                    return 0\n                })\n                break\n            case ShelfSortCategories.TitleC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.title) return 1\n                    if (!b.props.title) return -1\n                    return a.props.title.localeCompare(b.props.title)\n                })\n                break\n            case ShelfSortCategories.TitleD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.title) return -1\n                    if (!b.props.title) return 1\n                    return b.props.title.localeCompare(a.props.title)\n                })\n                break\n            case ShelfSortCategories.TypeC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.type) return 1\n                    if (!b.props.type) return -1\n                    return a.props.type.localeCompare(b.props.type)\n                })\n                break\n            case ShelfSortCategories.TypeD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.type) return -1\n                    if (!b.props.type) return 1\n                    return b.props.type.localeCompare(a.props.type)\n                })\n                break\n        }\n\n        setItems(itemsToShow.slice(0, showing))\n    }\n\n    useEffect(() => {\n        setShowing(show)\n        if (loading || sortBy) {\n            setLoading(true)\n            updateItems().then(result => (timeoutRef.current = setTimeout(() => setLoading(false), 0)))\n        }\n        return () => {\n            if (timeoutRef.current) clearTimeout(timeoutRef.current)\n        }\n    }, [loading, sortBy])\n\n    useEffect(() => {\n        updateItems()\n    }, [showing])\n\n    const onShowMoreClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setShowing(state => state + show)\n    }\n\n    return (\n        <div className={clsx(\"shelf-ym83\", className)} {...otherProps}>\n            {(withSorting || label) && (\n                <header className=\"header-ym83\">\n                    <span className=\"label-ym83\">{label}</span>\n                    {withSorting && (\n                        <span className=\"sort-ym83\">\n                            <label className=\"sort-label-ym83\" htmlFor=\"select-ym83\">\n                                {labels.sortBy}\n                            </label>\n\n                            {labels.ascending &&\n                                labels.descending &&\n                                labels.category &&\n                                labels.customer &&\n                                labels.date &&\n                                labels.title &&\n                                labels.type && (\n                                    <Select\n                                        id=\"select-ym83\"\n                                        className=\"select-ym83\"\n                                        value={sortBy}\n                                        onChange={onSelectChangeHandler}\n                                    >\n                                        <Option value={ShelfSortCategories.CategoryC}>\n                                            {`${labels.category} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.CategoryD}>\n                                            {`${labels.category} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.CustomerC}>\n                                            {`${labels.customer} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.CustomerD}>\n                                            {`${labels.customer} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.DateC}>\n                                            {`${labels.date} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.DateD}>\n                                            {`${labels.date} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TitleC}>\n                                            {`${labels.title} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TitleD}>\n                                            {`${labels.title} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TypeC}>\n                                            {`${labels.type} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TypeD}>\n                                            {`${labels.type} ${labels.descending}`}\n                                        </Option>\n                                    </Select>\n                                )}\n                        </span>\n                    )}\n                </header>\n            )}\n            {items && (\n                <Fragment>\n                    {items.length > 0 && <div className=\"items-ym83\">{items}</div>}\n                    {items.length < 1 && (\n                        <div className=\"no-result-ym83\">\n                            <p>{labels.noMatchingResult}</p>\n                        </div>\n                    )}\n                </Fragment>\n            )}\n\n            {withShowMore && showing < Children.count(children) && (\n                <footer className=\"shelf-footer-ym83\">\n                    <Button\n                        className=\"show-more-button-ym83\"\n                        onClick={onShowMoreClickHandler}\n                        type=\"button\"\n                        color=\"transparent\"\n                    >\n                        <ChevronDownIcon className=\"show-more-icon-ym83\" />\n                        <span className=\"show-more-text-ym83\">{labels.showMore}</span>\n                    </Button>\n                </footer>\n            )}\n        </div>\n    )\n}\n\nexport default Shelf\n\nexport enum ShelfSortCategories {\n    CategoryC = \"categoryC\",\n    CategoryD = \"categoryD\",\n    CustomerC = \"customerC\",\n    CustomerD = \"customerD\",\n    DateC = \"dateC\",\n    DateD = \"dateD\",\n    TitleC = \"titleC\",\n    TitleD = \"titleD\",\n    TypeC = \"typeC\",\n    TypeD = \"typeD\",\n}\n","import {AllHTMLAttributes, CSSProperties, ElementType, FC, useCallback, useEffect, useRef, useState} from \"react\"\nimport {onTrasitionEnd} from \"~/utilities/transition\"\n\ntype DrawerProps = AllHTMLAttributes<HTMLElement> & {\n    closed: boolean\n    as?: ElementType\n}\n\nconst defaultStyle: React.CSSProperties = {\n    overflow: \"hidden\",\n    transitionDuration: \"0.5s\",\n    transitionTimingFunction: \"cubic-bezier(0.645, 0.045, 0.355, 1)\",\n}\n\nconst Drawer: FC<DrawerProps> = props => {\n    const {children, closed: _closed, as: Component = \"div\", style, ...otherProps} = props\n    const drawerRef = useRef<HTMLElement>(null)\n    const [isClosed, setClosed] = useState(_closed)\n    const [transitionStyle, setTransitionStyle] = useState<CSSProperties>(_closed ? {display: \"none\"} : {})\n\n    const collapse = useCallback(() => {\n        if (!drawerRef.current) return\n        setTransitionStyle({height: drawerRef.current?.scrollHeight + \"px\"})\n        setTimeout(() => {\n            onTrasitionEnd(drawerRef.current, () => {\n                setTransitionStyle({display: \"none\"})\n                setClosed(true)\n            })\n            setTransitionStyle({height: \"0px\"})\n        }, 20)\n    }, [])\n\n    const expand = useCallback(() => {\n        if (!drawerRef.current) return\n        setTransitionStyle({height: \"0px\"})\n        setTimeout(() => {\n            onTrasitionEnd(drawerRef.current, () => {\n                setTransitionStyle({})\n                setClosed(false)\n            })\n            if (!drawerRef.current) return\n            setTransitionStyle({height: drawerRef.current.scrollHeight + \"px\"})\n        }, 20)\n    }, [])\n\n    useEffect(() => {\n        if (!drawerRef.current) return\n        if (_closed && !isClosed) {\n            collapse()\n        }\n        if (!_closed && isClosed) {\n            expand()\n        }\n    }, [_closed, isClosed, expand, collapse])\n\n    return (\n        <Component style={{...defaultStyle, ...transitionStyle}} ref={drawerRef} {...otherProps}>\n            {children}\n        </Component>\n    )\n}\n\nexport default Drawer\n","import clsx from \"clsx\"\nimport {useState} from \"react\"\nimport Drawer from \"~/components/UI/Drawer/Drawer\"\nimport ChevronUpIcon from \"~/icons/ChevronUpIcon\"\nimport \"./Accordion.css\"\n\nexport interface AccordionProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n    title?: string | null | undefined\n    startClosed?: boolean | undefined\n    titleClassName?: string | undefined\n    iconClassName?: string | undefined\n}\n\nconst Accordion: React.FC<AccordionProps> = props => {\n    const {className, titleClassName, iconClassName, title, startClosed = false, children, ...otherProps} = props\n    const [closed, setClosed] = useState(startClosed)\n\n    return (\n        <div className={clsx(\"accordion-90d3\", closed ? \"closed-90d3\" : \"\", className)} {...otherProps}>\n            <button className=\"button-90d3\" onClick={e => setClosed(state => !state)}>\n                <ChevronUpIcon className={clsx(\"icon-90d3 \", iconClassName)} />\n                <span className={clsx(titleClassName, \"\")}>{title}</span>\n            </button>\n            <Drawer closed={closed} className=\"content-90d3\">\n                {children}\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Accordion\n","import {Link, LinkProps} from \"@gatsbyjs/reach-router\"\nimport clsx from \"clsx\"\nimport {navigate} from \"gatsby\"\nimport React, {useContext} from \"react\"\nimport Ripple, {RippleColor} from \"~/components/UI/Ripple/Ripple\"\nimport TransitionContext from \"~/contexts/TransitionContext\"\nimport NavBarContext from \"../../../contexts/NavBarContext\"\nimport {ButtonColor} from \"./Button\"\n\nimport \"./Button.css\"\n\nexport interface LinkButtonProps extends Omit<LinkProps<any>, \"to\"> {\n    color?: ButtonColor\n    withoutTransition?: boolean | undefined\n    to?: string | null | undefined\n}\n\nconst LinkButton: React.FC<LinkButtonProps> = props => {\n    const {\n        color = \"green\",\n        to = \"\",\n        children,\n        download,\n        withoutTransition,\n        onClick,\n        className,\n        ref,\n        ...otherProps\n    } = props\n    const internal = /^\\/(?!\\/)/.test(to ? to : \"\")\n    const transitionContenxt = useContext(TransitionContext)\n    const navbarContext = useContext(NavBarContext)\n\n    let rippleColor: RippleColor = \"light-green\"\n    switch (color) {\n        case \"green\":\n            rippleColor = \"light-green\"\n            break\n        case \"white\":\n            rippleColor = \"green\"\n            break\n        case \"blue\":\n            rippleColor = \"blue\"\n            break\n        case \"gray\":\n            rippleColor = \"gray\"\n            break\n        case \"red\":\n            rippleColor = \"red\"\n            break\n    }\n\n    const goTo = (url: string) => {\n        if (!url) return\n        if (withoutTransition) {\n            navigate(url)\n            return\n        }\n        transitionContenxt.navigateTo(url)\n    }\n\n    const onClickHandler = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        event.preventDefault()\n        navbarContext.hide(1000)\n        if (onClick) onClick(event)\n        goTo(event.currentTarget.href)\n    }\n\n    const button =\n        internal && to ? (\n            <Link\n                className={clsx(\"button-8p4x\", `${color}-8p4x`, className)}\n                to={to}\n                download={download}\n                target=\"_self\"\n                onClick={onClickHandler}\n                {...otherProps}\n            >\n                {children}\n            </Link>\n        ) : (\n            <a\n                href={to ?? undefined}\n                className={clsx(\"button-8p4x\", `${color}-8p4x`, className)}\n                download={download}\n                target={download ? \"_self\" : \"_blank\"}\n                ref={ref}\n                rel=\"noreferrer\"\n                {...otherProps}\n            >\n                {children}\n            </a>\n        )\n\n    return <Ripple color={rippleColor}>{button}</Ripple>\n}\n\nexport default LinkButton\n","import clsx from \"clsx\"\nimport {Children, ReactNode, useCallback, useRef} from \"react\"\nimport \"./Fader.css\"\n\ninterface FaderComponents {\n    Slide: React.FC<{children: ReactNode}>\n}\n\ninterface FaderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\" | \"onSelect\"> {\n    children: ReactNode\n    selected: number\n    onSelect?: undefined | ((value: number) => void)\n    slideClass?: undefined | string\n}\n\nconst Fader: React.FC<FaderProps> & FaderComponents = (props: FaderProps) => {\n    const {selected, onSelect, className, slideClass, children, ...otherProps} = props\n    const touchStartRef = useRef<undefined | number>()\n\n    const onTouchStart = useCallback((event: React.TouchEvent<HTMLDivElement>) => {\n        touchStartRef.current = event.touches[0]?.screenX\n    }, [])\n\n    const onTouchMove = useCallback(\n        (event: React.TouchEvent<HTMLDivElement>) => {\n            const currentX = event.touches[0]?.screenX\n\n            if (false || typeof currentX === \"undefined\" || typeof touchStartRef.current === \"undefined\") {\n                return\n            }\n\n            const movesLeft = currentX > touchStartRef.current + 50\n            const movesRight = currentX < touchStartRef.current - 50\n\n            if (movesLeft) {\n                onSelect?.(Math.max(selected - 1, 0))\n                touchStartRef.current = undefined\n                return\n            }\n            if (movesRight) {\n                onSelect?.(Math.min(selected + 1, Children.count(children) - 1))\n                touchStartRef.current = undefined\n                return\n            }\n        },\n        [selected],\n    )\n\n    return (\n        <div {...otherProps} className={clsx(\"fader-kpz3\", className)}>\n            {Children.map(children, (child, index) => (\n                <div\n                    key={index}\n                    className={clsx(\"slide-kpz3\", slideClass, {\n                        \"selected-kpz3\": selected === index,\n                    })}\n                    onTouchStart={onTouchStart}\n                    onTouchMove={onTouchMove}\n                >\n                    {child}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Fader\n\nconst Slide: React.FC<{children: ReactNode}> = props => <>{props.children}</>\n\nFader.Slide = Slide\n","import clsx from \"clsx\"\nimport \"./Gap.css\"\n\ninterface GapProps extends React.HTMLAttributes<HTMLDivElement> {\n    centered?: boolean | undefined\n}\n\nconst Gap: React.FC<GapProps> = props => {\n    const {className, centered = false, ...otherProps} = props\n\n    return <div className={clsx(\"gap-q2z3\", centered ? \"centered-q2z3\" : \"\", className)} {...otherProps} />\n}\n\nexport default Gap\n","import clsx from \"clsx\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport \"./ScrollButton.css\"\n\ninterface ScrollButtonProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ScrollButton = (props: ScrollButtonProps) => {\n    const {onClick, className, ...otherProps} = props\n    return (\n        <div className={clsx(\"scroller-r94f\", className)} {...otherProps}>\n            <div className=\"mouse-r94f\">\n                <div className=\"scroll-r94f\"></div>\n            </div>\n            <ChevronDownIcon className=\"icon-r94f\" />\n        </div>\n    )\n}\n\nexport default ScrollButton\n","import clsx from \"clsx\"\nimport {forwardRef, useState} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport \"./Select.css\"\n\ninterface SelectProps extends Omit<React.SelectHTMLAttributes<HTMLSelectElement>, \"placeholder\"> {\n    placeholder?: string | undefined\n    containerProps?: React.HTMLAttributes<HTMLDivElement> | undefined\n    invalid?: boolean\n}\n\nconst Select: React.FC<SelectProps> = forwardRef<HTMLSelectElement, SelectProps>((props, ref): JSX.Element => {\n    const {className, invalid, id, onChange, placeholder = \" - \", containerProps, children, ...otherProps} = props\n    const [selected, setSelected] = useState(\"undefined\")\n\n    const onSelectChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        if (onChange) onChange(event)\n        setSelected(event.currentTarget.value)\n    }\n\n    return (\n        <div\n            className={clsx(\n                \"select-container-fn79\",\n                selected === \"undefined\" ? \"gray-x8np\" : \"\",\n                invalid ? \"invalid-fn79\" : \"\",\n                className,\n            )}\n            {...containerProps}\n        >\n            <select id={id} className=\"select-fn79\" onChange={onSelectChangeHandler} ref={ref} {...otherProps}>\n                <option value=\"undefined\" key=\"-1\">\n                    {placeholder}\n                </option>\n                {children}\n            </select>\n            <div className=\"icon-container-fn79\">\n                <ChevronDownIcon className=\"icon-fn79\" />\n            </div>\n        </div>\n    )\n})\n\nexport default Select\n\ninterface OptionProps extends React.OptionHTMLAttributes<HTMLOptionElement> {\n    children: string\n}\n\nexport const Option: React.FC<OptionProps> = props => {\n    const {children, value, ...otherProps} = props\n    return (\n        <option value={value ? value : children} {...otherProps}>\n            {children}\n        </option>\n    )\n}\n","import clsx from \"clsx\"\nimport {useEffect, useState} from \"react\"\nimport Ripple from \"~/components/UI/Ripple/Ripple\"\nimport \"./Switch.css\"\n\ninterface SwitchProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"select\" | \"onSelect\"> {\n    selected?: boolean | undefined\n    onSelect?: ((event: React.MouseEvent<HTMLButtonElement>) => void) | undefined\n}\n\nconst Switch: React.FC<SwitchProps> = props => {\n    const {className, selected = false, onSelect, children, ...otherProps} = props\n    const [_selected, _setSelected] = useState(selected)\n\n    useEffect(() => {\n        _setSelected(selected)\n    }, [selected])\n\n    const onButtonClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (onSelect) onSelect(event)\n    }\n\n    return (\n        <Ripple>\n            <button\n                className={clsx(\"switch-n8h6\", _selected ? \"selected-n8h6\" : \"\", className)}\n                onClick={onButtonClickHandler}\n                {...otherProps}\n            >\n                {children}\n            </button>\n        </Ripple>\n    )\n}\n\nexport default Switch\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useAcademyPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.AcademyPostsQuery = useStaticQuery(graphql`\n        query AcademyPosts {\n            allContentfulContenutoMagazine(filter: {nascosto: {ne: true}, type: {eq: \"academy\"}}) {\n                nodes {\n                    date\n                    title\n                    category\n                    type\n                    tags\n                    description_short\n                    slug\n                    image {\n                        url\n                        gatsbyImageData(\n                            layout: CONSTRAINED\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: DOMINANT_COLOR\n                            quality: 90\n                        )\n                        title\n                    }\n                    immagineSocialShare {\n                        title\n                        height\n                        width\n                        url\n                        gatsbyImageData(\n                            layout: FULL_WIDTH\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: BLURRED\n                            quality: 90\n                        )\n                    }\n                    node_locale\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoMagazine.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useBlogPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.BlogPostsQuery = useStaticQuery(graphql`\n        query BlogPosts {\n            allContentfulContenutoMagazine(filter: {nascosto: {ne: true}, type: {eq: \"blog\"}}) {\n                nodes {\n                    date\n                    title\n                    category\n                    type\n                    tags\n                    description_short\n                    slug\n                    image {\n                        url\n                        gatsbyImageData(\n                            layout: CONSTRAINED\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: DOMINANT_COLOR\n                            quality: 90\n                        )\n                        title\n                    }\n                    immagineSocialShare {\n                        title\n                        height\n                        width\n                        url\n                        gatsbyImageData(\n                            layout: FULL_WIDTH\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: BLURRED\n                            quality: 90\n                        )\n                    }\n                    node_locale\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoMagazine.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useCasePostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.CasePostsQuery = useStaticQuery(graphql`\n        query CasePosts {\n            allContentfulContenutoCaseHistory {\n                nodes {\n                    customer\n                    slug\n                    type\n                    image {\n                        url\n                        gatsbyImageData(\n                            layout: CONSTRAINED\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: DOMINANT_COLOR\n                            quality: 90\n                        )\n                        title\n                    }\n                    immagineSocialShare {\n                        title\n                        height\n                        width\n                        url\n                        gatsbyImageData(\n                            layout: FULL_WIDTH\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: BLURRED\n                            quality: 90\n                        )\n                    }\n                    title\n                    description_short\n                    project\n                    node_locale\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoCaseHistory.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useEventPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.EventPostsQuery = useStaticQuery(graphql`\n        query EventPosts {\n            allContentfulContenutoMagazine(filter: {nascosto: {ne: true}, type: {eq: \"events\"}}) {\n                nodes {\n                    date\n                    title\n                    category\n                    type\n                    tags\n                    description_short\n                    slug\n                    image {\n                        url\n                        gatsbyImageData(\n                            layout: CONSTRAINED\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: DOMINANT_COLOR\n                            quality: 90\n                        )\n                        title\n                    }\n                    immagineSocialShare {\n                        title\n                        height\n                        width\n                        url\n                        gatsbyImageData(\n                            layout: FULL_WIDTH\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: BLURRED\n                            quality: 90\n                        )\n                    }\n                    node_locale\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoMagazine.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {HeadFC, PageProps} from \"gatsby\"\nimport {IGatsbyImageData} from \"gatsby-plugin-image\"\nimport {Fragment, useEffect, useRef, useState} from \"react\"\nimport HeroSection from \"~/components/Sections/HeroSection/HeroSection\"\nimport Search from \"~/components/Sections/Search/Search\"\nimport Post from \"~/components/Sections/Shelf/Post\"\nimport Shelf, {ShelfSortCategories} from \"~/components/Sections/Shelf/Shelf\"\nimport Button from \"~/components/UI/Button/Button\"\nimport Fader from \"~/components/UI/Fader/Fader\"\nimport Gap from \"~/components/UI/Gap/Gap\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport MultiStyleText from \"~/components/UI/MultiStyleText/MultiStyleText\"\nimport ScrollButton from \"~/components/UI/ScrollButton/ScrollButton\"\nimport SectionContainer from \"~/components/UI/SectionContainer/SectionContainer\"\nimport Switch from \"~/components/UI/Switch/Switch\"\nimport {useAcademyPostsQuery} from \"~/queries/AcademyPostsQuery\"\nimport {useBlogPostsQuery} from \"~/queries/BlogPostsQuery\"\nimport {useCasePostsQuery} from \"~/queries/CasePostsQuery\"\nimport {useEventPostsQuery} from \"~/queries/EventPostsQuery\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport {PostItem, PostTypes} from \"~/types/PostItem\"\nimport {getQueryParam, setQueryParams} from \"~/utilities/queryParams\"\nimport {SEO} from \"../components/UI/SEO/SEO\"\nimport {PageContext} from \"../types/PageContext\"\n\ntype MagazinePageContext = PageContext<Queries.MagazinePageQuery[\"allContentfulPaginaMagazine\"][\"edges\"][0][\"node\"]>\n\ninterface MagazinePageProps extends PageProps<any, MagazinePageContext> {}\n\nexport const MagazineSectionParam = \"section\"\nexport const MagazineSearchParam = \"search\"\nexport const MagazineSortParam = \"sort\"\n\nexport enum SectionIndex {\n    index = 0,\n    blog = 1,\n    caseHistory = 2,\n    academy = 3,\n    events = 4,\n}\n\ninterface SectionContent {\n    title: string | undefined | null\n    image: IGatsbyImageData | undefined | null\n    mobileImage: IGatsbyImageData | undefined | null\n    imageAlt: string | undefined | null\n    slug: string | undefined | null\n}\n\nconst MagazinePage: React.FC<MagazinePageProps> = props => {\n    const magazinePageData = props.pageContext.data\n\n    const getFilteredItems = () => {\n        const posts: Array<PostItem> = []\n        allPosts.forEach(post => {\n            if (selectedSectionName !== PostTypes.all && post.type !== selectedSectionName) return\n            if (inputTextValue !== \"\") {\n                let foundInTitle = false\n                let foundInDescription = false\n                let foundInCategory = false\n                let foundInCustomer = false\n                let foundInProject = false\n                let foundInTags = false\n\n                const lowCaseValueToFind = inputTextValue.toLowerCase()\n                if (post.title && post.title.toLowerCase().indexOf(lowCaseValueToFind) > -1) foundInTitle = true\n                if (post.description_short && post.description_short.toLowerCase().indexOf(lowCaseValueToFind) > -1)\n                    foundInDescription = true\n                if (post.category && post.category.toLowerCase().indexOf(lowCaseValueToFind) > -1)\n                    foundInCategory = true\n                if (post.customer && post.customer.toLowerCase().indexOf(lowCaseValueToFind) > -1)\n                    foundInCustomer = true\n                if (post.project && post.project.toLowerCase().indexOf(lowCaseValueToFind) > -1) foundInProject = true\n                if (post.tags) {\n                    post.tags.forEach(tag => {\n                        if (tag && tag.toLowerCase().indexOf(lowCaseValueToFind) > -1) foundInTags = true\n                    })\n                }\n\n                if (\n                    !foundInTitle &&\n                    !foundInCategory &&\n                    !foundInDescription &&\n                    !foundInTags &&\n                    !foundInCustomer &&\n                    !foundInProject\n                )\n                    return\n            }\n\n            posts.push(post)\n        })\n        return posts\n    }\n\n    const asyncFIlterItems = async () => {\n        return getFilteredItems()\n    }\n\n    const allPosts: Array<PostItem> = [\n        ...useBlogPostsQuery(),\n        ...useCasePostsQuery(),\n        ...useAcademyPostsQuery(),\n        ...useEventPostsQuery(),\n    ] as Array<PostItem>\n\n    const sections = getSections(props.pageContext)\n    const sectionParam = getQueryParam(MagazineSectionParam)\n    const searchParam = getQueryParam(MagazineSearchParam)\n    const sortParam = getQueryParam(MagazineSortParam)\n\n    const [selectedSectionIndex, setSelectedSectionIndex] = useState<SectionIndex | number>(\n        sectionNameToIndex(sectionParam),\n    )\n    const [selectedSectionName, setSelectedSectionName] = useState<PostTypes | string>(sectionParam ? sectionParam : \"\")\n\n    const [selectedSort, setSelectedSort] = useState<ShelfSortCategories | string>(sortParam ? sortParam : \"\")\n    const [inputTextValue, setInputTextValue] = useState(searchParam ? searchParam : \"\")\n\n    const [shelfItems, setShelfItems] = useState<Array<PostItem>>(getFilteredItems())\n    const [isLoading, setLoading] = useState<boolean>(false)\n    const searchRef = useRef<HTMLElement | null>(null)\n\n    useEffect(() => {\n        if (!sectionParam) return\n        setSelectedSectionName(sectionParam)\n        setSelectedSectionIndex(sectionNameToIndex(sectionParam))\n    }, [sectionParam])\n\n    useEffect(() => {\n        updateShelf()\n    }, [selectedSectionName, selectedSort])\n\n    const onSwitchClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const selectedType = Number(event.currentTarget.value)\n        setSelectedSectionIndex(selectedType)\n        setSelectedSectionName(sectionsIndexToname(selectedType))\n    }\n\n    const onInputChangeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInputTextValue(event.currentTarget.value)\n    }\n\n    const onSortChange = (value: ShelfSortCategories | string) => {\n        setSelectedSort(value)\n    }\n\n    const updateShelf = () => {\n        updateUrl()\n        setLoading(true)\n        asyncFIlterItems()\n            .then(posts => {\n                setShelfItems(posts)\n            })\n            .then(() => {\n                setLoading(false)\n            })\n    }\n\n    const onFormSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        updateShelf()\n    }\n\n    const updateUrl = () => {\n        setQueryParams(\n            {name: MagazineSectionParam, value: selectedSectionName},\n            {name: MagazineSearchParam, value: inputTextValue},\n            {name: MagazineSortParam, value: selectedSort},\n        )\n    }\n\n    return (\n        <Fragment>\n            <Fader selected={selectedSectionIndex}>\n                {sections.map((section, index) => {\n                    return (\n                        <Fader.Slide key={index}>\n                            <HeroSection\n                                image={section?.image}\n                                imageAlt={section?.imageAlt}\n                                mobileImage={section?.mobileImage}\n                            >\n                                <MultiStyleText\n                                    flex\n                                    className1=\"hero-title-part-1-d2bh\"\n                                    className2=\"hero-title-part-2-d2bh\"\n                                >\n                                    {section.title}\n                                </MultiStyleText>\n                            </HeroSection>\n                        </Fader.Slide>\n                    )\n                })}\n            </Fader>\n            <SectionContainer tabbed marginPost customTab={<ScrollButton />} ref={searchRef}>\n                <Search title={magazinePageData.titolo}>\n                    <Gap centered style={{marginTop: \"var(--gutter-4)\"}}>\n                        <Switch\n                            key={magazinePageData.allLabel}\n                            selected={selectedSectionIndex === SectionIndex.index}\n                            onSelect={onSwitchClickHandler}\n                            value={SectionIndex.index}\n                        >\n                            {magazinePageData.allLabel}\n                        </Switch>\n                        {magazinePageData.sezioni?.map((section, index) => {\n                            const fixedIndex = index + 1\n                            return (\n                                <Switch\n                                    key={section?.slug}\n                                    selected={selectedSectionIndex === fixedIndex}\n                                    onSelect={onSwitchClickHandler}\n                                    value={fixedIndex}\n                                >\n                                    {section?.titolo}\n                                </Switch>\n                            )\n                        })}\n                    </Gap>\n                    <form onSubmit={onFormSubmitHandler}>\n                        <Gap centered>\n                            <InputText\n                                {...(magazinePageData.searchInputPlaceholder\n                                    ? {placeholder: magazinePageData.searchInputPlaceholder}\n                                    : {})}\n                                onChange={onInputChangeValue}\n                                value={inputTextValue}\n                                style={{\n                                    width: \"min(30vw,500px)\",\n                                    minWidth: \"240px\",\n                                    fontStyle: \"italic\",\n                                }}\n                            />\n                            <Button color=\"green\" type=\"submit\">\n                                {magazinePageData.searchButtonLabel}\n                            </Button>\n                        </Gap>\n                    </form>\n                </Search>\n            </SectionContainer>\n            <SectionContainer>\n                <Shelf withShowMore withSorting loading={isLoading} sortyBy={sortParam} onSortSelect={onSortChange}>\n                    {shelfItems.map((item, index) => {\n                        return (\n                            <Post\n                                key={index}\n                                date={item.date}\n                                title={item.title}\n                                image={item.image}\n                                category={item.category}\n                                tags={item.tags}\n                                description_short={item.description_short}\n                                slug={item.slug}\n                                type={item.type}\n                                customer={item.customer}\n                                project={item.project}\n                            />\n                        )\n                    })}\n                </Shelf>\n            </SectionContainer>\n        </Fragment>\n    )\n}\n\nexport default MagazinePage\n\nconst getSections = (magazinePageContext: MagazinePageContext): Array<SectionContent> => {\n    const sections: Array<SectionContent> = []\n    const index: SectionContent = {\n        title: magazinePageContext.data.titolo,\n        image: magazinePageContext.data.header?.gatsbyImageData,\n        mobileImage: magazinePageContext.data.headerMobile?.gatsbyImageData,\n        imageAlt: magazinePageContext.data.headerMobile?.title,\n        slug: magazinePageContext.data.slug,\n    }\n    sections.push(index)\n    magazinePageContext.data.sezioni?.forEach(sezione => {\n        sections.push({\n            title: sezione?.titolo,\n            image: sezione?.header?.gatsbyImageData,\n            mobileImage: sezione?.headerMobile?.gatsbyImageData,\n            imageAlt: sezione?.header?.title,\n            slug: sezione?.slug,\n        })\n    })\n    return sections\n}\n\nexport const sectionNameToIndex = (value: string | undefined | null): number => {\n    switch (value) {\n        case PostTypes.blog:\n            return SectionIndex.blog\n        case PostTypes.caseHistory:\n            return SectionIndex.caseHistory\n        case PostTypes.academy:\n            return SectionIndex.academy\n        case PostTypes.events:\n            return SectionIndex.events\n        default:\n            return SectionIndex.index\n    }\n}\nexport const sectionsIndexToname = (value: number | undefined | null): string => {\n    switch (value) {\n        case SectionIndex.academy:\n            return PostTypes.academy\n        case SectionIndex.blog:\n            return PostTypes.blog\n        case SectionIndex.caseHistory:\n            return PostTypes.caseHistory\n        case SectionIndex.events:\n            return PostTypes.events\n        default:\n            return PostTypes.all\n    }\n}\n\nexport const Head: HeadFC<any, MagazinePageContext> = props => {\n    const magazinePageData = props.pageContext.data\n\n    const links = useLinksQuery()\n\n    return (\n        <SEO\n            title={magazinePageData.titolo ?? magazinePageData.titolo}\n            language={props.pageContext.language}\n            image={magazinePageData.header?.url}\n            imageAlt={magazinePageData.header?.title}\n            siteUrl={`${process.env.SITE_URL}${links.magazine.url}`}\n        />\n    )\n}\n","import {useLocation} from \"@reach/router\"\n\nexport const getQueryParam = (paramName: string) => {\n    const search = new URLSearchParams(useLocation().search)\n    return search.get(paramName)\n}\n\nexport const setQueryParams = (...urlParams: Array<URLParam | undefined>) => {\n    const url = generateQueryParams(...urlParams)\n    if (url.length > 0) {\n        history.replaceState(null, \"\", `?${url}`)\n    } else {\n        history.replaceState(null, \"\", location.pathname)\n    }\n}\n\nexport const generateQueryParams = (...urlParams: Array<URLParam | undefined>): string => {\n    const queryStrings: Array<string> = []\n    urlParams.forEach(urlParam => {\n        if (!urlParam || !urlParam.name || !urlParam.value) return\n        queryStrings.push(`${urlParam.name}=${urlParam.value}`)\n    })\n    const url = queryStrings.join(\"&\")\n    return url\n}\n\nexport interface URLParam {\n    name: string | undefined\n    value: string | undefined\n}\n","export const onTrasitionEnd = (element: HTMLElement | undefined | null, callback: Function) => {\r\n    if (!element) return\r\n    const handleTransitionEnd = (ev: TransitionEvent) => {\r\n        if (ev.target === element) {\r\n            element.removeEventListener(\"transitionend\", handleTransitionEnd)\r\n        }\r\n        callback()\r\n    }\r\n    element.addEventListener(\"transitionend\", handleTransitionEnd)\r\n}\r\n"],"names":["props","className","otherProps","_jsx","Accordion","clsx","titleClassName","iconClassName","date","image","title","category","tags","description_short","pdf","slug","customer","project","children","type","labels","useLabelsQuery","i18n","useContext","I18nContext","formattedDate","Intl","DateTimeFormat","language","day","month","year","format","Date","postStyle","PostTypes","blog","caseHistory","academy","events","analysis","video","onDemand","podcast","_jsxs","GenericLink","to","url","gatsbyImageData","GatsbyImage","alt","tag","join","LinkButton","read","download","downloadPdf","loading","label","withSorting","withShowMore","sortyBy","sort","onSortSelect","show","showing","setShowing","useState","sortBy","setSortBy","ShelfSortCategories","DateC","items","setItems","isLoading","setLoading","timeoutRef","useRef","updateItems","async","itemsToShow","Children","toArray","CategoryC","a","b","localeCompare","CategoryD","CustomerC","CustomerD","DateD","TitleC","TitleD","TypeC","TypeD","slice","useEffect","then","result","current","setTimeout","clearTimeout","htmlFor","ascending","descending","Select","id","value","onChange","event","currentTarget","Option","Fragment","length","noMatchingResult","count","Button","onClick","state","color","ChevronDownIcon","showMore","defaultStyle","overflow","transitionDuration","transitionTimingFunction","closed","_closed","as","Component","style","drawerRef","isClosed","setClosed","transitionStyle","setTransitionStyle","display","collapse","useCallback","_drawerRef$current","height","scrollHeight","onTrasitionEnd","expand","ref","startClosed","e","ChevronUpIcon","Drawer","withoutTransition","internal","test","transitionContenxt","TransitionContext","navbarContext","NavBarContext","rippleColor","button","Link","target","preventDefault","hide","href","navigate","navigateTo","undefined","rel","Ripple","Fader","selected","onSelect","slideClass","touchStartRef","onTouchStart","_event$touches$","touches","screenX","onTouchMove","_event$touches$2","currentX","movesLeft","movesRight","Math","max","min","map","child","index","Slide","_Fragment","centered","forwardRef","invalid","placeholder","containerProps","setSelected","_selected","_setSelected","useAcademyPostsQuery","data","useStaticQuery","localizedData","post","allContentfulContenutoMagazine","nodes","node_locale","push","useBlogPostsQuery","useCasePostsQuery","allContentfulContenutoCaseHistory","useEventPostsQuery","MagazineSectionParam","MagazineSearchParam","MagazineSortParam","SectionIndex","_magazinePageData$sez","magazinePageData","pageContext","getFilteredItems","posts","allPosts","forEach","selectedSectionName","all","inputTextValue","foundInTitle","foundInDescription","foundInCategory","foundInCustomer","foundInProject","foundInTags","lowCaseValueToFind","toLowerCase","indexOf","concat","_toConsumableArray","sections","getSections","sectionParam","getQueryParam","searchParam","sortParam","selectedSectionIndex","setSelectedSectionIndex","sectionNameToIndex","setSelectedSectionName","selectedSort","setSelectedSort","setInputTextValue","shelfItems","setShelfItems","searchRef","updateShelf","onSwitchClickHandler","selectedType","Number","sectionsIndexToname","updateUrl","asyncFIlterItems","setQueryParams","name","section","HeroSection","imageAlt","mobileImage","MultiStyleText","flex","className1","className2","SectionContainer","tabbed","marginPost","customTab","ScrollButton","Search","titolo","Gap","marginTop","Switch","allLabel","sezioni","fixedIndex","onSubmit","InputText","searchInputPlaceholder","width","minWidth","fontStyle","searchButtonLabel","Shelf","item","Post","magazinePageContext","_magazinePageContext$","_magazinePageContext$2","_magazinePageContext$3","_magazinePageContext$4","header","headerMobile","sezione","_sezione$header","_sezione$headerMobile","_sezione$header2","Head","_magazinePageData$tit","_magazinePageData$hea","_magazinePageData$hea2","links","useLinksQuery","SEO","siteUrl","magazine","paramName","URLSearchParams","useLocation","search","get","generateQueryParams","apply","arguments","history","replaceState","location","pathname","queryStrings","_len","urlParams","Array","_key","urlParam","element","callback","handleTransitionEnd","ev","removeEventListener","addEventListener"],"sourceRoot":""}