{"version":3,"file":"component---src-templates-contacts-template-tsx-06f2aad64a484ac54c7c.js","mappings":"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","sources":["webpack://adkaora.com/./src/icons/FileUploadIcon.tsx","webpack://adkaora.com/./src/components/UI/FileUpload/FileUpload.tsx","webpack://adkaora.com/./src/components/UI/ScrollButton/ScrollButton.tsx","webpack://adkaora.com/./src/components/UI/TextArea/TextArea.tsx","webpack://adkaora.com/./src/queries/AuthenticationLabelsQuery.tsx","webpack://adkaora.com/./src/components/UI/Radio/Radio.tsx","webpack://adkaora.com/./src/components/UI/Radio/RadioGroup.tsx","webpack://adkaora.com/./src/components/Forms/ContactUsFullForm.tsx","webpack://adkaora.com/./src/templates/ContactsTemplate.tsx"],"sourcesContent":["const FileUploadIcon: React.VFC<React.SVGProps<SVGSVGElement>> = props => {\n    const {viewBox, fill, stroke, ...otherProps} = props\n    return (\n        <svg fill={fill ? fill : \"currentColor\"} viewBox={viewBox ? viewBox : \"0 0 24 24 \"} {...otherProps}>\n            <path d=\"M18,15v3H6v-3H4v3c0,1.1,0.9,2,2,2h12c1.1,0,2-0.9,2-2v-3H18z M7,9l1.41,1.41L11,7.83V16h2V7.83l2.59,2.58L17,9l-5-5L7,9z\" />\n        </svg>\n    )\n}\n\nexport default FileUploadIcon\n","import {forwardRef, useImperativeHandle, useRef, useState} from \"react\"\nimport FileUploadIcon from \"~/icons/FileUploadIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./FileUpload.css\"\n\ninterface FileUploadProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"placeholder\"> {\n    id: string\n    invalid?: boolean\n    placeholder?: string | undefined | null\n    containerProps?: React.HTMLAttributes<HTMLDivElement> | undefined\n}\n\nconst FileUpload: React.FC<FileUploadProps> = forwardRef<HTMLInputElement, FileUploadProps>((props, ref) => {\n    const {className, id, invalid, placeholder, onChange, containerProps, children, ...otherProps} = props\n    const [label, setLabel] = useState(placeholder)\n    const [loaded, setLoaded] = useState(false)\n    const innerRef = useRef<HTMLInputElement | null>(null)\n    useImperativeHandle(ref, () => innerRef.current!, [innerRef])\n\n    const onInputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (onChange) onChange(event)\n        if (!event.currentTarget.files || event.currentTarget.files.length < 1) {\n            setLabel(placeholder)\n            setLoaded(false)\n            return\n        }\n        const filename = event.currentTarget.files[0]?.name\n        setLabel(filename)\n        setLoaded(true)\n    }\n\n    const onLabelKeyDownHandler = (event: React.KeyboardEvent<HTMLLabelElement>) => {\n        switch (event.key) {\n            case \"Enter\":\n                event.preventDefault()\n                innerRef.current?.click()\n                break\n            case \" \":\n                event.preventDefault()\n                innerRef.current?.click()\n                break\n        }\n    }\n\n    return (\n        <div\n            className={classes(\n                \"file-upload-container-x8np\",\n                loaded ? \"\" : \"gray-x8np\",\n                invalid ? \"invalid-x8np\" : \"\",\n                className,\n            )}\n            {...containerProps}\n        >\n            <label className=\"label-x8np\" htmlFor={id} tabIndex={0} onKeyDown={onLabelKeyDownHandler}>\n                {label}\n            </label>\n            <input\n                id={id}\n                className=\"file-upload-x8np\"\n                type=\"file\"\n                ref={innerRef}\n                {...otherProps}\n                onChange={onInputChangeHandler}\n            />\n            <div className=\"icon-container-x8np\">\n                <FileUploadIcon className=\"icon-x8np\" />\n            </div>\n        </div>\n    )\n})\n\nexport default FileUpload\n","import {HTMLAttributes} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./ScrollButton.css\"\n\ninterface ScrollButtonProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ScrollButton = (props: ScrollButtonProps) => {\n    const {onClick, className, ...otherProps} = props\n    return (\n        <div className={classes(\"scroller-r94f\", className)} {...otherProps}>\n            <div className=\"mouse-r94f\">\n                <div className=\"scroll-r94f\"></div>\n            </div>\n            <ChevronDownIcon className=\"icon-r94f\" />\n        </div>\n    )\n}\n\nexport default ScrollButton\n","import {forwardRef} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./TextArea.css\"\n\ninterface TextAreaProps extends Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, \"placeholder\"> {\n    placeholder: string | undefined | null\n    invalid?: boolean\n}\n\nconst TextArea: React.VFC<TextAreaProps> = forwardRef<HTMLTextAreaElement, TextAreaProps>((props, ref) => {\n    const {className, children, placeholder, invalid, ...otherProps} = props\n    return (\n        <textarea\n            ref={ref}\n            className={classes(\"textarea-7t3r\", invalid ? \"invalid-7t3r\" : \"\", className)}\n            placeholder={placeholder ? placeholder : \"\"}\n            {...otherProps}\n        />\n    )\n})\n\nexport default TextArea\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useAuthenticationLabelsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.AuthenticationLabelsQuery = useStaticQuery(graphql`\n        query AuthenticationLabels {\n            allContentfulAuthenticationLabels {\n                nodes {\n                    node_locale\n                    username\n                    password\n                    newPasswordSuccess\n                    name\n                    lastName\n                    email\n                    companyName\n                    companyType\n                    phoneNumber\n                    role\n                    attributesUpdateSuccess\n                    confirmationMessage {\n                        raw\n                    }\n                    passwordChangeMessage {\n                        raw\n                    }\n                    resetMessage {\n                        raw\n                    }\n                    signInMessage {\n                        raw\n                    }\n                    signUpMessage {\n                        raw\n                    }\n                    cognitoErrorMessage {\n                        raw\n                    }\n                    confirmationCode\n                    changePasswordButtonLabel\n                    clickHereLinkLabel\n                    completeRegistrationButtonLabel\n                    confirmButtonLabel\n                    forgottenPasswordQuestion\n                    resendConfirmationCodeLinkLabel\n                    resendConfirmationCodeQuestion\n                    signInButtonLabel\n                    signOutButtonLabel\n                    signUpButtonLabel\n                    validationInvalidConfirmationCode\n                    validationInvalidCredentials\n                    validationInvalidEmail\n                    validationInvalidLastName\n                    validationInvalidName\n                    validationInvalidPassword\n                    validationInvalidPasswordSpecs {\n                        raw\n                    }\n                    validationInvalidPhoneNumber\n                    alreadyHaveAccount\n                    missingAccount\n                    accountRequired {\n                        raw\n                    }\n                    wellcome\n                    cancelButtonLabel\n                    newPassword\n                    oldPassword\n                    resetPasswordButtonLabel\n                    updateFailed\n                    validationInvalidVerificationCode\n                    verificationCode\n                    validationEmailAlreadyUsed\n                    confirmAccountSuccess\n                }\n            }\n            allContentfulAuthenticationLabels2 {\n                nodes {\n                    forgottenPasswordMessage {\n                        raw\n                    }\n                    forgottenPasswordVerificationMessage {\n                        raw\n                    }\n                    node_locale\n                    update\n                    updateAttributesMessage {\n                        raw\n                    }\n                    attributesUpdateSuccess\n                    deleteAccountMessage {\n                        raw\n                    }\n                    deleteAccountButtonLabel\n                    accountDeleteSuccess\n                    updateAttributesButtonLabel\n                    deleteAccount\n                    backToTheHomepage\n                    unkownErrorMessage\n                    privateAreaAccessLinkMessage\n                    privateAreaAccessMessage\n                }\n            }\n        }\n    `)\n\n    let labelsData1 = data.allContentfulAuthenticationLabels.nodes[0]!\n    let labelsData2 = data.allContentfulAuthenticationLabels2.nodes[0]!\n\n    for (let translation of data.allContentfulAuthenticationLabels.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData1 = translation\n            break\n        }\n    }\n\n    for (let translation of data.allContentfulAuthenticationLabels2.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData2 = translation\n            break\n        }\n    }\n\n    const labelsData = {...labelsData1, ...labelsData2}\n\n    return labelsData\n}\n","import {forwardRef} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Radio.css\"\n\nexport interface RadioProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"onSelect\" | \"value\"> {\n    label: string | undefined | null\n    invalid?: boolean | undefined\n    containerProps?: React.HTMLAttributes<HTMLSpanElement> | undefined\n    selected?: boolean | undefined\n    onSelect?: ((value: string) => void) | undefined\n    value: string\n}\n\nconst Radio: React.VFC<RadioProps> = forwardRef<HTMLInputElement, RadioProps>((props, ref) => {\n    const {className, selected, onSelect, containerProps, value, label, invalid, children, onClick, ...otherProps} =\n        props\n\n    const onClickHandler = (event: React.MouseEvent<HTMLInputElement>) => {\n        if (onClick) onClick(event)\n        if (onSelect) onSelect(value)\n    }\n\n    return (\n        <span className={classes(\"radio-container-eb96\", className)} {...containerProps}>\n            <span className={classes(\"radio-eb96\", selected ? \"selected-eb96\" : \"\", invalid ? \"invalid-eb96\" : \"\")}>\n                <input\n                    className=\"radio-input-eb96\"\n                    type=\"radio\"\n                    ref={ref}\n                    aria-checked={selected}\n                    onClick={onClickHandler}\n                    value={value}\n                    {...otherProps}\n                />\n                <div className=\"check-dot-eb96\" />\n            </span>\n            {label && <span className=\"label-eb96\">{label}</span>}\n        </span>\n    )\n})\n\nexport default Radio\n","import {Children, cloneElement, forwardRef, isValidElement, useState} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport Radio, {RadioProps} from \"./Radio\"\nimport \"./RadioGroup.css\"\n\ninterface RadioGroupProps extends React.HTMLAttributes<HTMLDivElement> {\n    label?: string | undefined\n    vertical?: boolean | undefined\n    children?: Array<React.ReactElement<RadioProps>> | React.ReactElement<RadioProps> | undefined\n    invalid?: boolean | undefined\n    name: string\n}\n\nconst RadioGroup: React.FC<RadioGroupProps> = forwardRef<HTMLDivElement, RadioGroupProps>((props, ref) => {\n    const {label, name, invalid, vertical = false, className, children, ...otherProps} = props\n    const [selected, setSelected] = useState<string>(\"\")\n\n    const radioButtons = Children.map(children, child => {\n        if (!isValidElement<RadioProps>(child)) return\n        const radioButton = child as React.ReactElement<RadioProps>\n        if (radioButton.type !== Radio) return\n        const result = cloneElement(radioButton, {\n            invalid: invalid,\n            selected: selected === radioButton.props.value,\n            onSelect: setSelected,\n            name: name,\n        })\n        return result\n    })\n\n    return (\n        <div\n            ref={ref}\n            className={classes(\n                \"radio-group-w2zx\",\n                invalid ? \"invalid-w2zx\" : \"\",\n                vertical ? \"vertical-w2zx\" : \"\",\n                className,\n            )}\n            {...otherProps}\n        >\n            <span className=\"label-w2zx\">{label}</span>\n            <div className=\"radio-buttons-w2zx\">{radioButtons}</div>\n        </div>\n    )\n})\n\nexport default RadioGroup\n","import {useState} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport CheckBox from \"~/components/UI/CheckBox/CheckBox\"\nimport FileUpload from \"~/components/UI/FileUpload/FileUpload\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport Radio from \"~/components/UI/Radio/Radio\"\nimport RadioGroup from \"~/components/UI/Radio/RadioGroup\"\nimport TextArea from \"~/components/UI/TextArea/TextArea\"\nimport CheckIcon from \"~/icons/CheckIcon\"\nimport {useLabelsQuery} from \"~/queries/LabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport ErrorIcon from \"../../icons/ErrorIcon\"\nimport {useAuthenticationLabelsQuery} from \"../../queries/AuthenticationLabelsQuery\"\nimport {emailRegex, nameRegex, phoneRegex, textRegex} from \"../../utilities/RegexStrings\"\nimport \"./Form.css\"\n\ninterface ContactUsFullFormProps extends React.FormHTMLAttributes<HTMLFormElement> {}\n\n// Se il nome dei campi è caotico, dipende dalla form.\ntype ContactUsFullFields = {\n    Name_First: string\n    Name_Last: string\n    Email: string\n    SingleLine: string //Company name\n    PhoneNumber_countrycode: string\n    Dropdown: string\n    Dropdown1: string //Tipo\n    FileUpload: File\n    MultiLine: string\n    DecisionBox: \"on\" | \"\"\n    DecisionBox1: \"on\" | \"\"\n    DecisionBox2: \"on\" | \"\"\n}\n\ntype SubmitStatus = undefined | \"success\" | \"error\"\n\nconst ContactUsFullForm: React.VFC<ContactUsFullFormProps> = props => {\n    const {className, children, ...otherProps} = props\n    const [submitStatus, setSubmitStatus] = useState<SubmitStatus>()\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: {errors},\n    } = useForm<ContactUsFullFields>()\n    const labels = {...useLabelsQuery(), ...useAuthenticationLabelsQuery()}\n\n    const onFormSubmitHandler: SubmitHandler<ContactUsFullFields> = async inputData => {\n        const data = {...inputData, PhoneNumber_countrycode: inputData.PhoneNumber_countrycode.replace(\"+\", \"00\")}\n\n        const url =\n            \"https://forms.zohopublic.eu/adkaora/form/AdKaoranewwebsiteLAVORACONNOI/formperma/0UrFrFIFXXh4TlYIYqqlCXQMMRyLHuAazd6AyGFit14/htmlRecords/submit\"\n\n        const formData = new FormData()\n\n        for (let field in data) {\n            type ObjectKey = keyof typeof data\n            const fieldKey = field as ObjectKey\n            if (data[fieldKey] instanceof FileList) {\n                const fl = data[fieldKey] as unknown as FileList\n                if (fl[0]) {\n                    formData.append(field, fl[0], fl[0].name)\n                }\n                continue\n            }\n            if (typeof data[fieldKey] === \"boolean\") {\n                const bool = data[fieldKey] as unknown as boolean\n                if (bool) {\n                    formData.append(field, \"on\")\n                } else {\n                    formData.append(field, \"\")\n                }\n                continue\n            }\n\n            formData.append(field, data[fieldKey])\n        }\n\n        const requestOptions: RequestInit = {\n            method: \"POST\",\n            mode: \"cors\",\n            body: formData,\n            redirect: \"manual\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n        }\n\n        await fetch(url, requestOptions)\n            .then(result => {})\n            .catch((error: Error) => {})\n        setSubmitStatus(\"success\")\n    }\n\n    return (\n        <form\n            className={classes(\"form-ykf9\", \"white-background-ykf9\", className)}\n            onSubmit={handleSubmit(onFormSubmitHandler)}\n            {...otherProps}\n        >\n            <InputText\n                type=\"text\"\n                placeholder={labels.name}\n                invalid={errors.Name_First !== undefined}\n                {...register(\"Name_First\", {required: true, pattern: nameRegex})}\n            />\n            <InputText\n                type=\"text\"\n                placeholder={labels.lastName}\n                invalid={errors.Name_Last !== undefined}\n                {...register(\"Name_Last\", {required: true, pattern: nameRegex})}\n            />\n            <InputText\n                type=\"text\"\n                placeholder={labels.company}\n                invalid={errors.SingleLine !== undefined}\n                {...register(\"SingleLine\", {required: false, pattern: nameRegex})}\n            />\n            <InputText\n                type=\"email\"\n                placeholder={labels.eMail}\n                invalid={errors.Email !== undefined}\n                {...register(\"Email\", {\n                    required: true,\n                    pattern: emailRegex,\n                })}\n            />\n            <div className=\"full-width-ykf9\">\n                <InputText\n                    containerClassName=\"full-width-ykf9 phone-input-ykf9\"\n                    type=\"phone\"\n                    placeholder={labels.phoneNumber}\n                    invalid={errors.PhoneNumber_countrycode !== undefined}\n                    {...register(\"PhoneNumber_countrycode\", {\n                        required: true,\n                        pattern: phoneRegex,\n                    })}\n                />\n                {errors.PhoneNumber_countrycode !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidPhoneNumber}</div>\n                )}\n            </div>\n            <FileUpload\n                id=\"file\"\n                placeholder={labels.attachedFile}\n                accept=\".pdf,.zip,.rar,.7z\"\n                invalid={errors.FileUpload !== undefined}\n                {...register(\"FileUpload\", {required: false})}\n            />\n            <RadioGroup\n                className=\"span2-ykf9\"\n                label={labels.type ? labels.type : \"\"}\n                invalid={errors.Dropdown1 !== undefined}\n                name=\"Dropdown1\"\n            >\n                <Radio label={labels.advertiser} value={`advertiser`} {...register(\"Dropdown1\", {required: false})} />\n                <Radio label={labels.publisher} value={`publisher`} {...register(\"Dropdown1\", {required: false})} />\n                <Radio label={labels.candidate} value={`cadidate`} {...register(\"Dropdown1\", {required: false})} />\n                <Radio label={labels.other} value={`other`} {...register(\"Dropdown1\", {required: false})} />\n            </RadioGroup>\n            <TextArea\n                placeholder={labels.message}\n                rows={8}\n                className=\"span2-ykf9\"\n                invalid={errors.MultiLine !== undefined}\n                {...register(\"MultiLine\", {required: false, pattern: textRegex})}\n            />\n            <CheckBox\n                label={labels.privacyAcceptance}\n                className=\"span2-ykf9\"\n                invalid={errors.DecisionBox !== undefined}\n                {...register(\"DecisionBox\", {required: true})}\n            />\n            <CheckBox\n                label={labels.userProfiling}\n                className=\"span2-ykf9\"\n                invalid={errors.DecisionBox1 !== undefined}\n                {...register(\"DecisionBox1\", {required: false})}\n            />\n            <CheckBox\n                label={labels.userMarketing}\n                className=\"span2-ykf9\"\n                invalid={errors.DecisionBox2 !== undefined}\n                {...register(\"DecisionBox2\", {required: false})}\n            />\n            <Button className=\"span2-ykf9 button-ykf9\" type=\"submit\">\n                {labels.submitForm}\n            </Button>\n            {submitStatus === \"success\" && (\n                <div className=\"overlay-ykf9\">\n                    <div className=\"modal-ykf9\">\n                        <CheckIcon className=\"check-icon-ykf9\" />\n                        <span className=\"submit-success-message-ykf9\">{labels.submitSuccessMessage}</span>\n                    </div>\n                </div>\n            )}\n            {submitStatus === \"error\" && (\n                <div className=\"overlay-ykf9\">\n                    <div className=\"modal-ykf9\">\n                        <ErrorIcon className=\"error-icon-ykf9\" />\n                        <span className=\"submit-success-message-ykf9\">Error</span>\n                    </div>\n                </div>\n            )}\n        </form>\n    )\n}\n\nexport default ContactUsFullForm\n","import {PageProps} from \"gatsby\"\nimport {GatsbySeo} from \"gatsby-plugin-next-seo\"\nimport {Fragment, useContext} from \"react\"\nimport ContactUsFullForm from \"~/components/Forms/ContactUsFullForm\"\nimport Blank from \"~/components/Sections/Blank/Blank\"\nimport HeroSection from \"~/components/Sections/HeroSection/HeroSection\"\nimport MultiStyleText from \"~/components/UI/MultiStyleText/MultiStyleText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport ScrollButton from \"~/components/UI/ScrollButton/ScrollButton\"\nimport SectionContainer from \"~/components/UI/SectionContainer/SectionContainer\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport getTextFromHTML from \"~/utilities/getTextFromHTML\"\n\ninterface ContactsPageProps extends PageProps<any, ContactsPageContext> {}\n\nconst ContactsPage: React.FC<ContactsPageProps> = props => {\n    const contactsPageData = props.pageContext.data\n\n    const links = useLinksQuery()\n    const i18n = useContext(I18nContext)\n\n    return (\n        <Fragment>\n            <GatsbySeo\n                title={contactsPageData.titolo ? contactsPageData.titolo : \"\"}\n                canonical={`${process.env.SITE_URL}${links.about.url}`}\n                description={getTextFromHTML(contactsPageData.testo?.raw)}\n                language={i18n.language}\n                openGraph={{\n                    url: `${process.env.SITE_URL}${links.about.url}`,\n                    title: `${contactsPageData.titolo}`,\n                    description: `${getTextFromHTML(contactsPageData.testo?.raw)}`,\n                    locale: i18n.language,\n                    images: [\n                        {\n                            url: `${contactsPageData.immagine?.url}`,\n                            width: Number(contactsPageData.immagine?.width),\n                            height: Number(contactsPageData.immagine?.height),\n                            alt: `${contactsPageData.immagine?.title}`,\n                        },\n                    ],\n                }}\n            />\n            <HeroSection\n                image={contactsPageData.immagine?.gatsbyImageData}\n                imageAlt={contactsPageData.immagine?.title}\n                mobileImage={contactsPageData.immagineMobile?.gatsbyImageData}\n            >\n                <MultiStyleText flex className1=\"hero-title-part-1-d2bh\" className2=\"hero-title-part-2-d2bh\">\n                    {contactsPageData.titolo}\n                </MultiStyleText>\n            </HeroSection>\n            <SectionContainer tabbed marginPost customTab={<ScrollButton />} withFadeInEffect>\n                <Blank>\n                    <h3 className=\"no-margin\">{contactsPageData.titolo2}</h3>\n                    <RichTextField style={{marginTop: \"var(--gutter-5)\"}} className=\"font-h6 chars-h6-80\">\n                        {contactsPageData.testo?.raw}\n                    </RichTextField>\n                </Blank>\n            </SectionContainer>\n            <SectionContainer>\n                <ContactUsFullForm />\n            </SectionContainer>\n        </Fragment>\n    )\n}\nexport default ContactsPage\n\ninterface ContactsPageContext {\n    data: {\n        node_locale: string\n        id: string\n        slug?: string | null\n        titolo?: string | null\n        titolo2?: string | null\n        testo?: {raw?: string | null} | null\n        immagine?: {\n            title?: string | null\n            height?: number | null\n            width?: number | null\n            url?: string | null\n            gatsbyImageData?: any | null\n        } | null\n        immagineMobile?: {\n            title?: string | null\n            height?: number | null\n            width?: number | null\n            url?: string | null\n            gatsbyImageData?: any | null\n        } | null\n    }\n}\n"],"names":["props","viewBox","fill","stroke","otherProps","_jsx","d","forwardRef","ref","className","id","invalid","placeholder","onChange","containerProps","children","label","setLabel","useState","loaded","setLoaded","innerRef","useRef","useImperativeHandle","current","_jsxs","classes","htmlFor","tabIndex","onKeyDown","event","key","preventDefault","click","type","currentTarget","files","length","filename","_event$currentTarget$","name","FileUploadIcon","onClick","ChevronDownIcon","TextArea","useAuthenticationLabelsQuery","i18n","useContext","I18nContext","data","useStaticQuery","labelsData1","allContentfulAuthenticationLabels","nodes","labelsData2","allContentfulAuthenticationLabels2","translation","node_locale","language","selected","onSelect","value","vertical","setSelected","radioButtons","Children","child","isValidElement","radioButton","Radio","cloneElement","submitStatus","setSubmitStatus","register","handleSubmit","watch","formState","errors","useForm","labels","useLabelsQuery","onSubmit","async","inputData","PhoneNumber_countrycode","replace","formData","FormData","field","fieldKey","FileList","fl","append","requestOptions","method","mode","body","redirect","cache","credentials","fetch","then","result","catch","error","InputText","undefined","Name_First","required","pattern","nameRegex","lastName","Name_Last","company","SingleLine","eMail","Email","emailRegex","containerClassName","phoneNumber","phoneRegex","validationInvalidPhoneNumber","FileUpload","attachedFile","accept","RadioGroup","Dropdown1","advertiser","publisher","candidate","other","message","rows","MultiLine","textRegex","CheckBox","privacyAcceptance","DecisionBox","userProfiling","DecisionBox1","userMarketing","DecisionBox2","Button","submitForm","CheckIcon","submitSuccessMessage","ErrorIcon","contactsPageData","pageContext","links","useLinksQuery","Fragment","GatsbySeo","title","titolo","canonical","about","url","description","getTextFromHTML","testo","_contactsPageData$tes","raw","openGraph","_contactsPageData$tes2","locale","images","immagine","_contactsPageData$imm","width","Number","_contactsPageData$imm2","height","_contactsPageData$imm3","alt","_contactsPageData$imm4","HeroSection","image","_contactsPageData$imm5","gatsbyImageData","imageAlt","_contactsPageData$imm6","mobileImage","immagineMobile","_contactsPageData$imm7","MultiStyleText","flex","className1","className2","SectionContainer","tabbed","marginPost","customTab","ScrollButton","withFadeInEffect","Blank","titolo2","RichTextField","style","marginTop","_contactsPageData$tes3","ContactUsFullForm"],"sourceRoot":""}