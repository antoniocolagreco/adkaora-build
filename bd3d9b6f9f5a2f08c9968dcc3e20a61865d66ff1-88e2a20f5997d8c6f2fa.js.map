{"version":3,"file":"bd3d9b6f9f5a2f08c9968dcc3e20a61865d66ff1-88e2a20f5997d8c6f2fa.js","mappings":"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","sources":["webpack://adkaora.com/./src/components/Sections/Blank/Blank.tsx","webpack://adkaora.com/./src/components/UI/Drawer/Drawer.tsx","webpack://adkaora.com/./src/components/Sections/Search/Search.tsx","webpack://adkaora.com/./src/components/Sections/Shelf/Post.tsx","webpack://adkaora.com/./src/components/Sections/Shelf/Shelf.tsx","webpack://adkaora.com/./src/components/UI/Button/LinkButton.tsx","webpack://adkaora.com/./src/components/UI/Gap/Gap.tsx","webpack://adkaora.com/./src/components/UI/MultiStyleText/MultiStyleText.tsx","webpack://adkaora.com/./src/components/UI/RichText/RichText.tsx","webpack://adkaora.com/./src/components/UI/ScrollButton/ScrollButton.tsx","webpack://adkaora.com/./src/components/UI/Select/Select.tsx","webpack://adkaora.com/./src/components/UI/Switch/Switch.tsx","webpack://adkaora.com/./src/queries/AnalysisPostsQuery.tsx","webpack://adkaora.com/./src/queries/AuthenticationLabelsQuery.tsx","webpack://adkaora.com/./src/queries/OnDemandPostsQuery.tsx","webpack://adkaora.com/./src/queries/PodcastPostsQuery.tsx","webpack://adkaora.com/./src/queries/VideoPostsQuery.tsx","webpack://adkaora.com/./src/templates/PrivateAreaTemplate.tsx","webpack://adkaora.com/./src/utilities/queryParams.ts"],"sourcesContent":["import {HTMLAttributes} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Blank.css\"\n\ninterface BlankProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst Blank: React.FC<BlankProps> = props => {\n    const {className, children, ...otherProps} = props\n    return (\n        <div className={classes(\"blank-x5d9\", className)} {...otherProps}>\n            {children}\n        </div>\n    )\n}\n\nexport default Blank\n","import {CSSProperties, useEffect, useRef, useState} from \"react\"\n\ninterface DrawerProps extends React.HTMLAttributes<HTMLDivElement> {\n    closed?: boolean | undefined\n}\n\nconst Drawer: React.FC<DrawerProps> = props => {\n    const {closed: input_closed = false, style, children, ...otherProps} = props\n    const [closed, setClosed] = useState(input_closed)\n    const drawerRef = useRef<HTMLDivElement | null>(null)\n\n    const defaultStyle: React.CSSProperties = {\n        overflow: \"hidden\",\n        transitionDuration: \"0.5s\",\n        transitionTimingFunction: \"cubic-bezier(0.645, 0.045, 0.355, 1)\",\n    }\n\n    const closedStyle: React.CSSProperties = {\n        height: \"0px\",\n    }\n\n    const close = () => {\n        if (!drawerRef.current) return\n        drawerRef.current.style.height = drawerRef.current.scrollHeight + \"px\"\n        void drawerRef.current.offsetHeight\n        drawerRef.current.ontransitionend = () => {\n            if (!drawerRef.current) return\n            drawerRef.current.style.height = \"\"\n            drawerRef.current.ontransitionend = null\n            setClosed(true)\n        }\n        drawerRef.current.style.height = \"0px\"\n    }\n\n    const open = () => {\n        if (!drawerRef.current) return\n        drawerRef.current.ontransitionend = () => {\n            if (!drawerRef.current) return\n            drawerRef.current.style.removeProperty(\"height\")\n            drawerRef.current.ontransitionend = null\n            setClosed(false)\n        }\n        drawerRef.current.style.height = drawerRef.current.scrollHeight + \"px\"\n    }\n\n    useEffect(() => {\n        if (input_closed) {\n            close()\n        } else {\n            open()\n        }\n    }, [input_closed])\n\n    return (\n        <div {...otherProps} style={{...defaultStyle, ...(closed ? closedStyle : {}), ...style}} ref={drawerRef}>\n            {children}\n        </div>\n    )\n}\n\nexport default Drawer\n","import {useState} from \"react\"\nimport ChevronUpIcon from \"~/icons/ChevronUpIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport Drawer from \"~/components/UI/Drawer/Drawer\"\nimport \"./Search.css\"\n\ninterface SearchProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n    title?: string | null | undefined\n    startClosed?: boolean | undefined\n}\n\nconst Search: React.FC<SearchProps> = props => {\n    const {className, title, startClosed = false, children, ...otherProps} = props\n    const [closed, setClosed] = useState(startClosed)\n\n    return (\n        <div className={classes(\"search-k5ec\", closed ? \"closed-k5ec\" : \"\", className)} {...otherProps}>\n            <button className=\"button-k5ec\" onClick={e => setClosed(state => !state)}>\n                <ChevronUpIcon className=\"icon-k5ec\" />\n                <span className=\"title-k5ec\">{title}</span>\n            </button>\n            <Drawer closed={closed} className=\"content-k5ec\">\n                {children}\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Search\n","import {GatsbyImage} from \"gatsby-plugin-image\"\nimport {useContext} from \"react\"\nimport GenericLink from \"~/components/UI/GenericLink/GenericLink\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport {useLabelsQuery} from \"~/queries/LabelsQuery\"\nimport {PostItem, PostTypes} from \"~/types/PostItem\"\nimport {classes} from \"~/utilities/classes\"\nimport LinkButton from \"../../UI/Button/LinkButton\"\n\nimport \"./Post.css\"\n\nexport interface PostProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {}\n\ntype PostStyle = 1 | 2 | 3 | 4\n\nconst Post: React.VFC<PostProps & PostItem> = props => {\n    const {\n        date,\n        image,\n        title,\n        category,\n        tags,\n        description_short,\n        pdf,\n        slug,\n        customer,\n        project,\n        className,\n        children,\n        type,\n        ...otherProps\n    } = props\n    const labels = useLabelsQuery()\n    const i18n = useContext(I18nContext)\n\n    let formattedDate\n    if (date) {\n        formattedDate = new Intl.DateTimeFormat(i18n.language, {\n            day: \"numeric\",\n            month: \"long\",\n            year: \"numeric\",\n        }).format(new Date(date))\n    }\n\n    let postStyle: PostStyle = 1\n\n    switch (type) {\n        case PostTypes.blog:\n            postStyle = 1\n            break\n        case PostTypes.caseHistory:\n            postStyle = 2\n            break\n        case PostTypes.academy:\n            postStyle = 1\n            break\n        case PostTypes.events:\n            postStyle = 1\n            break\n        case PostTypes.analysis:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n        case PostTypes.video:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n        case PostTypes.onDemand:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n        case PostTypes.podcast:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n    }\n\n    return (\n        <div className={classes(\"post-n3j4\", className)} {...otherProps}>\n            <GenericLink {...(pdf ? {to: pdf?.url} : {to: `/${i18n.language}/${type}/${slug}/`})} className=\"left-n3j4\">\n                {image?.gatsbyImageData && image.title && (\n                    <GatsbyImage alt={image.title} image={image?.gatsbyImageData} className=\"image-n3j4\" />\n                )}\n                {(postStyle === 1 || postStyle === 2) && (\n                    <div className=\"overlay-n3j4\">\n                        {formattedDate && postStyle === 1 && <span className=\"date-n3j4\">{formattedDate}</span>}\n                        {postStyle === 1 && <h5 className=\"title-n3j4\">{title}</h5>}\n                        {postStyle !== 1 && <h4 className=\"title-n3j4\">{title}</h4>}\n                    </div>\n                )}\n            </GenericLink>\n            <div className=\"right-n3j4\">\n                <div className=\"lip-n3j4\" />\n                {(postStyle === 3 || postStyle === 4) && <div className=\"text-n3j4\">{title}</div>}\n                {postStyle === 1 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.category}: `}\n                        <span className=\"green-n3j4\">{category}</span>\n                    </div>\n                )}\n                {postStyle === 1 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.tag}: `}\n                        <span className=\"green-n3j4\">{tags?.join(\", \")}</span>\n                    </div>\n                )}\n                {postStyle === 2 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.customer}: `}\n                        <span className=\"green-n3j4\">{customer}</span>\n                    </div>\n                )}\n                {postStyle === 2 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.project}: `}\n                        <span className=\"green-n3j4\">{project}</span>\n                    </div>\n                )}\n                <div className=\"text-n3j4\">{description_short}</div>\n                <div className=\"cta-n3j4\">\n                    {postStyle !== 4 && (\n                        <LinkButton to={`/${i18n.language}/${type}/${slug}/`}>{labels.read}</LinkButton>\n                    )}\n                    {postStyle === 4 && (\n                        <LinkButton to={pdf?.url} download>\n                            {labels.downloadPdf}\n                        </LinkButton>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Post\n","import {Children, Fragment, useEffect, useRef, useState} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {useLabelsQuery} from \"~/queries/LabelsQuery\"\nimport {PostItem} from \"~/types/PostItem\"\nimport {classes} from \"~/utilities/classes\"\nimport Button from \"~/components/UI/Button/Button\"\nimport Select, {Option} from \"~/components/UI/Select/Select\"\nimport {PostProps} from \"./Post\"\nimport \"./Shelf.css\"\n\ninterface ShelfProps extends React.HTMLAttributes<HTMLDivElement> {\n    label?: string | undefined | null\n    withSorting?: boolean | undefined\n    withShowMore?: boolean | undefined\n    show?: number | undefined\n    loading?: boolean | undefined\n    sortyBy?: ShelfSortCategories | string | undefined | null\n    onSortSelect?: ((value: ShelfSortCategories | string) => void) | undefined | null\n}\n\nconst Shelf: React.FC<ShelfProps> = props => {\n    const {\n        className,\n        title,\n        loading,\n        label,\n        withSorting = false,\n        withShowMore = false,\n        sortyBy: sort,\n        onSortSelect,\n        show = 5,\n        children,\n        ...otherProps\n    } = props\n    const [showing, setShowing] = useState(show)\n    const [sortBy, setSortBy] = useState<ShelfSortCategories | string>(sort ? sort : ShelfSortCategories.DateC)\n    const [items, setItems] = useState<Array<React.ReactElement<PostProps>>>()\n    const [isLoading, setLoading] = useState<boolean>(false)\n    const timeoutRef = useRef<NodeJS.Timeout | undefined>()\n    const labels = useLabelsQuery()\n\n    const onSelectChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setSortBy(event.currentTarget.value)\n        if (onSortSelect) onSortSelect(event.currentTarget.value)\n    }\n\n    const updateItems = async () => {\n        let itemsToShow: Array<React.ReactElement<PostProps & PostItem>> = Children.toArray(children) as Array<\n            React.ReactElement<PostProps>\n        >\n\n        switch (sortBy) {\n            case ShelfSortCategories.CategoryC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.category) return 1\n                    if (!b.props.category) return -1\n                    return a.props.category.localeCompare(b.props.category)\n                })\n                break\n            case ShelfSortCategories.CategoryD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.category) return -1\n                    if (!b.props.category) return 1\n                    return b.props.category.localeCompare(a.props.category)\n                })\n                break\n            case ShelfSortCategories.CustomerC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.customer) return 1\n                    if (!b.props.customer) return -1\n                    return a.props.customer.localeCompare(b.props.customer)\n                })\n                break\n            case ShelfSortCategories.CustomerD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.customer) return -1\n                    if (!b.props.customer) return 1\n                    return b.props.customer.localeCompare(a.props.customer)\n                })\n                break\n            case ShelfSortCategories.DateC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.date) return 1\n                    if (!b.props.date) return -1\n                    if (a.props.date > b.props.date) return -1\n                    if (b.props.date > a.props.date) return 1\n                    return 0\n                })\n                break\n            case ShelfSortCategories.DateD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.date) return -1\n                    if (!b.props.date) return 1\n                    if (a.props.date > b.props.date) return 1\n                    if (b.props.date > a.props.date) return -1\n                    return 0\n                })\n                break\n            case ShelfSortCategories.TitleC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.title) return 1\n                    if (!b.props.title) return -1\n                    return a.props.title.localeCompare(b.props.title)\n                })\n                break\n            case ShelfSortCategories.TitleD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.title) return -1\n                    if (!b.props.title) return 1\n                    return b.props.title.localeCompare(a.props.title)\n                })\n                break\n            case ShelfSortCategories.TypeC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.type) return 1\n                    if (!b.props.type) return -1\n                    return a.props.type.localeCompare(b.props.type)\n                })\n                break\n            case ShelfSortCategories.TypeD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.type) return -1\n                    if (!b.props.type) return 1\n                    return b.props.type.localeCompare(a.props.type)\n                })\n                break\n        }\n\n        setItems(itemsToShow.slice(0, showing))\n    }\n\n    useEffect(() => {\n        setShowing(show)\n        if (loading || sortBy) {\n            setLoading(true)\n            updateItems().then(result => (timeoutRef.current = setTimeout(() => setLoading(false), 0)))\n        }\n        return () => {\n            if (timeoutRef.current) clearTimeout(timeoutRef.current)\n        }\n    }, [loading, sortBy])\n\n    useEffect(() => {\n        updateItems()\n    }, [showing])\n\n    const onShowMoreClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setShowing(state => state + show)\n    }\n\n    return (\n        <div className={classes(\"shelf-ym83\", className)} {...otherProps}>\n            {(withSorting || label) && (\n                <header className=\"header-ym83\">\n                    <span className=\"label-ym83\">{label}</span>\n                    {withSorting && (\n                        <span className=\"sort-ym83\">\n                            <label className=\"sort-label-ym83\" htmlFor=\"select-ym83\">\n                                {labels.sortBy}\n                            </label>\n\n                            {labels.ascending &&\n                                labels.descending &&\n                                labels.category &&\n                                labels.customer &&\n                                labels.date &&\n                                labels.title &&\n                                labels.type && (\n                                    <Select\n                                        id=\"select-ym83\"\n                                        className=\"select-ym83\"\n                                        value={sortBy}\n                                        onChange={onSelectChangeHandler}\n                                    >\n                                        <Option value={ShelfSortCategories.CategoryC}>\n                                            {`${labels.category} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.CategoryD}>\n                                            {`${labels.category} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.CustomerC}>\n                                            {`${labels.customer} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.CustomerD}>\n                                            {`${labels.customer} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.DateC}>\n                                            {`${labels.date} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.DateD}>\n                                            {`${labels.date} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TitleC}>\n                                            {`${labels.title} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TitleD}>\n                                            {`${labels.title} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TypeC}>\n                                            {`${labels.type} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TypeD}>\n                                            {`${labels.type} ${labels.descending}`}\n                                        </Option>\n                                    </Select>\n                                )}\n                        </span>\n                    )}\n                </header>\n            )}\n            {items && (\n                <Fragment>\n                    {items.length > 0 && <div className=\"items-ym83\">{items}</div>}\n                    {items.length < 1 && (\n                        <div className=\"no-result-ym83\">\n                            <p>{labels.noMatchingResult}</p>\n                        </div>\n                    )}\n                </Fragment>\n            )}\n\n            {withShowMore && showing < Children.count(children) && (\n                <footer className=\"shelf-footer-ym83\">\n                    <Button\n                        className=\"show-more-button-ym83\"\n                        onClick={onShowMoreClickHandler}\n                        type=\"button\"\n                        color=\"transparent\"\n                    >\n                        <ChevronDownIcon className=\"show-more-icon-ym83\" />\n                        <span className=\"show-more-text-ym83\">{labels.showMore}</span>\n                    </Button>\n                </footer>\n            )}\n        </div>\n    )\n}\n\nexport default Shelf\n\nexport enum ShelfSortCategories {\n    CategoryC = \"categoryC\",\n    CategoryD = \"categoryD\",\n    CustomerC = \"customerC\",\n    CustomerD = \"customerD\",\n    DateC = \"dateC\",\n    DateD = \"dateD\",\n    TitleC = \"titleC\",\n    TitleD = \"titleD\",\n    TypeC = \"typeC\",\n    TypeD = \"typeD\",\n}\n","import {navigate} from \"@reach/router\"\nimport {GatsbyLinkProps, Link} from \"gatsby\"\nimport {useContext} from \"react\"\nimport Ripple, {RippleColor} from \"~/components/UI/Ripple/Ripple\"\nimport TransitionContext from \"~/contexts/TransitionContext\"\nimport {classes} from \"~/utilities/classes\"\nimport NavBarContext from \"../../../contexts/NavBarContext\"\nimport {ButtonColor} from \"./Button\"\n\nimport \"./Button.css\"\n\nexport interface LinkButtonProps extends Omit<GatsbyLinkProps<any>, \"to\"> {\n    color?: ButtonColor\n    withoutTransition?: boolean | undefined\n    to?: string | null | undefined\n}\n\nconst LinkButton: React.FC<LinkButtonProps> = props => {\n    const {\n        color = \"green\",\n        to = \"\",\n        children,\n        download,\n        withoutTransition,\n        onClick,\n        className,\n        ref,\n        ...otherProps\n    } = props\n    const internal = /^\\/(?!\\/)/.test(to ? to : \"\")\n    const transitionContenxt = useContext(TransitionContext)\n    const navbarContext = useContext(NavBarContext)\n\n    let rippleColor: RippleColor = \"light-green\"\n    switch (color) {\n        case \"green\":\n            rippleColor = \"light-green\"\n            break\n        case \"white\":\n            rippleColor = \"green\"\n            break\n        case \"blue\":\n            rippleColor = \"blue\"\n            break\n        case \"gray\":\n            rippleColor = \"gray\"\n            break\n        case \"red\":\n            rippleColor = \"red\"\n            break\n    }\n\n    const goTo = (url: string) => {\n        if (!url) return\n        if (withoutTransition) {\n            navigate(url)\n            return\n        }\n        transitionContenxt.navigateTo(url)\n    }\n\n    const onClickHandler = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        event.preventDefault()\n        navbarContext.hide(1000)\n        if (onClick) onClick(event)\n        goTo(event.currentTarget.href)\n    }\n\n    const button =\n        internal && to ? (\n            <Link\n                className={classes(\"button-8p4x\", `${color}-8p4x`, className)}\n                to={to}\n                download={download}\n                target=\"_self\"\n                onClick={onClickHandler}\n                {...otherProps}\n            >\n                {children}\n            </Link>\n        ) : (\n            <a\n                href={to ?? undefined}\n                className={classes(\"button-8p4x\", `${color}-8p4x`, className)}\n                download={download}\n                target={download ? \"_self\" : \"_blank\"}\n                {...otherProps}\n                ref={ref}\n            >\n                {children}\n            </a>\n        )\n\n    return <Ripple color={rippleColor}>{button}</Ripple>\n}\n\nexport default LinkButton\n","import {HTMLAttributes} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Gap.css\"\n\ninterface GapProps extends React.HTMLAttributes<HTMLDivElement> {\n    centered?: boolean | undefined\n}\n\nconst Gap: React.FC<GapProps> = props => {\n    const {className, centered = false, ...otherProps} = props\n\n    return <div className={classes(\"gap-q2z3\", centered ? \"centered-q2z3\" : \"\", className)} {...otherProps} />\n}\n\nexport default Gap\n","import {classes} from \"~/utilities/classes\"\nimport \"./MultiStyleText.css\"\n\ninterface MultiStyleTextProps extends React.HTMLAttributes<HTMLSpanElement> {\n    flex?: boolean | undefined\n    children?: string | undefined | null\n    className1?: string\n    className2?: string\n    style1?: React.CSSProperties | undefined\n    style2?: React.CSSProperties | undefined\n}\n\nconst MultiStyleText = (props: MultiStyleTextProps) => {\n    const {className, className1, className2, flex = false, style1, style2, children: _children} = props\n    const children = _children?.trim()\n\n    if (!children) return null\n    const numberOfChars = children.length\n    const words = children.split(\" \")\n    const numberOfWords = words.length\n\n    let part1 = \"\"\n    let part2 = \"\"\n\n    if (numberOfWords === 1) {\n        part1 = children.substring(0, Math.round(children.length / 2))\n        part2 = children.substring(Math.round(children.length / 2), children.length)\n    } else {\n        let half = 0\n        for (let index = 1; numberOfChars / 2 - index > 0; index++) {\n            half = children.indexOf(\" \", numberOfChars / 2 - index)\n            if (half !== -1) {\n                break\n            }\n        }\n        part1 = children.substring(0, half)\n        part2 = children.substring(half, children.length)\n    }\n\n    return (\n        <span className={classes(\"multi-style-vu88\", flex ? \"flex-vu88\" : \"grid-vu88\", className)}>\n            <span className={classes(\"part-1-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className1)} style={style1}>\n                {part1}\n            </span>\n            <span className={classes(\"part-2-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className2)} style={style2}>\n                {part2.trimEnd()}\n            </span>\n        </span>\n    )\n}\n\nexport default MultiStyleText\n","import {documentToHtmlString} from \"@contentful/rich-text-html-renderer\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./RichText.css\"\n\nexport interface RichTextFieldProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n    children?: any | undefined | null\n}\n\nconst RichTextField: React.FC<RichTextFieldProps> = props => {\n    const {children, className, ...otherPros} = props\n    return (\n        <div\n            className={classes(\"rich-56aq\", className)}\n            dangerouslySetInnerHTML={\n                children\n                    ? {__html: documentToHtmlString(JSON.parse(children))}\n                    : undefined\n            }\n            {...otherPros}\n        />\n    )\n}\n\nexport default RichTextField\n","import {HTMLAttributes} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./ScrollButton.css\"\n\ninterface ScrollButtonProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ScrollButton = (props: ScrollButtonProps) => {\n    const {onClick, className, ...otherProps} = props\n    return (\n        <div className={classes(\"scroller-r94f\", className)} {...otherProps}>\n            <div className=\"mouse-r94f\">\n                <div className=\"scroll-r94f\"></div>\n            </div>\n            <ChevronDownIcon className=\"icon-r94f\" />\n        </div>\n    )\n}\n\nexport default ScrollButton\n","import {forwardRef, useState} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Select.css\"\n\ninterface SelectProps extends Omit<React.SelectHTMLAttributes<HTMLSelectElement>, \"placeholder\"> {\n    placeholder?: string | undefined\n    containerProps?: React.HTMLAttributes<HTMLDivElement> | undefined\n    invalid?: boolean\n}\n\nconst Select: React.FC<SelectProps> = forwardRef<HTMLSelectElement, SelectProps>((props, ref): JSX.Element => {\n    const {className, invalid, id, onChange, placeholder = \" - \", containerProps, children, ...otherProps} = props\n    const [selected, setSelected] = useState(\"undefined\")\n\n    const onSelectChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        if (onChange) onChange(event)\n        setSelected(event.currentTarget.value)\n    }\n\n    return (\n        <div\n            className={classes(\n                \"select-container-fn79\",\n                selected === \"undefined\" ? \"gray-x8np\" : \"\",\n                invalid ? \"invalid-fn79\" : \"\",\n                className,\n            )}\n            {...containerProps}\n        >\n            <select id={id} className=\"select-fn79\" onChange={onSelectChangeHandler} ref={ref} {...otherProps}>\n                <option value=\"undefined\" key=\"-1\">\n                    {placeholder}\n                </option>\n                {children}\n            </select>\n            <div className=\"icon-container-fn79\">\n                <ChevronDownIcon className=\"icon-fn79\" />\n            </div>\n        </div>\n    )\n})\n\nexport default Select\n\ninterface OptionProps extends React.OptionHTMLAttributes<HTMLOptionElement> {\n    children: string\n}\n\nexport const Option: React.FC<OptionProps> = props => {\n    const {children, value, ...otherProps} = props\n    return (\n        <option value={value ? value : children} {...otherProps}>\n            {children}\n        </option>\n    )\n}\n","import {useEffect, useState} from \"react\"\nimport Ripple from \"~/components/UI/Ripple/Ripple\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Switch.css\"\n\ninterface SwitchProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"select\" | \"onSelect\"> {\n    selected?: boolean | undefined\n    onSelect?: ((event: React.MouseEvent<HTMLButtonElement>) => void) | undefined\n}\n\nconst Switch: React.FC<SwitchProps> = props => {\n    const {className, selected = false, onSelect, children, ...otherProps} = props\n    const [_selected, _setSelected] = useState(selected)\n\n    useEffect(() => {\n        _setSelected(selected)\n    }, [selected])\n\n    const onButtonClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (onSelect) onSelect(event)\n    }\n\n    return (\n        <Ripple>\n            <button\n                className={classes(\"switch-n8h6\", _selected ? \"selected-n8h6\" : \"\", className)}\n                onClick={onButtonClickHandler}\n                {...otherProps}\n            >\n                {children}\n            </button>\n        </Ripple>\n    )\n}\n\nexport default Switch\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useAnalysisPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.AnalysisPostsQuery = useStaticQuery(graphql`\n        query AnalysisPosts {\n            allContentfulContenutoAreaRiservata(filter: {type: {eq: \"analysis\"}}) {\n                nodes {\n                    description_short\n                    id\n                    type\n                    title\n                    slug\n                    node_locale\n                    image {\n                        gatsbyImageData\n                        title\n                    }\n                    pdf {\n                        url\n                        title\n                    }\n                }\n            }\n        }\n    `)\n\n    const localizedData: Array<any> = []\n    for (const post of data.allContentfulContenutoAreaRiservata.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useAuthenticationLabelsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.AuthenticationLabelsQuery = useStaticQuery(graphql`\n        query AuthenticationLabels {\n            allContentfulAuthenticationLabels {\n                nodes {\n                    node_locale\n                    username\n                    password\n                    newPasswordSuccess\n                    name\n                    lastName\n                    email\n                    companyName\n                    companyType\n                    phoneNumber\n                    role\n                    attributesUpdateSuccess\n                    confirmationMessage {\n                        raw\n                    }\n                    passwordChangeMessage {\n                        raw\n                    }\n                    resetMessage {\n                        raw\n                    }\n                    signInMessage {\n                        raw\n                    }\n                    signUpMessage {\n                        raw\n                    }\n                    cognitoErrorMessage {\n                        raw\n                    }\n                    confirmationCode\n                    changePasswordButtonLabel\n                    clickHereLinkLabel\n                    completeRegistrationButtonLabel\n                    confirmButtonLabel\n                    forgottenPasswordQuestion\n                    resendConfirmationCodeLinkLabel\n                    resendConfirmationCodeQuestion\n                    signInButtonLabel\n                    signOutButtonLabel\n                    signUpButtonLabel\n                    validationInvalidConfirmationCode\n                    validationInvalidCredentials\n                    validationInvalidEmail\n                    validationInvalidLastName\n                    validationInvalidName\n                    validationInvalidPassword\n                    validationInvalidPasswordSpecs {\n                        raw\n                    }\n                    validationInvalidPhoneNumber\n                    alreadyHaveAccount\n                    missingAccount\n                    accountRequired {\n                        raw\n                    }\n                    wellcome\n                    cancelButtonLabel\n                    newPassword\n                    oldPassword\n                    resetPasswordButtonLabel\n                    updateFailed\n                    validationInvalidVerificationCode\n                    verificationCode\n                    validationEmailAlreadyUsed\n                    confirmAccountSuccess\n                }\n            }\n            allContentfulAuthenticationLabels2 {\n                nodes {\n                    forgottenPasswordMessage {\n                        raw\n                    }\n                    forgottenPasswordVerificationMessage {\n                        raw\n                    }\n                    node_locale\n                    update\n                    updateAttributesMessage {\n                        raw\n                    }\n                    attributesUpdateSuccess\n                    deleteAccountMessage {\n                        raw\n                    }\n                    deleteAccountButtonLabel\n                    accountDeleteSuccess\n                    updateAttributesButtonLabel\n                    deleteAccount\n                    backToTheHomepage\n                    unkownErrorMessage\n                    privateAreaAccessLinkMessage\n                    privateAreaAccessMessage\n                }\n            }\n        }\n    `)\n\n    let labelsData1 = data.allContentfulAuthenticationLabels.nodes[0]!\n    let labelsData2 = data.allContentfulAuthenticationLabels2.nodes[0]!\n\n    for (let translation of data.allContentfulAuthenticationLabels.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData1 = translation\n            break\n        }\n    }\n\n    for (let translation of data.allContentfulAuthenticationLabels2.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData2 = translation\n            break\n        }\n    }\n\n    const labelsData = {...labelsData1, ...labelsData2}\n\n    return labelsData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useOnDemandPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.OnDemandPostsQuery = useStaticQuery(graphql`\n        query OnDemandPosts {\n            allContentfulContenutoAreaRiservata(filter: {type: {eq: \"on-demand\"}}) {\n                nodes {\n                    description_short\n                    id\n                    type\n                    title\n                    slug\n                    node_locale\n                    image {\n                        gatsbyImageData\n                        title\n                    }\n                    pdf {\n                        url\n                        title\n                    }\n                }\n            }\n        }\n    `)\n\n    const localizedData: Array<any> = []\n    for (const post of data.allContentfulContenutoAreaRiservata.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const usePodcastPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.PodcastPostsQuery = useStaticQuery(graphql`\n        query PodcastPosts {\n            allContentfulContenutoAreaRiservata(filter: {type: {eq: \"podcast\"}}) {\n                nodes {\n                    description_short\n                    id\n                    type\n                    title\n                    slug\n                    node_locale\n                    image {\n                        gatsbyImageData\n                        title\n                    }\n                    pdf {\n                        url\n                        title\n                    }\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoAreaRiservata.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useVideoPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.VideoPostsQuery = useStaticQuery(graphql`\n        query VideoPosts {\n            allContentfulContenutoAreaRiservata(filter: {type: {eq: \"video\"}}) {\n                nodes {\n                    description_short\n                    id\n                    type\n                    title\n                    slug\n                    node_locale\n                    image {\n                        gatsbyImageData\n                        title\n                    }\n                    pdf {\n                        url\n                        title\n                    }\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoAreaRiservata.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {PageProps} from \"gatsby\"\nimport {IGatsbyImageData} from \"gatsby-plugin-image\"\nimport {GatsbySeo} from \"gatsby-plugin-next-seo\"\nimport {Fragment, useContext, useLayoutEffect, useRef, useState} from \"react\"\nimport Blank from \"~/components/Sections/Blank/Blank\"\nimport HeroSection from \"~/components/Sections/HeroSection/HeroSection\"\nimport Search from \"~/components/Sections/Search/Search\"\nimport Post from \"~/components/Sections/Shelf/Post\"\nimport Shelf, {ShelfSortCategories} from \"~/components/Sections/Shelf/Shelf\"\nimport Button from \"~/components/UI/Button/Button\"\nimport Gap from \"~/components/UI/Gap/Gap\"\nimport GenericLink from \"~/components/UI/GenericLink/GenericLink\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport MultiStyleText from \"~/components/UI/MultiStyleText/MultiStyleText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport ScrollButton from \"~/components/UI/ScrollButton/ScrollButton\"\nimport SectionContainer from \"~/components/UI/SectionContainer/SectionContainer\"\nimport Switch from \"~/components/UI/Switch/Switch\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport {useAnalysisPostsQuery} from \"~/queries/AnalysisPostsQuery\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {useLabelsQuery} from \"~/queries/LabelsQuery\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport {useOnDemandPostsQuery} from \"~/queries/OnDemandPostsQuery\"\nimport {usePodcastPostsQuery} from \"~/queries/PodcastPostsQuery\"\nimport {useVideoPostsQuery} from \"~/queries/VideoPostsQuery\"\nimport {PostItem, PostTypes} from \"~/types/PostItem\"\nimport {getQueryParam, setQueryParams} from \"~/utilities/queryParams\"\n\ninterface PrivateAreaPageProps extends PageProps<any, PrivateAreaContext> {}\n\nexport const PrivateAreaSectionParam = \"section\"\nexport const PrivateAreaSearchParam = \"search\"\nexport const PrivateAreaSortParam = \"sort\"\n\nexport enum PrivateAreaSectionIndex {\n    index = 0,\n    analysis = 1,\n    video = 2,\n    onDemand = 3,\n    podcast = 4,\n}\n\ninterface PrivateAreaSectionContent {\n    title: string | undefined | null\n    image: IGatsbyImageData | undefined | null\n    mobileImage: IGatsbyImageData | undefined | null\n    imageAlt: string | undefined | null\n    slug: string | undefined | null\n}\n\nconst PrivateAreaPage: React.FC<PrivateAreaPageProps> = props => {\n    const privateAreaPageData = props.pageContext.data\n    const links = useLinksQuery()\n    const i18n = useContext(I18nContext)\n\n    const getFilteredItems = () => {\n        let posts: Array<PostItem> = []\n        allPosts.forEach(post => {\n            if (selectedSectionName !== PostTypes.all && post.type !== selectedSectionName) return\n            if (inputTextValue !== \"\") {\n                let foundInTitle = false\n                let foundInDescription = false\n                let foundInCategory = false\n                let foundInCustomer = false\n                let foundInProject = false\n                let foundInTags = false\n\n                const lowCaseValueToFind = inputTextValue.toLowerCase()\n                if (post.title && post.title.toLowerCase().indexOf(lowCaseValueToFind) > -1) foundInTitle = true\n                if (post.description_short && post.description_short.toLowerCase().indexOf(lowCaseValueToFind) > -1)\n                    foundInDescription = true\n                if (post.category && post.category.toLowerCase().indexOf(lowCaseValueToFind) > -1)\n                    foundInCategory = true\n                if (post.customer && post.customer.toLowerCase().indexOf(lowCaseValueToFind) > -1)\n                    foundInCustomer = true\n                if (post.project && post.project.toLowerCase().indexOf(lowCaseValueToFind) > -1) foundInProject = true\n                if (post.tags) {\n                    post.tags.forEach(tag => {\n                        if (tag && tag.toLowerCase().indexOf(lowCaseValueToFind) > -1) foundInTags = true\n                    })\n                }\n\n                if (\n                    !foundInTitle &&\n                    !foundInCategory &&\n                    !foundInDescription &&\n                    !foundInTags &&\n                    !foundInCustomer &&\n                    !foundInProject\n                )\n                    return\n            }\n\n            posts.push(post)\n        })\n        return posts\n    }\n\n    const asyncFIlterItems = async () => {\n        return getFilteredItems()\n    }\n\n    const allPosts: Array<PostItem> = [\n        ...useAnalysisPostsQuery(),\n        ...usePodcastPostsQuery(),\n        ...useOnDemandPostsQuery(),\n        ...useVideoPostsQuery(),\n    ]\n\n    const labels = {...useLabelsQuery(), ...useAuthenticationLabelsQuery()}\n    const sectionParam = getQueryParam(PrivateAreaSectionParam)\n    const searchParam = getQueryParam(PrivateAreaSearchParam)\n    const sortParam = getQueryParam(PrivateAreaSortParam)\n\n    const [selectedSectionIndex, setSelectedSectionIndex] = useState<PrivateAreaSectionIndex | number>(\n        sectionNameToIndex(sectionParam),\n    )\n\n    const [selectedSectionName, setSelectedSectionName] = useState<PostTypes | string>(sectionParam ? sectionParam : \"\")\n\n    const [selectedSort, setSelectedSort] = useState<ShelfSortCategories | string>(sortParam ? sortParam : \"\")\n    const [inputTextValue, setInputTextValue] = useState(searchParam ? searchParam : \"\")\n    const [shelfItems, setShelfItems] = useState<Array<PostItem>>(getFilteredItems())\n    const [isLoading, setLoading] = useState<boolean>(false)\n    const authContext = useContext(AuthContext)\n    const searchRef = useRef<HTMLElement | null>(null)\n\n    useLayoutEffect(() => {\n        if (!sectionParam) return\n        setSelectedSectionName(sectionParam)\n        setSelectedSectionIndex(sectionNameToIndex(sectionParam))\n    }, [sectionParam])\n\n    useLayoutEffect(() => {\n        updateShelf()\n    }, [selectedSectionName, selectedSort])\n\n    const onSwitchClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const selectedType = Number(event.currentTarget.value)\n        setSelectedSectionIndex(selectedType)\n        setSelectedSectionName(privateAreaSectionsIndexToName(selectedType))\n    }\n\n    const onInputChangeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInputTextValue(event.currentTarget.value)\n    }\n\n    const onSortChange = (value: ShelfSortCategories | string) => {\n        setSelectedSort(value)\n    }\n\n    const updateShelf = () => {\n        updateUrl()\n        setLoading(true)\n        asyncFIlterItems()\n            .then(posts => {\n                setShelfItems(posts)\n            })\n            .then(() => {\n                setLoading(false)\n            })\n    }\n\n    const onFormSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        updateShelf()\n    }\n\n    const updateUrl = () => {\n        setQueryParams(\n            {name: PrivateAreaSectionParam, value: selectedSectionName},\n            {name: PrivateAreaSearchParam, value: inputTextValue},\n            {name: PrivateAreaSortParam, value: selectedSort},\n        )\n    }\n\n    return (\n        <Fragment>\n            <GatsbySeo\n                title={privateAreaPageData.titolo ? privateAreaPageData.titolo : \"\"}\n                canonical={`${process.env.SITE_URL}${links.privateArea.url}`}\n                language={i18n.language}\n                openGraph={{\n                    url: `${process.env.SITE_URL}${links.privateArea.url}`,\n                    title: `${privateAreaPageData.titolo}`,\n                    locale: i18n.language,\n                    images: [\n                        {\n                            url: `${privateAreaPageData.header?.url}`,\n                            width: Number(privateAreaPageData.header?.width),\n                            height: Number(privateAreaPageData.header?.height),\n                            alt: `${privateAreaPageData.header?.title}`,\n                        },\n                    ],\n                }}\n            />\n            <HeroSection\n                image={privateAreaPageData.header?.gatsbyImageData}\n                imageAlt={privateAreaPageData.header?.title}\n                mobileImage={privateAreaPageData.headerMobile?.gatsbyImageData}\n            >\n                <MultiStyleText flex className1=\"hero-title-part-1-d2bh\" className2=\"hero-title-part-2-d2bh\">\n                    {privateAreaPageData.titolo}\n                </MultiStyleText>\n            </HeroSection>\n            {authContext.status === \"SIGNED_IN\" && (\n                <Fragment>\n                    <SectionContainer tabbed marginPost customTab={<ScrollButton />} ref={searchRef}>\n                        <Search title={privateAreaPageData.titolo}>\n                            <Gap centered style={{marginTop: \"var(--gutter-4)\"}}>\n                                <Switch\n                                    key={labels.all}\n                                    selected={selectedSectionIndex === PrivateAreaSectionIndex.index}\n                                    onSelect={onSwitchClickHandler}\n                                    value={PrivateAreaSectionIndex.index}\n                                >\n                                    {labels.all}\n                                </Switch>\n                                {privateAreaPageData.filtri?.map((section, index) => {\n                                    return (\n                                        <Switch\n                                            key={section?.slug}\n                                            selected={selectedSectionIndex === index + 1}\n                                            onSelect={onSwitchClickHandler}\n                                            value={index + 1}\n                                        >\n                                            {section?.titolo}\n                                        </Switch>\n                                    )\n                                })}\n                            </Gap>\n                            <form onSubmit={onFormSubmitHandler}>\n                                <Gap centered>\n                                    <InputText\n                                        {...(labels.searchInputPlaceholder\n                                            ? {placeholder: labels.searchInputPlaceholder}\n                                            : {})}\n                                        onChange={onInputChangeValue}\n                                        value={inputTextValue}\n                                        style={{\n                                            width: \"min(30vw,500px)\",\n                                            minWidth: \"240px\",\n                                            fontStyle: \"italic\",\n                                        }}\n                                    />\n                                    <Button color=\"green\" type=\"submit\">\n                                        {labels.search}\n                                    </Button>\n                                </Gap>\n                            </form>\n                        </Search>\n                    </SectionContainer>\n                    <SectionContainer>\n                        <Shelf\n                            withShowMore\n                            withSorting\n                            loading={isLoading}\n                            sortyBy={sortParam}\n                            onSortSelect={onSortChange}\n                        >\n                            {shelfItems.map((item, index) => {\n                                return (\n                                    <Post\n                                        key={index}\n                                        date={item.date}\n                                        title={item.title}\n                                        image={item.image}\n                                        category={item.category}\n                                        tags={item.tags}\n                                        description_short={item.description_short}\n                                        slug={item.slug}\n                                        type={item.type}\n                                        customer={item.customer}\n                                        project={item.project}\n                                        pdf={item.pdf}\n                                    />\n                                )\n                            })}\n                        </Shelf>\n                    </SectionContainer>\n                </Fragment>\n            )}\n            {authContext.status !== \"SIGNED_IN\" && (\n                <Fragment>\n                    <SectionContainer tabbed marginPost customTab={<ScrollButton />}>\n                        <Blank>\n                            <RichTextField>{labels.accountRequired?.raw}</RichTextField>\n                        </Blank>\n                        <div className=\"switch-container-8hxd\">\n                            <span className=\"switch-label-8hxd\">\n                                {`${labels.missingAccount} `}\n                                <GenericLink\n                                    onClick={() => authContext.setStatus(\"SIGN_UP\")}\n                                    to={links.authentication.url}\n                                >\n                                    {labels.clickHereLinkLabel}\n                                </GenericLink>\n                            </span>\n                        </div>\n                    </SectionContainer>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\nexport default PrivateAreaPage\n\nconst getSections = (privateAreaPageContext: PrivateAreaContext): Array<PrivateAreaSectionContent> => {\n    let sections: Array<PrivateAreaSectionContent> = []\n    const index: PrivateAreaSectionContent = {\n        title: privateAreaPageContext.data.titolo,\n        image: privateAreaPageContext.data.header?.gatsbyImageData,\n        mobileImage: privateAreaPageContext.data.headerMobile?.gatsbyImageData,\n        imageAlt: privateAreaPageContext.data.headerMobile?.title,\n        slug: privateAreaPageContext.data.slug,\n    }\n    sections.push(index)\n    return sections\n}\n\nexport const sectionNameToIndex = (value: string | undefined | null): number => {\n    switch (value) {\n        case PostTypes.analysis:\n            return PrivateAreaSectionIndex.analysis\n        case PostTypes.onDemand:\n            return PrivateAreaSectionIndex.onDemand\n        case PostTypes.video:\n            return PrivateAreaSectionIndex.video\n        case PostTypes.podcast:\n            return PrivateAreaSectionIndex.podcast\n        default:\n            return PrivateAreaSectionIndex.index\n    }\n}\nexport const privateAreaSectionsIndexToName = (value: number | undefined | null): string => {\n    switch (value) {\n        case PrivateAreaSectionIndex.analysis:\n            return PostTypes.analysis\n        case PrivateAreaSectionIndex.onDemand:\n            return PostTypes.onDemand\n        case PrivateAreaSectionIndex.video:\n            return PostTypes.video\n        case PrivateAreaSectionIndex.podcast:\n            return PostTypes.podcast\n        default:\n            return PostTypes.all\n    }\n}\n\ninterface PrivateAreaContext {\n    data: {\n        node_locale: string\n        id: string\n        slug?: string | null\n        titolo?: string | null\n        header?: {\n            title?: string | null\n            height?: number | null\n            width?: number | null\n            url?: string | null\n            gatsbyImageData?: any | null\n        } | null\n        headerMobile?: {\n            title?: string | null\n            height?: number | null\n            width?: number | null\n            url?: string | null\n            gatsbyImageData?: any | null\n        } | null\n        filtri?: Array<{\n            titolo?: string | null\n            slug?: string | null\n            descrizione?: {raw?: string | null} | null\n        } | null> | null\n    }\n}\n","import {useLocation} from \"@reach/router\"\n\nexport const getQueryParam = (paramName: string) => {\n    const search = new URLSearchParams(useLocation().search)\n    return search.get(paramName)\n}\n\nexport const setQueryParams = (...urlParams: Array<URLParam | undefined>) => {\n    const url = generateQueryParams(...urlParams)\n    if (url.length > 0) {\n        history.replaceState(null, \"\", `?${url}`)\n    } else {\n        history.replaceState(null, \"\", location.pathname)\n    }\n}\n\nexport const generateQueryParams = (...urlParams: Array<URLParam | undefined>): string => {\n    const queryStrings: Array<string> = []\n    urlParams.forEach(urlParam => {\n        if (!urlParam || !urlParam.name || !urlParam.value) return\n        queryStrings.push(`${urlParam.name}=${urlParam.value}`)\n    })\n    const url = queryStrings.join(\"&\")\n    return url\n}\n\nexport interface URLParam {\n    name: string | undefined\n    value: string | undefined\n}\n"],"names":["props","className","children","otherProps","_jsx","classes","closed","input_closed","style","setClosed","useState","drawerRef","useRef","useEffect","current","height","scrollHeight","offsetHeight","ontransitionend","removeProperty","overflow","transitionDuration","transitionTimingFunction","ref","title","startClosed","_jsxs","onClick","e","state","ChevronUpIcon","Drawer","date","image","category","tags","description_short","pdf","slug","customer","project","type","labels","useLabelsQuery","i18n","useContext","I18nContext","formattedDate","Intl","DateTimeFormat","language","day","month","year","format","Date","postStyle","PostTypes","GenericLink","to","url","gatsbyImageData","GatsbyImage","alt","tag","join","LinkButton","read","download","downloadPdf","ShelfSortCategories","loading","label","withSorting","withShowMore","sortyBy","sort","onSortSelect","show","showing","setShowing","sortBy","setSortBy","DateC","items","setItems","isLoading","setLoading","timeoutRef","updateItems","async","itemsToShow","Children","CategoryC","a","b","localeCompare","CategoryD","CustomerC","CustomerD","DateD","TitleC","TitleD","TypeC","TypeD","slice","then","result","setTimeout","clearTimeout","htmlFor","ascending","descending","Select","id","value","onChange","event","currentTarget","Option","Fragment","length","noMatchingResult","Button","color","ChevronDownIcon","showMore","withoutTransition","internal","test","transitionContenxt","TransitionContext","navbarContext","NavBarContext","rippleColor","button","Link","target","preventDefault","hide","href","navigate","navigateTo","undefined","Ripple","centered","className1","className2","flex","style1","style2","_children","trim","numberOfChars","numberOfWords","split","part1","part2","substring","Math","round","half","index","indexOf","trimEnd","otherPros","dangerouslySetInnerHTML","__html","documentToHtmlString","JSON","parse","forwardRef","invalid","placeholder","containerProps","selected","setSelected","onSelect","_selected","_setSelected","useAnalysisPostsQuery","data","useStaticQuery","localizedData","post","allContentfulContenutoAreaRiservata","nodes","node_locale","push","useAuthenticationLabelsQuery","labelsData1","allContentfulAuthenticationLabels","labelsData2","allContentfulAuthenticationLabels2","translation","useOnDemandPostsQuery","usePodcastPostsQuery","useVideoPostsQuery","PrivateAreaSectionParam","PrivateAreaSearchParam","PrivateAreaSortParam","PrivateAreaSectionIndex","privateAreaPageData","pageContext","links","useLinksQuery","getFilteredItems","posts","allPosts","forEach","selectedSectionName","inputTextValue","foundInTitle","foundInDescription","foundInCategory","foundInCustomer","foundInProject","foundInTags","lowCaseValueToFind","toLowerCase","sectionParam","getQueryParam","searchParam","sortParam","selectedSectionIndex","setSelectedSectionIndex","sectionNameToIndex","setSelectedSectionName","selectedSort","setSelectedSort","setInputTextValue","shelfItems","setShelfItems","authContext","AuthContext","searchRef","useLayoutEffect","updateShelf","onSwitchClickHandler","selectedType","Number","privateAreaSectionsIndexToName","updateUrl","asyncFIlterItems","setQueryParams","name","GatsbySeo","titolo","canonical","privateArea","openGraph","locale","images","header","_privateAreaPageData$","width","_privateAreaPageData$2","_privateAreaPageData$3","_privateAreaPageData$4","HeroSection","_privateAreaPageData$5","imageAlt","_privateAreaPageData$6","mobileImage","headerMobile","_privateAreaPageData$7","MultiStyleText","status","SectionContainer","tabbed","marginPost","customTab","ScrollButton","Search","Gap","marginTop","Switch","all","filtri","_privateAreaPageData$8","map","section","onSubmit","InputText","searchInputPlaceholder","minWidth","fontStyle","search","Shelf","item","Post","Blank","RichTextField","accountRequired","_labels$accountRequir","raw","missingAccount","setStatus","authentication","clickHereLinkLabel","analysis","onDemand","video","podcast","paramName","URLSearchParams","useLocation","get","generateQueryParams","history","replaceState","location","pathname","queryStrings","urlParams","urlParam"],"sourceRoot":""}