{"version":3,"file":"component---src-templates-authentication-page-template-tsx-b48fd4c310f7b96c53d3.js","mappings":"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","sources":["webpack://adkaora.com/./src/components/UI/MultiStyleText/MultiStyleText.tsx","webpack://adkaora.com/./src/components/UI/RichText/RichText.tsx","webpack://adkaora.com/./src/components/UI/ScrollButton/ScrollButton.tsx","webpack://adkaora.com/./src/queries/AuthenticationLabelsQuery.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ChangePasswordForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ConfirmAccountForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ForgottenPasswordForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/ForgottenPasswordVerification.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/SignInForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/SignUpForm.tsx","webpack://adkaora.com/./src/components/Sections/UserPanel/UserPanel.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/DeleteAccountForm.tsx","webpack://adkaora.com/./src/components/Forms/Authentication/UpdateAttributesForm.tsx","webpack://adkaora.com/./src/templates/AuthenticationPageTemplate.tsx"],"sourcesContent":["import {classes} from \"~/utilities/classes\"\nimport \"./MultiStyleText.css\"\n\ninterface MultiStyleTextProps extends React.HTMLAttributes<HTMLSpanElement> {\n    flex?: boolean | undefined\n    children?: string | undefined | null\n    className1?: string\n    className2?: string\n    style1?: React.CSSProperties | undefined\n    style2?: React.CSSProperties | undefined\n}\n\nconst MultiStyleText = (props: MultiStyleTextProps) => {\n    const {className, className1, className2, flex = false, style1, style2, children: _children} = props\n    const children = _children?.trim()\n\n    if (!children) return null\n    const numberOfChars = children.length\n    const words = children.split(\" \")\n    const numberOfWords = words.length\n\n    let part1 = \"\"\n    let part2 = \"\"\n\n    if (numberOfWords === 1) {\n        part1 = children.substring(0, Math.round(children.length / 2))\n        part2 = children.substring(Math.round(children.length / 2), children.length)\n    } else {\n        let half = 0\n        for (let index = 1; numberOfChars / 2 - index > 0; index++) {\n            half = children.indexOf(\" \", numberOfChars / 2 - index)\n            if (half !== -1) {\n                break\n            }\n        }\n        part1 = children.substring(0, half)\n        part2 = children.substring(half, children.length)\n    }\n\n    return (\n        <span className={classes(\"multi-style-vu88\", flex ? \"flex-vu88\" : \"grid-vu88\", className)}>\n            <span className={classes(\"part-1-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className1)} style={style1}>\n                {part1}\n            </span>\n            <span className={classes(\"part-2-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className2)} style={style2}>\n                {part2.trimEnd()}\n            </span>\n        </span>\n    )\n}\n\nexport default MultiStyleText\n","import {documentToHtmlString} from \"@contentful/rich-text-html-renderer\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./RichText.css\"\n\nexport interface RichTextFieldProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n    children?: any | undefined | null\n}\n\nconst RichTextField: React.FC<RichTextFieldProps> = props => {\n    const {children, className, ...otherPros} = props\n    return (\n        <div\n            className={classes(\"rich-56aq\", className)}\n            dangerouslySetInnerHTML={\n                children\n                    ? {__html: documentToHtmlString(JSON.parse(children))}\n                    : undefined\n            }\n            {...otherPros}\n        />\n    )\n}\n\nexport default RichTextField\n","import {HTMLAttributes} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./ScrollButton.css\"\n\ninterface ScrollButtonProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ScrollButton = (props: ScrollButtonProps) => {\n    const {onClick, className, ...otherProps} = props\n    return (\n        <div className={classes(\"scroller-r94f\", className)} {...otherProps}>\n            <div className=\"mouse-r94f\">\n                <div className=\"scroll-r94f\"></div>\n            </div>\n            <ChevronDownIcon className=\"icon-r94f\" />\n        </div>\n    )\n}\n\nexport default ScrollButton\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useAuthenticationLabelsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.AuthenticationLabelsQuery = useStaticQuery(graphql`\n        query AuthenticationLabels {\n            allContentfulAuthenticationLabels {\n                nodes {\n                    node_locale\n                    username\n                    password\n                    newPasswordSuccess\n                    name\n                    lastName\n                    email\n                    companyName\n                    companyType\n                    phoneNumber\n                    role\n                    attributesUpdateSuccess\n                    confirmationMessage {\n                        raw\n                    }\n                    passwordChangeMessage {\n                        raw\n                    }\n                    resetMessage {\n                        raw\n                    }\n                    signInMessage {\n                        raw\n                    }\n                    signUpMessage {\n                        raw\n                    }\n                    cognitoErrorMessage {\n                        raw\n                    }\n                    confirmationCode\n                    changePasswordButtonLabel\n                    clickHereLinkLabel\n                    completeRegistrationButtonLabel\n                    confirmButtonLabel\n                    forgottenPasswordQuestion\n                    resendConfirmationCodeLinkLabel\n                    resendConfirmationCodeQuestion\n                    signInButtonLabel\n                    signOutButtonLabel\n                    signUpButtonLabel\n                    validationInvalidConfirmationCode\n                    validationInvalidCredentials\n                    validationInvalidEmail\n                    validationInvalidLastName\n                    validationInvalidName\n                    validationInvalidPassword\n                    validationInvalidPasswordSpecs {\n                        raw\n                    }\n                    validationInvalidPhoneNumber\n                    alreadyHaveAccount\n                    missingAccount\n                    accountRequired {\n                        raw\n                    }\n                    wellcome\n                    cancelButtonLabel\n                    newPassword\n                    oldPassword\n                    resetPasswordButtonLabel\n                    updateFailed\n                    validationInvalidVerificationCode\n                    verificationCode\n                    validationEmailAlreadyUsed\n                    confirmAccountSuccess\n                }\n            }\n            allContentfulAuthenticationLabels2 {\n                nodes {\n                    forgottenPasswordMessage {\n                        raw\n                    }\n                    forgottenPasswordVerificationMessage {\n                        raw\n                    }\n                    node_locale\n                    update\n                    updateAttributesMessage {\n                        raw\n                    }\n                    attributesUpdateSuccess\n                    deleteAccountMessage {\n                        raw\n                    }\n                    deleteAccountButtonLabel\n                    accountDeleteSuccess\n                    updateAttributesButtonLabel\n                    deleteAccount\n                    backToTheHomepage\n                    unkownErrorMessage\n                    privateAreaAccessLinkMessage\n                    privateAreaAccessMessage\n                }\n            }\n        }\n    `)\n\n    let labelsData1 = data.allContentfulAuthenticationLabels.nodes[0]!\n    let labelsData2 = data.allContentfulAuthenticationLabels2.nodes[0]!\n\n    for (let translation of data.allContentfulAuthenticationLabels.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData1 = translation\n            break\n        }\n    }\n\n    for (let translation of data.allContentfulAuthenticationLabels2.nodes) {\n        if (translation.node_locale === i18n.language) {\n            labelsData2 = translation\n            break\n        }\n    }\n\n    const labelsData = {...labelsData1, ...labelsData2}\n\n    return labelsData\n}\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {passwordRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ChangePasswordFields = {\n    password: string\n    newPassword: string\n}\n\nconst ChangePasswordForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const changePasswordForm = useForm<ChangePasswordFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onChangePasswordSubmitHandler: SubmitHandler<ChangePasswordFields> = data => {\n        setDisabled(true)\n        authContext.changePassword(data.password, data.newPassword).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={changePasswordForm.handleSubmit(onChangePasswordSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.passwordChangeMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.oldPassword}\n                    invalid={changePasswordForm.formState.errors.password !== undefined}\n                    {...changePasswordForm.register(\"password\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {changePasswordForm.formState.errors.password !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.newPassword}\n                    invalid={changePasswordForm.formState.errors.newPassword !== undefined}\n                    {...changePasswordForm.register(\"newPassword\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {changePasswordForm.formState.errors.newPassword !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.changePasswordButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedIn}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ChangePasswordForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {cognitoCodeRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ConfirmAccountFields = {\n    confirmationCode: string\n}\n\nconst ConfirmAccountForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const confirmationForm = useForm<ConfirmAccountFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onConfirmAccountSubmitHandler: SubmitHandler<ConfirmAccountFields> = data => {\n        setDisabled(true)\n        authContext.confirmAccount(data.confirmationCode).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={confirmationForm.handleSubmit(onConfirmAccountSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.confirmationMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.confirmationCode}\n                    invalid={confirmationForm.formState.errors.confirmationCode !== undefined}\n                    {...confirmationForm.register(\"confirmationCode\", {\n                        required: true,\n                        pattern: cognitoCodeRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {confirmationForm.formState.errors.confirmationCode && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidConfirmationCode}</div>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.confirmButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ConfirmAccountForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {emailRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ForgotPasswordFields = {\n    email: string\n}\n\nconst ForgottenPasswordForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, onButtonClickCallback, setEdited, ...otherProps} = props\n    const forgottenPasswordForm = useForm<ForgotPasswordFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onForgottenPasswordSubmitHandler: SubmitHandler<ForgotPasswordFields> = data => {\n        setDisabled(true)\n        authContext.forgottenPassword(data.email).then(() => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedOut = () => {\n        authContext.setStatus(\"SIGNED_OUT\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"on\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={forgottenPasswordForm.handleSubmit(onForgottenPasswordSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.forgottenPasswordMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"email\"\n                    placeholder={labels.email}\n                    invalid={\n                        forgottenPasswordForm.formState.errors.email !== undefined ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_INVALID\"\n                    }\n                    {...forgottenPasswordForm.register(\"email\", {\n                        required: true,\n                        pattern: emailRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {(forgottenPasswordForm.formState.errors.email !== undefined ||\n                    authContext.status === \"FORGOTTEN_PASSWORD_INVALID\") && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                OK\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedOut}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ForgottenPasswordForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {cognitoCodeRegex, passwordRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype ForgottenPasswordVerificationFields = {\n    verificationCode: string\n    newPassword: string\n}\n\nconst ForgottenPasswordVerificationForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const forgottenPasswordVerificationForm = useForm<ForgottenPasswordVerificationFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onForgottenPasswordVerificationSubmitHandler: SubmitHandler<ForgottenPasswordVerificationFields> = data => {\n        setDisabled(true)\n        authContext.forgottenPasswordConfirmNewPassword(data.verificationCode, data.newPassword).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedOut = () => {\n        authContext.setStatus(\"SIGNED_OUT\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={forgottenPasswordVerificationForm.handleSubmit(onForgottenPasswordVerificationSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">\n                {labels.forgottenPasswordVerificationMessage?.raw}\n            </RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"number\"\n                    placeholder={labels.verificationCode}\n                    invalid={\n                        forgottenPasswordVerificationForm.formState.errors.verificationCode !== undefined ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION_INVALID\"\n                    }\n                    {...forgottenPasswordVerificationForm.register(\"verificationCode\", {\n                        required: true,\n                        pattern: cognitoCodeRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {(forgottenPasswordVerificationForm.formState.errors.verificationCode !== undefined ||\n                    authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION_INVALID\") && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidVerificationCode}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.newPassword}\n                    invalid={forgottenPasswordVerificationForm.formState.errors.newPassword !== undefined}\n                    {...forgottenPasswordVerificationForm.register(\"newPassword\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {forgottenPasswordVerificationForm.formState.errors.newPassword !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.changePasswordButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedOut}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default ForgottenPasswordVerificationForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport CheckIcon from \"~/icons/CheckIcon\"\nimport ErrorIcon from \"~/icons/ErrorIcon\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {emailRegex, passwordRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype SignInFields = {\n    email: string\n    password: string\n}\n\nconst SignInForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const signInForm = useForm<SignInFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onSignInSubmitHandler: SubmitHandler<SignInFields> = data => {\n        setDisabled(true)\n        authContext.signIn(data.email, data.password).then(result => {\n            setDisabled(false)\n            setEdited(false)\n            // if (result === \"SIGNED_IN\") {\n            //     window.scrollTo({top: 0, behavior: \"smooth\"})\n            // }\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToForgottenPassword = () => {\n        authContext.setStatus(\"FORGOTTEN_PASSWORD\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"on\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={signInForm.handleSubmit(onSignInSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.signInMessage?.raw}</RichTextField>\n            {authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_SUCCESS\" && (\n                <div className=\"center-pt86\">\n                    <CheckIcon className=\"check-icon-pt86\" />\n                    <div className=\"success-label-pt86\">{labels.newPasswordSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_OUT_ACCOUNT_CONFIRMED\" && (\n                <div className=\"center-pt86\">\n                    <CheckIcon className=\"check-icon-pt86\" />\n                    <div className=\"success-label-pt86\">{labels.confirmAccountSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_FAIL\" && (\n                <div className=\"center-pt86\">\n                    <ErrorIcon className=\"error-icon-pt86\" />\n                    <div className=\"success-label-pt86\">{labels.updateFailed}</div>\n                </div>\n            )}\n            <div className=\"cell-pt86\">\n                <InputText\n                    type=\"email\"\n                    placeholder={labels.email}\n                    invalid={\n                        signInForm.formState.errors.email !== undefined ||\n                        (authContext.status === \"SIGNED_OUT_INVALID\" && edited === false)\n                    }\n                    {...signInForm.register(\"email\", {\n                        required: true,\n                        pattern: emailRegex,\n                        disabled: disabled,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signInForm.formState.errors.email && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    type=\"password\"\n                    placeholder={labels.password}\n                    invalid={\n                        signInForm.formState.errors.password !== undefined ||\n                        (authContext.status === \"SIGNED_OUT_INVALID\" && edited === false)\n                    }\n                    {...signInForm.register(\"password\", {\n                        required: true,\n                        pattern: passwordRegex,\n                        disabled: disabled,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signInForm.formState.errors.password !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n                {authContext.status === \"SIGNED_OUT_INVALID\" && edited === false && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidCredentials}</div>\n                )}\n                <div className=\"forgotten-password-pt86\">\n                    <Button color=\"link\" onClick={switchToForgottenPassword}>\n                        {labels.forgottenPasswordQuestion}\n                    </Button>\n                </div>\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.signInButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default SignInForm\n","import {useContext, useRef} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext, {AllAttributes} from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {emailRegex, nameRegex, passwordRegex, phoneRegex} from \"~/utilities/RegexStrings\"\nimport TransitionContext from \"../../../contexts/TransitionContext\"\nimport {useLinksQuery} from \"../../../queries/LinksQuery\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype SignUpFields = {\n    email: string\n    password: string\n    given_name: string\n    family_name: string\n    phone_number: string\n    company_name: string | undefined\n    company_type: string | undefined\n    role: string | undefined\n}\n\nconst SignUpForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const signUpForm = useForm<SignUpFields>()\n    const emailRef = useRef<HTMLDivElement>(null)\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n    const links = useLinksQuery()\n    const transitionContext = useContext(TransitionContext)\n\n    const onSignUpSubmitHandler: SubmitHandler<SignUpFields> = data => {\n        setDisabled(true)\n        const adkaorauser: AllAttributes = {\n            given_name: data.given_name,\n            family_name: data.family_name,\n            phone_number: data.phone_number,\n            company_name: data.company_name,\n            company_type: data.company_type,\n            role: data.role,\n        }\n        authContext.signUp(data.email, data.password, adkaorauser).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={signUpForm.handleSubmit(onSignUpSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.signUpMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\" ref={emailRef}>\n                <InputText\n                    disabled={disabled}\n                    type=\"email\"\n                    placeholder={labels.email}\n                    invalid={\n                        signUpForm.formState.errors.email !== undefined ||\n                        authContext.status === \"SIGN_UP_ALREADY_REGISTERED\"\n                    }\n                    {...signUpForm.register(\"email\", {\n                        required: true,\n                        pattern: emailRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {authContext.status === \"SIGN_UP_ALREADY_REGISTERED\" && edited === false && (\n                    <div className=\"messages-box-pt86\">{labels.validationEmailAlreadyUsed}</div>\n                )}\n                {signUpForm.formState.errors.email !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"password\"\n                    placeholder={labels.password}\n                    invalid={signUpForm.formState.errors.password !== undefined}\n                    {...signUpForm.register(\"password\", {\n                        required: true,\n                        pattern: passwordRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.password !== undefined && (\n                    <RichTextField className=\"messages-box-pt86\">\n                        {labels.validationInvalidPasswordSpecs?.raw}\n                    </RichTextField>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.name}\n                    invalid={signUpForm.formState.errors.given_name !== undefined}\n                    {...signUpForm.register(\"given_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.given_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.lastName}\n                    invalid={signUpForm.formState.errors.family_name !== undefined}\n                    {...signUpForm.register(\"family_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.family_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidLastName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"tel\"\n                    placeholder={labels.phoneNumber}\n                    invalid={signUpForm.formState.errors.phone_number !== undefined}\n                    {...signUpForm.register(\"phone_number\", {\n                        required: true,\n                        pattern: phoneRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {signUpForm.formState.errors.phone_number !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidPhoneNumber}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyName}\n                    invalid={signUpForm.formState.errors.company_name !== undefined}\n                    {...signUpForm.register(\"company_name\", {\n                        required: false,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyType}\n                    invalid={signUpForm.formState.errors.company_type !== undefined}\n                    {...signUpForm.register(\"company_type\", {\n                        required: false,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.role}\n                    invalid={signUpForm.formState.errors.role !== undefined}\n                    {...signUpForm.register(\"role\", {\n                        required: false,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.completeRegistrationButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default SignUpForm\n","import {useContext} from \"react\"\nimport Button from \"~/components/UI/Button/Button\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport CheckIcon from \"~/icons/CheckIcon\"\nimport ErrorIcon from \"~/icons/ErrorIcon\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {useLinksQuery} from \"../../../queries/LinksQuery\"\nimport GenericLink from \"../../UI/GenericLink/GenericLink\"\n\nimport \"./UserPanel.css\"\n\ninterface UserPanelProps extends React.HTMLAttributes<HTMLDivElement> {\n    disabled: boolean\n    setDisabled: (value: boolean) => void\n    edited: boolean\n    setEdited: (value: boolean) => void\n}\n\nconst UserPanel = (props: UserPanelProps) => {\n    const {className, children, disabled, setDisabled, edited, setEdited, ...otherProps} = props\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n    const links = useLinksQuery()\n\n    const onSignOutClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        setDisabled(true)\n        authContext.signOut().then(() => {\n            setDisabled(false)\n        })\n    }\n\n    const onChangePasswordClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        authContext.setStatus(\"CHANGE_PASSWORD\")\n    }\n\n    const onUpdateAttributesClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        authContext.setStatus(\"UPDATE_ATTRIBUTES\")\n    }\n    const onDeleteAccountClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n        authContext.setStatus(\"DELETE_ACCOUNT\")\n    }\n\n    return (\n        <div className={classes(\"user-panel-container-g9dr\", className)} {...otherProps}>\n            {authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_SUCCESS\" && (\n                <div className=\"center-g9dr\">\n                    <CheckIcon className=\"check-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.newPasswordSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_FAIL\" && (\n                <div className=\"center-g9dr\">\n                    <ErrorIcon className=\"error-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.updateFailed}</div>\n                </div>\n            )}\n            {authContext.status === \"UPDATE_ATTRIBUTES_SUCCESS\" && (\n                <div className=\"center-g9dr\">\n                    <CheckIcon className=\"check-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.attributesUpdateSuccess}</div>\n                </div>\n            )}\n            {authContext.status === \"UPDATE_ATTRIBUTES_FAIL\" && (\n                <div className=\"center-g9dr\">\n                    <ErrorIcon className=\"error-icon-g9dr\" />\n                    <div className=\"success-label-g9dr\">{labels.updateFailed}</div>\n                </div>\n            )}\n            {authContext.status === \"SIGNED_IN\" && (\n                <div className=\"signed-in-message-g9dr\">\n                    {labels.privateAreaAccessMessage}\n                    <GenericLink to={links.privateArea.url}>{links.privateArea.name}</GenericLink>\n                </div>\n            )}\n            <div className=\"left-g9dr\">\n                {authContext.attributes?.email && <div>{authContext.attributes?.email}</div>}\n                {authContext.attributes?.given_name && <div>{authContext.attributes?.given_name}</div>}\n                {authContext.attributes?.family_name && <div>{authContext.attributes?.family_name}</div>}\n                {authContext.attributes?.phone_number && <div>{authContext.attributes?.phone_number}</div>}\n                {authContext.attributes?.company_name && <div>{authContext.attributes?.company_name}</div>}\n                {authContext.attributes?.company_type && <div>{authContext.attributes?.company_type}</div>}\n                {authContext.attributes?.role && <div>{authContext.attributes?.role}</div>}\n            </div>\n            <div className=\"right-g9dr\">\n                <Button onClick={onSignOutClickHandler} disabled={disabled}>\n                    {labels.signOutButtonLabel}\n                </Button>\n                <Button disabled={disabled} onClick={onChangePasswordClickHandler}>\n                    {labels.changePasswordButtonLabel}\n                </Button>\n                <Button disabled={disabled} onClick={onUpdateAttributesClickHandler}>\n                    {labels.update}\n                </Button>\n                <Button color=\"red\" onClick={onDeleteAccountClickHandler} disabled={disabled}>\n                    {labels.deleteAccount}\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default UserPanel\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {emailRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype DeleteAccountFields = {\n    email: string\n}\n\nconst DeleteAccountForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const deleteAccountForm = useForm<DeleteAccountFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onDeleteAccountSubmitHandler: SubmitHandler<DeleteAccountFields> = data => {\n        setDisabled(true)\n        authContext.deleteAccount().then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={deleteAccountForm.handleSubmit(onDeleteAccountSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.deleteAccountMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"email\"\n                    placeholder={labels.email}\n                    invalid={deleteAccountForm.formState.errors.email !== undefined}\n                    {...deleteAccountForm.register(\"email\", {\n                        required: true,\n                        validate: value => value === authContext.attributes?.email,\n                        pattern: emailRegex,\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {deleteAccountForm.formState.errors.email && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidEmail}</div>\n                )}\n            </div>\n            <Button color=\"red\" className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.confirmButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedIn}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default DeleteAccountForm\n","import {useContext} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AuthContext, {AllAttributes} from \"~/contexts/AuthContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport {nameRegex, phoneRegex} from \"~/utilities/RegexStrings\"\nimport \"./AuthenticationForm.css\"\nimport AuthenticationFormProps from \"./AuthenticationFormProps\"\n\ntype UpdatedAttributesFields = {\n    given_name: string\n    family_name: string\n    phone_number: string\n    company_name: string | undefined\n    company_type: string | undefined\n    role: string | undefined\n}\n\nconst UpdatedAttributesForm: React.VFC<AuthenticationFormProps> = props => {\n    const {className, children, disabled, setDisabled, edited, setEdited, onButtonClickCallback, ...otherProps} = props\n    const updatedAttributesForm = useForm<UpdatedAttributesFields>()\n    const authContext = useContext(AuthContext)\n    const labels = useAuthenticationLabelsQuery()\n\n    const onUpdatedAttributesSubmitHandler: SubmitHandler<UpdatedAttributesFields> = data => {\n        setDisabled(true)\n        const adkaorauser: AllAttributes = {\n            given_name: data.given_name,\n            family_name: data.family_name,\n            phone_number: data.phone_number,\n            company_name: data.company_name,\n            company_type: data.company_type,\n            role: data.role,\n        }\n        authContext.updateAttributes(adkaorauser).then(result => {\n            setEdited(false)\n            setDisabled(false)\n            if (onButtonClickCallback) onButtonClickCallback()\n        })\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n        if (onButtonClickCallback) onButtonClickCallback()\n    }\n\n    return (\n        <form\n            autoComplete=\"off\"\n            className={classes(\"form-login-pt86\", className)}\n            onSubmit={updatedAttributesForm.handleSubmit(onUpdatedAttributesSubmitHandler)}\n            {...otherProps}\n        >\n            <RichTextField className=\"form-login-text-pt86\">{labels.updateAttributesMessage?.raw}</RichTextField>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.name}\n                    invalid={updatedAttributesForm.formState.errors.given_name !== undefined}\n                    {...updatedAttributesForm.register(\"given_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                        value: authContext.attributes?.given_name ? authContext.attributes?.given_name : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {updatedAttributesForm.formState.errors.given_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.lastName}\n                    invalid={updatedAttributesForm.formState.errors.family_name !== undefined}\n                    {...updatedAttributesForm.register(\"family_name\", {\n                        required: true,\n                        pattern: nameRegex,\n                        value: authContext.attributes?.family_name ? authContext.attributes?.family_name : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {updatedAttributesForm.formState.errors.family_name !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidLastName}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"tel\"\n                    placeholder={labels.phoneNumber}\n                    invalid={updatedAttributesForm.formState.errors.phone_number !== undefined}\n                    {...updatedAttributesForm.register(\"phone_number\", {\n                        required: true,\n                        pattern: phoneRegex,\n                        value: authContext.attributes?.phone_number ? authContext.attributes?.phone_number : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n                {updatedAttributesForm.formState.errors.phone_number !== undefined && (\n                    <div className=\"messages-box-pt86\">{labels.validationInvalidPhoneNumber}</div>\n                )}\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyName}\n                    invalid={updatedAttributesForm.formState.errors.company_name !== undefined}\n                    {...updatedAttributesForm.register(\"company_name\", {\n                        required: false,\n                        value: authContext.attributes?.company_name ? authContext.attributes?.company_name : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.companyType}\n                    invalid={updatedAttributesForm.formState.errors.company_type !== undefined}\n                    {...updatedAttributesForm.register(\"company_type\", {\n                        required: false,\n                        value: authContext.attributes?.company_type ? authContext.attributes?.company_type : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <div className=\"cell-pt86\">\n                <InputText\n                    disabled={disabled}\n                    type=\"text\"\n                    placeholder={labels.role}\n                    invalid={updatedAttributesForm.formState.errors.role !== undefined}\n                    {...updatedAttributesForm.register(\"role\", {\n                        required: false,\n                        value: authContext.attributes?.role ? authContext.attributes?.role : \"\",\n                    })}\n                    containerClassName=\"form-login-input-pt86\"\n                    onKeyDown={() => setEdited(true)}\n                />\n            </div>\n            <Button className=\"button-pt86\" type=\"submit\" disabled={disabled} loading={disabled}>\n                {labels.updateAttributesButtonLabel}\n            </Button>\n            <Button color=\"blue\" className=\"button-pt86\" type=\"button\" disabled={disabled} onClick={switchToSignedIn}>\n                {labels.cancelButtonLabel}\n            </Button>\n        </form>\n    )\n}\n\nexport default UpdatedAttributesForm\n","import {PageProps} from \"gatsby\"\nimport {IGatsbyImageData} from \"gatsby-plugin-image\"\nimport {GatsbySeo} from \"gatsby-plugin-next-seo\"\nimport {Fragment, useContext, useRef, useState} from \"react\"\nimport ChangePasswordForm from \"~/components/Forms/Authentication/ChangePasswordForm\"\nimport ConfirmAccountForm from \"~/components/Forms/Authentication/ConfirmAccountForm\"\nimport ForgottenPasswordForm from \"~/components/Forms/Authentication/ForgottenPasswordForm\"\nimport ForgottenPasswordVerificationForm from \"~/components/Forms/Authentication/ForgottenPasswordVerification\"\nimport SignInForm from \"~/components/Forms/Authentication/SignInForm\"\nimport SignUpForm from \"~/components/Forms/Authentication/SignUpForm\"\nimport HeroSection from \"~/components/Sections/HeroSection/HeroSection\"\nimport UserPanel from \"~/components/Sections/UserPanel/UserPanel\"\nimport Button from \"~/components/UI/Button/Button\"\nimport MultiStyleText from \"~/components/UI/MultiStyleText/MultiStyleText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport ScrollButton from \"~/components/UI/ScrollButton/ScrollButton\"\nimport SectionContainer from \"~/components/UI/SectionContainer/SectionContainer\"\nimport AuthContext from \"~/contexts/AuthContext\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport {useAuthenticationLabelsQuery} from \"~/queries/AuthenticationLabelsQuery\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport DeleteAccountForm from \"../components/Forms/Authentication/DeleteAccountForm\"\nimport UpdatedAttributesForm from \"../components/Forms/Authentication/UpdateAttributesForm\"\nimport GenericLink from \"../components/UI/GenericLink/GenericLink\"\nimport CheckIcon from \"../icons/CheckIcon\"\n\nimport \"./AuthenticationPageTemplate.css\"\n\ninterface SignInPageProps extends PageProps<any, SignInPageContext> {}\n\nconst SignInPage: React.FC<SignInPageProps> = props => {\n    const signInPageData = props.pageContext.data\n    const [isEdited, setEdited] = useState(false)\n    const [isDisabled, setDisabled] = useState(false)\n    const containerRef = useRef<HTMLDivElement>(null)\n    const authContext = useContext(AuthContext)\n    const links = useLinksQuery()\n    const labels = useAuthenticationLabelsQuery()\n    const i18n = useContext(I18nContext)\n    let timeoutRef = useRef<NodeJS.Timeout>()\n\n    const signOut = () => {\n        setDisabled(true)\n        authContext.signOut().then(() => {\n            setDisabled(false)\n        })\n    }\n\n    const centerForm = () => {\n        if (!containerRef.current) return\n        containerRef.current.scrollIntoView({behavior: \"smooth\", block: \"start\"})\n    }\n\n    const switchToSignUp = () => {\n        authContext.setStatus(\"SIGN_UP\")\n        timeoutRef.current = setTimeout(() => centerForm(), 10)\n    }\n\n    const switchToSignedIn = () => {\n        authContext.setStatus(\"SIGNED_IN\")\n    }\n\n    const switchToSignedOut = () => {\n        authContext.setStatus(\"SIGNED_OUT\")\n        timeoutRef.current = setTimeout(() => centerForm(), 10)\n    }\n\n    return (\n        <Fragment>\n            <GatsbySeo\n                title={`${signInPageData.title}`}\n                canonical={`${process.env.SITE_URL}${links.authentication.url}`}\n                language={i18n.language}\n                openGraph={{\n                    url: `${process.env.SITE_URL}${links.about.url}`,\n                    title: `${signInPageData.title}`,\n                    locale: i18n.language,\n                    images: [\n                        {\n                            url: `${signInPageData.heroImage?.url}`,\n                            width: Number(signInPageData.heroImage?.width),\n                            height: Number(signInPageData.heroImage?.height),\n                            alt: `${signInPageData.heroImage?.title}`,\n                        },\n                    ],\n                }}\n            />\n            <HeroSection\n                image={signInPageData.heroImage?.gatsbyImageData}\n                imageAlt={signInPageData.heroImage?.title}\n                mobileImage={signInPageData.heroImageMobile?.gatsbyImageData}\n            >\n                {authContext.status === \"SIGNED_IN\" && authContext.attributes ? (\n                    <Fragment>\n                        <h1 className=\"hero-title-part-3-d2bh\">{labels.wellcome}</h1>\n                        <h2 className=\"hero-title-part-4-d2bh\">{`${authContext.attributes?.given_name} ${authContext.attributes?.family_name}`}</h2>\n                    </Fragment>\n                ) : (\n                    <MultiStyleText flex className1=\"hero-title-part-1-d2bh\" className2=\"hero-title-part-2-d2bh\">\n                        {signInPageData.title}\n                    </MultiStyleText>\n                )}\n            </HeroSection>\n            <SectionContainer tabbed marginPost customTab={<ScrollButton />}>\n                <div className=\"authentication-container-8hxd\" ref={containerRef}>\n                    {authContext.status === \"GENERIC_ERROR\" && (\n                        <RichTextField className=\"authentication-text-8hxd\">{labels.unkownErrorMessage}</RichTextField>\n                    )}\n                    {authContext.status === \"INVALID_USER_POOL\" && (\n                        <RichTextField className=\"authentication-text-8hxd\">\n                            {labels.cognitoErrorMessage?.raw}\n                        </RichTextField>\n                    )}\n                    {(authContext.status === \"SIGN_UP\" ||\n                        authContext.status === \"SIGN_UP_INVALID\" ||\n                        authContext.status === \"SIGN_UP_ALREADY_REGISTERED\") && (\n                        <SignUpForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"CONFIRMATION_NECESSARY\" && (\n                        <ConfirmAccountForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {(authContext.status === \"SIGNED_OUT\" ||\n                        authContext.status === \"SIGNED_OUT_INVALID\" ||\n                        authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_SUCCESS\" ||\n                        authContext.status === \"SIGNED_OUT_UPDATE_PASSWORD_FAIL\" ||\n                        authContext.status === \"SIGNED_OUT_ACCOUNT_CONFIRMED\") && (\n                        <SignInForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"NEW_PASSWORD_REQUIRED\" && (\n                        <ConfirmAccountForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"CHANGE_PASSWORD\" && (\n                        <ChangePasswordForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {(authContext.status === \"FORGOTTEN_PASSWORD\" ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_INVALID\") && (\n                        <ForgottenPasswordForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {(authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION\" ||\n                        authContext.status === \"FORGOTTEN_PASSWORD_VERIFICATION_INVALID\") && (\n                        <ForgottenPasswordVerificationForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"UPDATE_ATTRIBUTES\" && (\n                        <UpdatedAttributesForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"DELETE_ACCOUNT\" && (\n                        <DeleteAccountForm\n                            disabled={isDisabled}\n                            setDisabled={setDisabled}\n                            edited={isEdited}\n                            setEdited={setEdited}\n                            onButtonClickCallback={centerForm}\n                        />\n                    )}\n                    {authContext.status === \"DELETE_ACCOUNT_SUCCESS\" && (\n                        <div className=\"user-panel-container-g9dr\">\n                            <div className=\"center-g9dr\">\n                                <CheckIcon className=\"check-icon-g9dr\" />\n                                <div className=\"success-label-g9dr\">\n                                    {labels.accountDeleteSuccess}\n                                    <GenericLink\n                                        className=\"link-8hxd\"\n                                        to={links.homepage.url}\n                                        onClick={() => authContext.resetStatus()}\n                                    >\n                                        {labels.backToTheHomepage}\n                                    </GenericLink>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    {(authContext.status === \"SIGNED_IN\" ||\n                        authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_SUCCESS\" ||\n                        authContext.status === \"SIGNED_IN_UPDATE_PASSWORD_FAIL\" ||\n                        authContext.status === \"UPDATE_ATTRIBUTES_SUCCESS\" ||\n                        authContext.status === \"UPDATE_ATTRIBUTES_FAIL\") && (\n                        <Fragment>\n                            <UserPanel\n                                disabled={isDisabled}\n                                setDisabled={setDisabled}\n                                edited={isEdited}\n                                setEdited={setEdited}\n                            />\n                        </Fragment>\n                    )}\n                </div>\n                {(authContext.status === \"SIGNED_OUT\" || authContext.status === \"SIGNED_OUT_INVALID\") && (\n                    <div className=\"switch-container-8hxd\">\n                        <span className=\"switch-label-8hxd\">\n                            {`${labels.missingAccount} `}\n                            <Button color=\"link\" onClick={switchToSignUp}>\n                                {labels.clickHereLinkLabel}\n                            </Button>\n                        </span>\n                    </div>\n                )}\n                {(authContext.status === \"SIGN_UP\" ||\n                    authContext.status === \"SIGN_UP_INVALID\" ||\n                    authContext.status === \"SIGN_UP_ALREADY_REGISTERED\") && (\n                    <div className=\"switch-container-8hxd\">\n                        <span className=\"switch-label-8hxd\">\n                            {`${labels.alreadyHaveAccount} `}\n                            <Button color=\"link\" onClick={switchToSignedOut}>\n                                {labels.clickHereLinkLabel}\n                            </Button>\n                        </span>\n                    </div>\n                )}\n                {authContext.status === \"CONFIRMATION_NECESSARY\" ||\n                    authContext.status === \"FORGOTTEN_PASSWORD\" ||\n                    (authContext.status === \"FORGOTTEN_PASSWORD_INVALID\" && (\n                        <div className=\"switch-container-8hxd\">\n                            <span className=\"switch-label-8hxd\">\n                                {`${labels.resendConfirmationCodeQuestion} `}\n                                <Button color=\"link\" onClick={() => authContext.resendConfirmationCode()}>\n                                    {labels.resendConfirmationCodeLinkLabel}\n                                </Button>\n                            </span>\n                        </div>\n                    ))}\n            </SectionContainer>\n        </Fragment>\n    )\n}\n\nexport default SignInPage\n\ninterface SignInPageContext {\n    data: {\n        readonly node_locale: string\n        readonly slug: string | null\n        readonly title: string | null\n        readonly heroImage: {\n            readonly gatsbyImageData: IGatsbyImageData | null\n            readonly url: string | null\n            readonly width: number | null\n            readonly height: number | null\n            readonly title: string | null\n        } | null\n        readonly heroImageMobile: {\n            readonly gatsbyImageData: IGatsbyImageData | null\n            readonly url: string | null\n            readonly width: number | null\n            readonly height: number | null\n            readonly title: string | null\n        } | null\n    }\n}\n"],"names":["props","className","className1","className2","flex","style1","style2","children","_children","trim","numberOfChars","length","numberOfWords","split","part1","part2","substring","Math","round","half","index","indexOf","_jsxs","classes","_jsx","style","trimEnd","otherPros","dangerouslySetInnerHTML","__html","documentToHtmlString","JSON","parse","undefined","onClick","otherProps","ChevronDownIcon","useAuthenticationLabelsQuery","i18n","useContext","I18nContext","data","useStaticQuery","labelsData1","allContentfulAuthenticationLabels","nodes","labelsData2","allContentfulAuthenticationLabels2","translation","node_locale","language","disabled","setDisabled","edited","setEdited","onButtonClickCallback","changePasswordForm","useForm","authContext","AuthContext","labels","onSubmit","handleSubmit","changePassword","password","newPassword","then","result","RichTextField","passwordChangeMessage","_labels$passwordChang","raw","InputText","type","placeholder","oldPassword","invalid","formState","errors","register","required","pattern","passwordRegex","containerClassName","onKeyDown","validationInvalidPasswordSpecs","_labels$validationInv","_labels$validationInv2","Button","loading","changePasswordButtonLabel","color","setStatus","cancelButtonLabel","confirmationForm","autoComplete","confirmAccount","confirmationCode","confirmationMessage","_labels$confirmationM","cognitoCodeRegex","validationInvalidConfirmationCode","confirmButtonLabel","forgottenPasswordForm","forgottenPassword","email","forgottenPasswordMessage","_labels$forgottenPass","status","emailRegex","validationInvalidEmail","forgottenPasswordVerificationForm","forgottenPasswordConfirmNewPassword","verificationCode","forgottenPasswordVerificationMessage","validationInvalidVerificationCode","signInForm","signIn","signInMessage","_labels$signInMessage","CheckIcon","newPasswordSuccess","confirmAccountSuccess","ErrorIcon","updateFailed","validationInvalidCredentials","forgottenPasswordQuestion","signInButtonLabel","signUpForm","emailRef","useRef","useLinksQuery","TransitionContext","adkaorauser","given_name","family_name","phone_number","company_name","company_type","role","signUp","signUpMessage","_labels$signUpMessage","ref","validationEmailAlreadyUsed","name","nameRegex","validationInvalidName","lastName","validationInvalidLastName","phoneNumber","phoneRegex","validationInvalidPhoneNumber","companyName","companyType","completeRegistrationButtonLabel","links","attributesUpdateSuccess","privateAreaAccessMessage","GenericLink","to","privateArea","url","attributes","_authContext$attribut2","_authContext$attribut4","_authContext$attribut6","_authContext$attribut8","_authContext$attribut10","_authContext$attribut12","_authContext$attribut14","event","signOut","signOutButtonLabel","update","deleteAccount","deleteAccountForm","deleteAccountMessage","_labels$deleteAccount","validate","value","_authContext$attribut","updatedAttributesForm","updateAttributes","updateAttributesMessage","_labels$updateAttribu","updateAttributesButtonLabel","signInPageData","pageContext","isEdited","useState","isDisabled","containerRef","timeoutRef","centerForm","current","scrollIntoView","behavior","block","Fragment","GatsbySeo","title","canonical","authentication","openGraph","about","locale","images","heroImage","_signInPageData$heroI","width","Number","_signInPageData$heroI2","height","_signInPageData$heroI3","alt","_signInPageData$heroI4","HeroSection","image","_signInPageData$heroI5","gatsbyImageData","imageAlt","_signInPageData$heroI6","mobileImage","heroImageMobile","_signInPageData$heroI7","wellcome","MultiStyleText","SectionContainer","tabbed","marginPost","customTab","ScrollButton","unkownErrorMessage","cognitoErrorMessage","_labels$cognitoErrorM","SignUpForm","ConfirmAccountForm","SignInForm","ChangePasswordForm","ForgottenPasswordForm","ForgottenPasswordVerificationForm","UpdatedAttributesForm","DeleteAccountForm","accountDeleteSuccess","homepage","resetStatus","backToTheHomepage","UserPanel","missingAccount","setTimeout","clickHereLinkLabel","alreadyHaveAccount","resendConfirmationCodeQuestion","resendConfirmationCode","resendConfirmationCodeLinkLabel"],"sourceRoot":""}