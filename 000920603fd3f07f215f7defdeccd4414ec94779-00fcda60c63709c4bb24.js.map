{"version":3,"file":"000920603fd3f07f215f7defdeccd4414ec94779-00fcda60c63709c4bb24.js","mappings":"yLA4DA,MAtDsCA,IAClC,MAAOC,OAAQC,GAAe,EAAxB,MAA+BC,EAA/B,SAAsCC,KAAaC,GAAcL,GACjE,EAACC,EAAD,EAASK,IAAaC,EAAAA,EAAAA,UAASL,GAC/BM,GAAYC,EAAAA,EAAAA,QAA8B,MA4ChD,OARAC,EAAAA,EAAAA,YAAU,KACFR,EAxBCM,EAAUG,UACfH,EAAUG,QAAQR,MAAMS,OAASJ,EAAUG,QAAQE,aAAe,KAC7DL,EAAUG,QAAQG,aACvBN,EAAUG,QAAQI,gBAAkB,KAC3BP,EAAUG,UACfH,EAAUG,QAAQR,MAAMS,OAAS,GACjCJ,EAAUG,QAAQI,gBAAkB,KACpCT,GAAU,KAEdE,EAAUG,QAAQR,MAAMS,OAAS,OAI5BJ,EAAUG,UACfH,EAAUG,QAAQI,gBAAkB,KAC3BP,EAAUG,UACfH,EAAUG,QAAQR,MAAMa,eAAe,UACvCR,EAAUG,QAAQI,gBAAkB,KACpCT,GAAU,KAEdE,EAAUG,QAAQR,MAAMS,OAASJ,EAAUG,QAAQE,aAAe,QASnE,CAACX,KAGAe,EAAAA,EAAAA,KAAAA,MAAAA,IAASZ,EAAYF,MAAO,CA1C5Be,SAAU,SACVC,mBAAoB,OACpBC,yBAA0B,0CAwCwBnB,EArCb,CACrCW,OAAQ,OAoCiE,MAAQT,GAAQkB,IAAKb,EAA9F,SACKJ,KC3Bb,MAjBsCJ,IAClC,MAAM,UAACsB,EAAD,MAAYC,EAAZ,YAAmBC,GAAc,EAAjC,SAAwCpB,KAAaC,GAAcL,GACnE,EAACC,EAAD,EAASK,IAAaC,EAAAA,EAAAA,UAASiB,GAErC,OACIC,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,WAAWI,EAAAA,EAAAA,GAAQ,cAAezB,EAAS,cAAgB,GAAIqB,MAAgBjB,EAApF,WACIoB,EAAAA,EAAAA,MAAAA,SAAAA,CAAQH,UAAU,cAAcK,QAASC,GAAKtB,GAAUuB,IAAUA,IAAlE,WACIZ,EAAAA,EAAAA,KAACa,EAAAA,EAAD,CAAeR,UAAU,eACzBL,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,UAAU,aAAhB,SAA8BC,QAElCN,EAAAA,EAAAA,KAACc,EAAD,CAAQ9B,OAAQA,EAAQqB,UAAU,eAAlC,SACKlB,S,kHC2HjB,IAlI8CJ,IAC1C,MAAM,KACFgC,EADE,MAEFC,EAFE,MAGFV,EAHE,SAIFW,EAJE,KAKFC,EALE,kBAMFC,EANE,IAOFC,EAPE,KAQFC,EARE,SASFC,EATE,QAUFC,EAVE,UAWFlB,EAXE,SAYFlB,EAZE,KAaFqC,KACGpC,GACHL,EACE0C,GAASC,EAAAA,EAAAA,KACTC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAExB,IAAIC,EACAf,IACAe,EAAgB,IAAIC,KAAKC,eAAeL,EAAKM,SAAU,CACnDC,IAAK,UACLC,MAAO,OACPC,KAAM,YACPC,OAAO,IAAIC,KAAKvB,KAGvB,IAAIwB,EAAuB,EAE3B,OAAQf,GACJ,KAAKgB,EAAAA,EAAAA,KACDD,EAAY,EACZ,MACJ,KAAKC,EAAAA,EAAAA,YACDD,EAAY,EACZ,MACJ,KAAKC,EAAAA,EAAAA,QAGL,KAAKA,EAAAA,EAAAA,OACDD,EAAY,EACZ,MACJ,KAAKC,EAAAA,EAAAA,SAOL,KAAKA,EAAAA,EAAAA,MAOL,KAAKA,EAAAA,EAAAA,SAOL,KAAKA,EAAAA,EAAAA,QAEGD,EADAnB,EACY,EAEA,EAKxB,OACIZ,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,WAAWI,EAAAA,EAAAA,GAAQ,YAAaJ,MAAgBjB,EAArD,WACIoB,EAAAA,EAAAA,MAACiC,EAAAA,EAAD,IAAkBrB,EAAM,CAACsB,GAAItB,aAAF,EAAEA,EAAKuB,KAAO,CAACD,GAAK,IAAGf,EAAKM,YAAYT,KAAQH,MAAWhB,UAAU,YAAhG,WACKW,aAAAA,EAAAA,EAAO4B,kBAAmB5B,EAAMV,QAC7BN,EAAAA,EAAAA,KAAC6C,EAAAA,EAAD,CAAaC,IAAK9B,EAAMV,MAAOU,MAAOA,aAAF,EAAEA,EAAO4B,gBAAiBvC,UAAU,gBAE5D,IAAdkC,GAAiC,IAAdA,KACjB/B,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,UAAU,eAAf,UACKyB,GAA+B,IAAdS,IAAmBvC,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,UAAU,YAAhB,SAA6ByB,IACnD,IAAdS,IAAmBvC,EAAAA,EAAAA,KAAAA,KAAAA,CAAIK,UAAU,aAAd,SAA4BC,IACjC,IAAdiC,IAAmBvC,EAAAA,EAAAA,KAAAA,KAAAA,CAAIK,UAAU,aAAd,SAA4BC,WAI5DE,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,UAAU,aAAf,WACIL,EAAAA,EAAAA,KAAAA,MAAAA,CAAKK,UAAU,cACC,IAAdkC,GAAiC,IAAdA,KAAoBvC,EAAAA,EAAAA,KAAAA,MAAAA,CAAKK,UAAU,YAAf,SAA4BC,IACtD,IAAdiC,IACG/B,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,UAAU,YAAf,UACM,GAAEoB,EAAOR,cACXjB,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,UAAU,aAAhB,SAA8BY,OAGvB,IAAdsB,IACG/B,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,UAAU,YAAf,UACM,GAAEoB,EAAOsB,SACX/C,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,UAAU,aAAhB,SAA8Ba,aAA9B,EAA8BA,EAAM8B,KAAK,WAGlC,IAAdT,IACG/B,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,UAAU,YAAf,UACM,GAAEoB,EAAOH,cACXtB,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,UAAU,aAAhB,SAA8BiB,OAGvB,IAAdiB,IACG/B,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,UAAU,YAAf,UACM,GAAEoB,EAAOF,aACXvB,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,UAAU,aAAhB,SAA8BkB,QAGtCvB,EAAAA,EAAAA,KAAAA,MAAAA,CAAKK,UAAU,YAAf,SAA4Bc,KAC5BX,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,UAAU,WAAf,UACmB,IAAdkC,IACGvC,EAAAA,EAAAA,KAACiD,EAAAA,EAAD,CAAYP,GAAK,IAAGf,EAAKM,YAAYT,KAAQH,KAA7C,SAAuDI,EAAOyB,OAEnD,IAAdX,IACGvC,EAAAA,EAAAA,KAACiD,EAAAA,EAAD,CAAYP,GAAItB,aAAF,EAAEA,EAAKuB,IAAKQ,UAAQ,EAAlC,SACK1B,EAAO2B,yB,+FCuG7B,IAAKC,EAFZ,IA1NoCtE,IAChC,MAAM,UACFsB,EADE,MAEFC,EAFE,QAGFgD,EAHE,MAIFC,EAJE,YAKFC,GAAc,EALZ,aAMFC,GAAe,EACfC,QAASC,EAPP,aAQFC,EARE,KASFC,EAAO,EATL,SAUF1E,KACGC,GACHL,GACE,EAAC+E,EAAD,EAAUC,IAAczE,EAAAA,EAAAA,UAASuE,IACjC,EAACG,EAAD,EAASC,IAAa3E,EAAAA,EAAAA,UAAuCqE,GAAcN,EAAoBa,QAC/F,EAACC,EAAD,EAAQC,IAAY9E,EAAAA,EAAAA,aACpB,EAAC+E,EAAD,EAAYC,IAAchF,EAAAA,EAAAA,WAAkB,GAC5CiF,GAAa/E,EAAAA,EAAAA,UACbiC,GAASC,EAAAA,EAAAA,KAOT8C,EAAcC,UAChB,IAAIC,EAA+DC,EAAAA,SAAAA,QAAiBxF,GAIpF,OAAQ6E,GACJ,KAAKX,EAAoBuB,UACrBF,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMkC,SACR6D,EAAE/F,MAAMkC,SACN4D,EAAE9F,MAAMkC,SAAS8D,cAAcD,EAAE/F,MAAMkC,WADf,EADD,IAIlC,MACJ,KAAKoC,EAAoB2B,UACrBN,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMkC,SACR6D,EAAE/F,MAAMkC,SACN6D,EAAE/F,MAAMkC,SAAS8D,cAAcF,EAAE9F,MAAMkC,UADhB,GADC,IAInC,MACJ,KAAKoC,EAAoB4B,UACrBP,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMuC,SACRwD,EAAE/F,MAAMuC,SACNuD,EAAE9F,MAAMuC,SAASyD,cAAcD,EAAE/F,MAAMuC,WADf,EADD,IAIlC,MACJ,KAAK+B,EAAoB6B,UACrBR,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMuC,SACRwD,EAAE/F,MAAMuC,SACNwD,EAAE/F,MAAMuC,SAASyD,cAAcF,EAAE9F,MAAMuC,UADhB,GADC,IAInC,MACJ,KAAK+B,EAAoBa,MACrBQ,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMgC,KACR+D,EAAE/F,MAAMgC,KACT8D,EAAE9F,MAAMgC,KAAO+D,EAAE/F,MAAMgC,MAAc,EACrC+D,EAAE/F,MAAMgC,KAAO8D,EAAE9F,MAAMgC,KAAa,EACjC,GAHoB,EADD,IAM9B,MACJ,KAAKsC,EAAoB8B,MACrBT,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMgC,KACR+D,EAAE/F,MAAMgC,KACT8D,EAAE9F,MAAMgC,KAAO+D,EAAE/F,MAAMgC,KAAa,EACpC+D,EAAE/F,MAAMgC,KAAO8D,EAAE9F,MAAMgC,MAAc,EAClC,EAHmB,GADC,IAM/B,MACJ,KAAKsC,EAAoB+B,OACrBV,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMuB,MACRwE,EAAE/F,MAAMuB,MACNuE,EAAE9F,MAAMuB,MAAMyE,cAAcD,EAAE/F,MAAMuB,QADf,EADD,IAI/B,MACJ,KAAK+C,EAAoBgC,OACrBX,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMuB,MACRwE,EAAE/F,MAAMuB,MACNwE,EAAE/F,MAAMuB,MAAMyE,cAAcF,EAAE9F,MAAMuB,OADhB,GADC,IAIhC,MACJ,KAAK+C,EAAoBiC,MACrBZ,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMyC,KACRsD,EAAE/F,MAAMyC,KACNqD,EAAE9F,MAAMyC,KAAKuD,cAAcD,EAAE/F,MAAMyC,OADf,EADD,IAI9B,MACJ,KAAK6B,EAAoBkC,MACrBb,EAAYf,MAAK,CAACkB,EAAGC,IACZD,EAAE9F,MAAMyC,KACRsD,EAAE/F,MAAMyC,KACNsD,EAAE/F,MAAMyC,KAAKuD,cAAcF,EAAE9F,MAAMyC,MADhB,GADC,IAOvC4C,EAASM,EAAYc,MAAM,EAAG1B,MAGlCrE,EAAAA,EAAAA,YAAU,KACNsE,EAAWF,IACPP,GAAWU,KACXM,GAAW,GACXE,IAAciB,MAAKC,GAAWnB,EAAW7E,QAAUiG,YAAW,IAAMrB,GAAW,IAAQ,MAEpF,KACCC,EAAW7E,SAASkG,aAAarB,EAAW7E,YAErD,CAAC4D,EAASU,KAEbvE,EAAAA,EAAAA,YAAU,KACN+E,MACD,CAACV,IAMJ,OACItD,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,WAAWI,EAAAA,EAAAA,GAAQ,aAAcJ,MAAgBjB,EAAtD,WACMoE,GAAeD,KACb/C,EAAAA,EAAAA,MAAAA,SAAAA,CAAQH,UAAU,cAAlB,WACIL,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,UAAU,aAAhB,SAA8BkD,IAC7BC,IACGhD,EAAAA,EAAAA,MAAAA,OAAAA,CAAMH,UAAU,YAAhB,WACIL,EAAAA,EAAAA,KAAAA,QAAAA,CAAOK,UAAU,kBAAkBwF,QAAQ,cAA3C,SACKpE,EAAOuC,SAGXvC,EAAOqE,WACJrE,EAAOsE,YACPtE,EAAOR,UACPQ,EAAOH,UACPG,EAAOV,MACPU,EAAOnB,OACPmB,EAAOD,OACHhB,EAAAA,EAAAA,MAACwF,EAAAA,EAAD,CACIC,GAAG,cACH5F,UAAU,cACV6F,MAAOlC,EACPmC,SAnILC,IAC3BnC,EAAUmC,EAAMC,cAAcH,OAC1BtC,GAAcA,EAAawC,EAAMC,cAAcH,QA6HvB,WAMIlG,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoBuB,UAAnC,SACM,GAAEnD,EAAOR,YAAYQ,EAAOqE,eAElC9F,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoB2B,UAAnC,SACM,GAAEvD,EAAOR,YAAYQ,EAAOsE,gBAElC/F,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoB4B,UAAnC,SACM,GAAExD,EAAOH,YAAYG,EAAOqE,eAElC9F,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoB6B,UAAnC,SACM,GAAEzD,EAAOH,YAAYG,EAAOsE,gBAElC/F,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoBa,MAAnC,SACM,GAAEzC,EAAOV,QAAQU,EAAOqE,eAE9B9F,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoB8B,MAAnC,SACM,GAAE1D,EAAOV,QAAQU,EAAOsE,gBAE9B/F,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoB+B,OAAnC,SACM,GAAE3D,EAAOnB,SAASmB,EAAOqE,eAE/B9F,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoBgC,OAAnC,SACM,GAAE5D,EAAOnB,SAASmB,EAAOsE,gBAE/B/F,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoBiC,MAAnC,SACM,GAAE7D,EAAOD,QAAQC,EAAOqE,eAE9B9F,EAAAA,EAAAA,KAACsG,EAAAA,EAAD,CAAQJ,MAAO7C,EAAoBkC,MAAnC,SACM,GAAE9D,EAAOD,QAAQC,EAAOsE,wBAQzD5B,IACG3D,EAAAA,EAAAA,MAAC+F,EAAAA,SAAD,WACKpC,EAAMqC,OAAS,IAAKxG,EAAAA,EAAAA,KAAAA,MAAAA,CAAKK,UAAU,aAAf,SAA6B8D,IACjDA,EAAMqC,OAAS,IACZxG,EAAAA,EAAAA,KAAAA,MAAAA,CAAKK,UAAU,iBAAf,UACIL,EAAAA,EAAAA,KAAAA,IAAAA,CAAAA,SAAIyB,EAAOgF,wBAM1BhD,GAAgBK,EAAUa,EAAAA,SAAAA,MAAexF,KACtCa,EAAAA,EAAAA,KAAAA,SAAAA,CAAQK,UAAU,oBAAlB,UACIG,EAAAA,EAAAA,MAACkG,EAAAA,EAAD,CACIrG,UAAU,wBACVK,QA/EY0F,IAC5BrC,GAAWnD,GAASA,EAAQiD,KA+EZrC,KAAK,SACLmF,MAAM,cAJV,WAMI3G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAD,CAAiBvG,UAAU,yBAC3BL,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,UAAU,sBAAhB,SAAuCoB,EAAOoF,oBAUtE,SAAYxD,GAAAA,EAAAA,UAAAA,YAAAA,EAAAA,UAAAA,YAAAA,EAAAA,UAAAA,YAAAA,EAAAA,UAAAA,YAAAA,EAAAA,MAAAA,QAAAA,EAAAA,MAAAA,QAAAA,EAAAA,OAAAA,SAAAA,EAAAA,OAAAA,SAAAA,EAAAA,MAAAA,QAAAA,EAAAA,MAAAA,QAAZ,CAAYA,IAAAA,EAAAA,M,yGChJZ,IA/E8CtE,IAC1C,MAAM,MACF4H,EAAQ,QADN,GAEFjE,EAAK,GAFH,SAGFvD,EAHE,SAIFgE,EAJE,kBAKF2D,EALE,QAMFpG,EANE,UAOFL,EAPE,IAQFD,KACGhB,GACHL,EACEgI,EAAW,YAAYC,KAAKtE,GAAU,IACtCuE,GAAqBrF,EAAAA,EAAAA,YAAWsF,EAAAA,IAChCC,GAAgBvF,EAAAA,EAAAA,YAAWwF,EAAAA,GAEjC,IAAIC,EAA2B,cAC/B,OAAQV,GACJ,IAAK,QACDU,EAAc,cACd,MACJ,IAAK,QACDA,EAAc,QACd,MACJ,IAAK,OACDA,EAAc,OACd,MACJ,IAAK,OACDA,EAAc,OACd,MACJ,IAAK,MACDA,EAAc,MAItB,MAgBMC,EACFP,GAAYrE,GACR1C,EAAAA,EAAAA,KAACuH,EAAAA,KAAD,CACIlH,WAAWI,EAAAA,EAAAA,GAAQ,cAAgB,GAAEkG,SAActG,GACnDqC,GAAIA,EACJS,SAAUA,EACVqE,OAAO,QACP9G,QAdY0F,IATVzD,MAUVyD,EAAMqB,iBACNN,EAAcO,KAAK,KACfhH,GAASA,EAAQ0F,IAZXzD,EAaLyD,EAAMC,cAAcsB,QAXrBb,GACAc,EAAAA,EAAAA,UAASjF,GAGbsE,EAAmBY,WAAWlF,QAkBlBvD,EANR,SAQKD,KAGLa,EAAAA,EAAAA,KAAAA,IAAAA,CACI2H,KAAMjF,QAAAA,OAAMoF,EACZzH,WAAWI,EAAAA,EAAAA,GAAQ,cAAgB,GAAEkG,SAActG,GACnD8C,SAAUA,EACVqE,OAAQrE,EAAW,QAAU,YACzB/D,EACJgB,IAAKA,EANT,SAQKjB,IAIb,OAAOa,EAAAA,EAAAA,KAAC+H,EAAAA,EAAD,CAAQpB,MAAOU,EAAf,SAA6BC,M,uDC9ExC,MAAMU,EAAiDjJ,IACnD,MAAM,SAACkJ,EAAD,SAAWC,EAAX,UAAqB7H,EAArB,WAAgC8H,EAAhC,SAA4ChJ,KAAaC,GAAcL,EACvEqJ,GAAgB5I,EAAAA,EAAAA,UAEhB6I,GAAeC,EAAAA,EAAAA,cAAalC,IAA6C,IAAD,EAC1EgC,EAAc1I,QAAd,QAAA0I,EAAwBhC,EAAMmC,QAAQ,UAAtC,aAAwBC,EAAkBC,UAC3C,IAEGC,GAAcJ,EAAAA,EAAAA,cAAalC,IAA6C,IAAD,EACzE,MAAMuC,EAAQ,UAAGvC,EAAMmC,QAAQ,UAAjB,aAAGK,EAAkBH,QAEnC,QAC2B,IAAbE,QAC0B,IAA1BP,EAAc1I,QAExB,OAGJ,MAAMmJ,EAAYF,EAAWP,EAAc1I,QAAU,GAC/CoJ,EAAaH,EAAWP,EAAc1I,QAAU,GAEtD,OAAImJ,GACAX,SAAAA,EAAWa,KAAKC,IAAIf,EAAW,EAAG,SAClCG,EAAc1I,aAAUoI,IAGxBgB,GACAZ,SAAAA,EAAWa,KAAKE,IAAIhB,EAAW,EAAGtD,EAAAA,SAAAA,MAAexF,GAAY,SAC7DiJ,EAAc1I,aAAUoI,SAF5B,IAKD,CAACG,IAEJ,OACIjI,EAAAA,EAAAA,KAAAA,MAAAA,IACQZ,EACJiB,WAAWI,EAAAA,EAAAA,GAAQ,aAAcJ,GAFrC,SAIKsE,EAAAA,SAAAA,IAAaxF,GAAU,CAAC+J,EAAOC,KAC5BnJ,EAAAA,EAAAA,KAAAA,MAAAA,CAEIK,WAAWI,EAAAA,EAAAA,GAAQ,aAAc0H,EAAY,CACzC,gBAAiBF,IAAakB,IAElCd,aAAcA,EACdK,YAAaA,EANjB,SAQKQ,GAPIC,QAczB,MAIAnB,EAAMoB,MAFkBrK,IAASiB,EAAAA,EAAAA,KAAAA,EAAAA,SAAAA,CAAAA,SAAGjB,EAAMI,Y,6CCzD1C,IANgCJ,IAC5B,MAAM,UAACsB,EAAD,SAAYgJ,GAAW,KAAUjK,GAAcL,EAErD,OAAOiB,EAAAA,EAAAA,KAAAA,MAAAA,CAAKK,WAAWI,EAAAA,EAAAA,GAAQ,WAAY4I,EAAW,gBAAkB,GAAIhJ,MAAgBjB,M,uDCQhG,IAZsBL,IAClB,MAAM,QAAC2B,EAAD,UAAUL,KAAcjB,GAAcL,EAC5C,OACIyB,EAAAA,EAAAA,MAAAA,MAAAA,CAAKH,WAAWI,EAAAA,EAAAA,GAAQ,gBAAiBJ,MAAgBjB,EAAzD,WACIY,EAAAA,EAAAA,KAAAA,MAAAA,CAAKK,UAAU,aAAf,UACIL,EAAAA,EAAAA,KAAAA,MAAAA,CAAKK,UAAU,mBAEnBL,EAAAA,EAAAA,KAAC4G,EAAAA,EAAD,CAAiBvG,UAAU,mB,iGCHvC,MAAM2F,GAAgCsD,EAAAA,EAAAA,aAA2C,CAACvK,EAAOqB,KACrF,MAAM,UAACC,EAAD,QAAYkJ,EAAZ,GAAqBtD,EAArB,SAAyBE,EAAzB,YAAmCqD,EAAc,MAAjD,eAAwDC,EAAxD,SAAwEtK,KAAaC,GAAcL,GACnG,EAACkJ,EAAD,EAAWyB,IAAepK,EAAAA,EAAAA,UAAS,aAOzC,OACIkB,EAAAA,EAAAA,MAAAA,MAAAA,CACIH,WAAWI,EAAAA,EAAAA,GACP,wBACa,cAAbwH,EAA2B,YAAc,GACzCsB,EAAU,eAAiB,GAC3BlJ,MAEAoJ,EAPR,WASIjJ,EAAAA,EAAAA,MAAAA,SAAAA,CAAQyF,GAAIA,EAAI5F,UAAU,cAAc8F,SAfjBC,IACvBD,GAAUA,EAASC,GACvBsD,EAAYtD,EAAMC,cAAcH,QAa6C9F,IAAKA,KAAShB,EAAvF,WACIY,EAAAA,EAAAA,KAAAA,SAAAA,CAAQkG,MAAM,YAAd,SACKsD,GADyB,MAG7BrK,MAELa,EAAAA,EAAAA,KAAAA,MAAAA,CAAKK,UAAU,sBAAf,UACIL,EAAAA,EAAAA,KAAC4G,EAAAA,EAAD,CAAiBvG,UAAU,sBAM3C,MAMO,MAAMiG,EAAgCvH,IACzC,MAAM,SAACI,EAAD,MAAW+G,KAAU9G,GAAcL,EACzC,OACIiB,EAAAA,EAAAA,KAAAA,SAAAA,CAAQkG,MAAOA,GAAgB/G,KAAcC,EAA7C,SACKD,M,iEClBb,IAzBsCJ,IAClC,MAAM,UAACsB,EAAD,SAAY4H,GAAW,EAAvB,SAA8BC,EAA9B,SAAwC/I,KAAaC,GAAcL,GACnE,EAAC4K,EAAD,EAAYC,IAAgBtK,EAAAA,EAAAA,UAAS2I,IAE3CxI,EAAAA,EAAAA,YAAU,KACNmK,EAAa3B,KACd,CAACA,IAMJ,OACIjI,EAAAA,EAAAA,KAAC+H,EAAAA,EAAD,WACI/H,EAAAA,EAAAA,KAAAA,SAAAA,CACIK,WAAWI,EAAAA,EAAAA,GAAQ,cAAekJ,EAAY,gBAAkB,GAAItJ,GACpEK,QARkB0F,IACtB8B,GAAUA,EAAS9B,OAQXhH,EAHR,SAKKD,Q,sFCzBV,MAAM0K,EAAuB,KAChC,MAAMlI,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAElBiI,GAAkCC,EAAAA,EAAAA,gBAAe,cA2BjDC,EAAgB,GACtB,IAAK,MAAMC,KAAQH,EAAKI,+BAA+BC,MAC/CF,EAAKG,cAAgBzI,EAAKM,UAC1B+H,EAAcK,KAAKJ,GAG3B,OAAOD,I,qFCpCJ,MAAMM,EAAoB,KAC7B,MAAM3I,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAElBiI,GAA+BC,EAAAA,EAAAA,gBAAe,cA2B9CC,EAAgB,GACtB,IAAK,MAAMC,KAAQH,EAAKI,+BAA+BC,MAC/CF,EAAKG,cAAgBzI,EAAKM,UAC1B+H,EAAcK,KAAKJ,GAG3B,OAAOD,I,sFCpCJ,MAAMO,EAAoB,KAC7B,MAAM5I,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAElBiI,GAA+BC,EAAAA,EAAAA,gBAAe,cA0B9CC,EAAgB,GACtB,IAAK,MAAMC,KAAQH,EAAKU,kCAAkCL,MAClDF,EAAKG,cAAgBzI,EAAKM,UAC1B+H,EAAcK,KAAKJ,GAG3B,OAAOD,I,sFCnCJ,MAAMS,EAAqB,KAC9B,MAAM9I,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAElBiI,GAAgCC,EAAAA,EAAAA,gBAAe,cA2B/CC,EAAgB,GACtB,IAAK,MAAMC,KAAQH,EAAKI,+BAA+BC,MAC/CF,EAAKG,cAAgBzI,EAAKM,UAC1B+H,EAAcK,KAAKJ,GAG3B,OAAOD,I,ogBCbJ,MAAMU,EAAuB,UACvBC,EAAsB,SACtBC,EAAoB,OAE1B,IAAKC,GAAZ,SAAYA,GAAAA,EAAAA,EAAAA,MAAAA,GAAAA,QAAAA,EAAAA,EAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,YAAAA,GAAAA,cAAAA,EAAAA,EAAAA,QAAAA,GAAAA,UAAAA,EAAAA,EAAAA,OAAAA,GAAAA,SAAZ,CAAYA,IAAAA,EAAAA,KA6PZ,UA7OkD9L,IAAU,IAAD,UACvD,MAAM+L,EAAmB/L,EAAMgM,YAAYjB,KACrCkB,GAAQC,EAAAA,EAAAA,KACRtJ,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAElBqJ,EAAmB,KACrB,IAAIC,EAAyB,GAuC7B,OAtCAC,EAASC,SAAQpB,IACb,GAAIqB,IAAwB9I,EAAAA,EAAAA,KAAiByH,EAAKzI,OAAS8J,EAA3D,CACA,GAAuB,KAAnBC,EAAuB,CACvB,IAAIC,GAAe,EACfC,GAAqB,EACrBC,GAAkB,EAClBC,GAAkB,EAClBC,GAAiB,EACjBC,GAAc,EAElB,MAAMC,EAAqBP,EAAeQ,cAe1C,GAdI9B,EAAK3J,OAAS2J,EAAK3J,MAAMyL,cAAcC,QAAQF,IAAuB,IAAGN,GAAe,GACxFvB,EAAK9I,mBAAqB8I,EAAK9I,kBAAkB4K,cAAcC,QAAQF,IAAuB,IAC9FL,GAAqB,GACrBxB,EAAKhJ,UAAYgJ,EAAKhJ,SAAS8K,cAAcC,QAAQF,IAAuB,IAC5EJ,GAAkB,GAClBzB,EAAK3I,UAAY2I,EAAK3I,SAASyK,cAAcC,QAAQF,IAAuB,IAC5EH,GAAkB,GAClB1B,EAAK1I,SAAW0I,EAAK1I,QAAQwK,cAAcC,QAAQF,IAAuB,IAAGF,GAAiB,GAC9F3B,EAAK/I,MACL+I,EAAK/I,KAAKmK,SAAQtI,IACVA,GAAOA,EAAIgJ,cAAcC,QAAQF,IAAuB,IAAGD,GAAc,QAKhFL,GACAE,GACAD,GACAI,GACAF,GACAC,GAED,OAGRT,EAAMd,KAAKJ,OAERkB,GAOLC,EAAyB,mBACxBd,EAAAA,EAAAA,OADwB,QAExBC,EAAAA,EAAAA,OAFwB,QAGxBV,EAAAA,EAAAA,OAHwB,QAIxBY,EAAAA,EAAAA,OAGDwB,EAAWC,EAAYnN,EAAMgM,aAC7BoB,GAAeC,EAAAA,EAAAA,IAAc1B,GAC7B2B,GAAcD,EAAAA,EAAAA,IAAczB,GAC5B2B,GAAYF,EAAAA,EAAAA,IAAcxB,IAE1B,EAAC2B,EAAD,EAAuBC,IAA2BlN,EAAAA,EAAAA,UACpDmN,EAAmBN,KAEjB,EAACb,EAAD,EAAsBoB,IAA0BpN,EAAAA,EAAAA,UAA6B6M,GAA8B,KAE3G,EAACQ,EAAD,EAAeC,IAAmBtN,EAAAA,EAAAA,UAAuCgN,GAAwB,KACjG,EAACf,EAAD,EAAiBsB,IAAqBvN,EAAAA,EAAAA,UAAS+M,GAA4B,KAE3E,EAACS,GAAD,EAAaC,KAAiBzN,EAAAA,EAAAA,UAA0B4L,MACxD,EAAC7G,GAAD,EAAYC,KAAchF,EAAAA,EAAAA,WAAkB,GAC5C0N,IAAYxN,EAAAA,EAAAA,QAA2B,OAE7CyN,EAAAA,EAAAA,kBAAgB,KACPd,IACLO,EAAuBP,GACvBK,EAAwBC,EAAmBN,OAC5C,CAACA,KAEJc,EAAAA,EAAAA,kBAAgB,KACZC,OACD,CAAC5B,EAAqBqB,IAEzB,MAAMQ,GAAwB/G,IAC1B,MAAMgH,EAAeC,OAAOjH,EAAMC,cAAcH,OAChDsG,EAAwBY,GACxBV,EAAuBY,EAAoBF,KAWzCF,GAAc,KAChBK,KACAjJ,IAAW,GAtDUG,UACdyG,IAsDPsC,GACK/H,MAAK0F,IACF4B,GAAc5B,MAEjB1F,MAAK,KACFnB,IAAW,OASjBiJ,GAAY,MACdE,EAAAA,EAAAA,IACI,CAACC,KAAMhD,EAAsBxE,MAAOoF,GACpC,CAACoC,KAAM/C,EAAqBzE,MAAOqF,GACnC,CAACmC,KAAM9C,EAAmB1E,MAAOyG,KAIzC,OACInM,EAAAA,EAAAA,MAAC+F,EAAAA,SAAD,YACIvG,EAAAA,EAAAA,KAAC2N,EAAAA,UAAD,CACIrN,MAAOwK,EAAiB8C,OAAS9C,EAAiB8C,OAAS,GAC3DC,UAAY,sBAAyB7C,EAAM8C,SAASnL,MACpDV,SAAUN,EAAKM,SACf8L,UAAW,CACPpL,IAAM,sBAAyBqI,EAAM8C,SAASnL,MAC9CrC,MAAQ,GAAEwK,EAAiB8C,SAC3BI,OAAQrM,EAAKM,SACbgM,OAAQ,CACJ,CACItL,IAAM,GAAD,UAAGmI,EAAiBoD,cAApB,aAAGC,EAAyBxL,MACjCyL,MAAOf,OAAM,UAACvC,EAAiBoD,cAAlB,aAACG,EAAyBD,OACvCzO,OAAQ0N,OAAM,UAACvC,EAAiBoD,cAAlB,aAACI,EAAyB3O,QACxCmD,IAAM,GAAD,UAAGgI,EAAiBoD,cAApB,aAAGK,EAAyBjO,cAKjDN,EAAAA,EAAAA,KAACgI,EAAAA,EAAD,CAAOC,SAAUsE,EAAjB,SACKN,EAASuC,KAAI,CAACC,EAAStF,KAEhBnJ,EAAAA,EAAAA,KAACgI,EAAAA,EAAAA,MAAD,WACIhI,EAAAA,EAAAA,KAAC0O,EAAAA,EAAD,CACI1N,MAAOyN,aAAF,EAAEA,EAASzN,MAChB2N,SAAUF,aAAF,EAAEA,EAASE,SACnBC,YAAaH,aAAF,EAAEA,EAASG,YAH1B,UAKI5O,EAAAA,EAAAA,KAAC6O,EAAAA,EAAD,CACIC,MAAI,EACJC,WAAW,yBACXC,WAAW,yBAHf,SAKKP,EAAQnO,WAXH6I,QAkB9BnJ,EAAAA,EAAAA,KAACiP,EAAAA,EAAD,CAAkBC,QAAM,EAACC,YAAU,EAACC,WAAWpP,EAAAA,EAAAA,KAACqP,EAAAA,EAAD,IAAkBjP,IAAK4M,GAAtE,UACIxM,EAAAA,EAAAA,MAAC8O,EAAAA,EAAD,CAAQhP,MAAOwK,EAAiB8C,OAAhC,WACIpN,EAAAA,EAAAA,MAAC+O,EAAAA,EAAD,CAAKlG,UAAQ,EAACnK,MAAO,CAACsQ,UAAW,mBAAjC,WACIxP,EAAAA,EAAAA,KAACyP,EAAAA,EAAD,CAEIxH,SAAUsE,IAAyB1B,EAAa1B,MAChDjB,SAAUiF,GACVjH,MAAO2E,EAAa1B,MAJxB,SAMK2B,EAAiB4E,UALb5E,EAAiB4E,UAF9B,UASK5E,EAAiB6E,eATtB,aASKC,EAA0BpB,KAAI,CAACC,EAAStF,KACrC,MAAM0G,EAAa1G,EAAQ,EAC3B,OACInJ,EAAAA,EAAAA,KAACyP,EAAAA,EAAD,CAEIxH,SAAUsE,IAAyBsD,EACnC3H,SAAUiF,GACVjH,MAAO2J,EAJX,SAMKpB,aANL,EAMKA,EAASb,QALLa,aADT,EACSA,EAASpN,aAU9BrB,EAAAA,EAAAA,KAAAA,OAAAA,CAAM8P,SA/EO1J,IACzBA,EAAMqB,iBACNyF,MA6EY,UACI1M,EAAAA,EAAAA,MAAC+O,EAAAA,EAAD,CAAKlG,UAAQ,EAAb,WACIrJ,EAAAA,EAAAA,KAAC+P,EAAAA,EAAD,IACSjF,EAAiBkF,uBAChB,CAACxG,YAAasB,EAAiBkF,wBAC/B,GACN7J,SAzGAC,IACxByG,EAAkBzG,EAAMC,cAAcH,QAyGdA,MAAOqF,EACPrM,MAAO,CACHkP,MAAO,kBACP6B,SAAU,QACVC,UAAW,aAGnBlQ,EAAAA,EAAAA,KAAC0G,EAAAA,EAAD,CAAQC,MAAM,QAAQnF,KAAK,SAA3B,SACKsJ,EAAiBqF,+BAMtCnQ,EAAAA,EAAAA,KAACiP,EAAAA,EAAD,WACIjP,EAAAA,EAAAA,KAACoQ,EAAAA,EAAD,CAAO3M,cAAY,EAACD,aAAW,EAACF,QAASe,GAAWX,QAAS4I,EAAW1I,aArH9DsC,IAClB0G,EAAgB1G,IAoHR,SACK4G,GAAW0B,KAAI,CAAC6B,EAAMlH,KAEfnJ,EAAAA,EAAAA,KAACsQ,EAAAA,EAAD,CAEIvP,KAAMsP,EAAKtP,KACXT,MAAO+P,EAAK/P,MACZU,MAAOqP,EAAKrP,MACZC,SAAUoP,EAAKpP,SACfC,KAAMmP,EAAKnP,KACXC,kBAAmBkP,EAAKlP,kBACxBE,KAAMgP,EAAKhP,KACXG,KAAM6O,EAAK7O,KACXF,SAAU+O,EAAK/O,SACfC,QAAS8O,EAAK9O,SAVT4H,aAsBrC,MAAM+C,EAAeqE,IAAqE,IAAD,QACrF,IAAItE,EAAkC,GACtC,MAAM9C,EAAwB,CAC1B7I,MAAOiQ,EAAoBzG,KAAK8D,OAChC5M,MAAK,UAAEuP,EAAoBzG,KAAKoE,cAA3B,aAAEsC,EAAiC5N,gBACxCgM,YAAW,UAAE2B,EAAoBzG,KAAK2G,oBAA3B,aAAEC,EAAuC9N,gBACpD+L,SAAQ,UAAE4B,EAAoBzG,KAAK2G,oBAA3B,aAAEE,EAAuCrQ,MACjDe,KAAMkP,EAAoBzG,KAAKzI,MAYnC,OAVA4K,EAAS5B,KAAKlB,GACd,UAAAoH,EAAoBzG,KAAK6F,eAAzB,SAAkCtE,SAAQuF,IAAY,IAAD,MACjD3E,EAAS5B,KAAK,CACV/J,MAAOsQ,aAAF,EAAEA,EAAShD,OAChB5M,MAAO4P,SAAF,UAAEA,EAAS1C,cAAX,aAAE2C,EAAiBjO,gBACxBgM,YAAagC,SAAF,UAAEA,EAASH,oBAAX,aAAEK,EAAuBlO,gBACpC+L,SAAUiC,SAAF,UAAEA,EAAS1C,cAAX,aAAE6C,EAAiBzQ,MAC3Be,KAAMuP,aAAF,EAAEA,EAASvP,UAGhB4K,GAGEQ,EAAsBvG,IAC/B,OAAQA,GACJ,KAAK1D,EAAAA,EAAAA,KACD,OAAOqI,EAAamG,KACxB,KAAKxO,EAAAA,EAAAA,YACD,OAAOqI,EAAaoG,YACxB,KAAKzO,EAAAA,EAAAA,QACD,OAAOqI,EAAaqG,QACxB,KAAK1O,EAAAA,EAAAA,OACD,OAAOqI,EAAasG,OACxB,QACI,OAAOtG,EAAa1B,QAGnBmE,EAAuBpH,IAChC,OAAQA,GACJ,KAAK2E,EAAaqG,QACd,OAAO1O,EAAAA,EAAAA,QACX,KAAKqI,EAAamG,KACd,OAAOxO,EAAAA,EAAAA,KACX,KAAKqI,EAAaoG,YACd,OAAOzO,EAAAA,EAAAA,YACX,KAAKqI,EAAasG,OACd,OAAO3O,EAAAA,EAAAA,OACX,QACI,OAAOA,EAAAA,EAAAA,O,oHC3UZ,MAAM4J,EAAiBgF,GACX,IAAIC,iBAAgBC,EAAAA,EAAAA,eAAcC,QACnCC,IAAIJ,GAGT3D,EAAiB,WAC1B,MAAM9K,EAAM8O,EAAmB,WAAnBA,EAAAA,WACR9O,EAAI6D,OAAS,EACbkL,QAAQC,aAAa,KAAM,GAAK,IAAGhP,KAEnC+O,QAAQC,aAAa,KAAM,GAAIC,SAASC,WAInCJ,EAAsB,WAC/B,MAAMK,EAA8B,GADkD,2BAAnDC,EAAmD,yBAAnDA,EAAmD,GAAAC,UAAAA,GAEtFD,EAAU1G,SAAQ4G,IACTA,GAAaA,EAASvE,MAASuE,EAAS/L,OAC7C4L,EAAazH,KAAM,GAAE4H,EAASvE,QAAQuE,EAAS/L,YAEnD,MAAMvD,EAAMmP,EAAa9O,KAAK,KAC9B,OAAOL","sources":["webpack://adkaora.com/./src/components/UI/Drawer/Drawer.tsx","webpack://adkaora.com/./src/components/Sections/Search/Search.tsx","webpack://adkaora.com/./src/components/Sections/Shelf/Post.tsx","webpack://adkaora.com/./src/components/Sections/Shelf/Shelf.tsx","webpack://adkaora.com/./src/components/UI/Button/LinkButton.tsx","webpack://adkaora.com/./src/components/UI/Fader/Fader.tsx","webpack://adkaora.com/./src/components/UI/Gap/Gap.tsx","webpack://adkaora.com/./src/components/UI/ScrollButton/ScrollButton.tsx","webpack://adkaora.com/./src/components/UI/Select/Select.tsx","webpack://adkaora.com/./src/components/UI/Switch/Switch.tsx","webpack://adkaora.com/./src/queries/AcademyPostsQuery.tsx","webpack://adkaora.com/./src/queries/BlogPostsQuery.tsx","webpack://adkaora.com/./src/queries/CasePostsQuery.tsx","webpack://adkaora.com/./src/queries/EventPostsQuery.tsx","webpack://adkaora.com/./src/templates/MagazineTemplate.tsx","webpack://adkaora.com/./src/utilities/queryParams.ts"],"sourcesContent":["import {CSSProperties, useEffect, useRef, useState} from \"react\"\n\ninterface DrawerProps extends React.HTMLAttributes<HTMLDivElement> {\n    closed?: boolean | undefined\n}\n\nconst Drawer: React.FC<DrawerProps> = props => {\n    const {closed: input_closed = false, style, children, ...otherProps} = props\n    const [closed, setClosed] = useState(input_closed)\n    const drawerRef = useRef<HTMLDivElement | null>(null)\n\n    const defaultStyle: React.CSSProperties = {\n        overflow: \"hidden\",\n        transitionDuration: \"0.5s\",\n        transitionTimingFunction: \"cubic-bezier(0.645, 0.045, 0.355, 1)\",\n    }\n\n    const closedStyle: React.CSSProperties = {\n        height: \"0px\",\n    }\n\n    const close = () => {\n        if (!drawerRef.current) return\n        drawerRef.current.style.height = drawerRef.current.scrollHeight + \"px\"\n        void drawerRef.current.offsetHeight\n        drawerRef.current.ontransitionend = () => {\n            if (!drawerRef.current) return\n            drawerRef.current.style.height = \"\"\n            drawerRef.current.ontransitionend = null\n            setClosed(true)\n        }\n        drawerRef.current.style.height = \"0px\"\n    }\n\n    const open = () => {\n        if (!drawerRef.current) return\n        drawerRef.current.ontransitionend = () => {\n            if (!drawerRef.current) return\n            drawerRef.current.style.removeProperty(\"height\")\n            drawerRef.current.ontransitionend = null\n            setClosed(false)\n        }\n        drawerRef.current.style.height = drawerRef.current.scrollHeight + \"px\"\n    }\n\n    useEffect(() => {\n        if (input_closed) {\n            close()\n        } else {\n            open()\n        }\n    }, [input_closed])\n\n    return (\n        <div {...otherProps} style={{...defaultStyle, ...(closed ? closedStyle : {}), ...style}} ref={drawerRef}>\n            {children}\n        </div>\n    )\n}\n\nexport default Drawer\n","import {useState} from \"react\"\nimport ChevronUpIcon from \"~/icons/ChevronUpIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport Drawer from \"~/components/UI/Drawer/Drawer\"\nimport \"./Search.css\"\n\ninterface SearchProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n    title?: string | null | undefined\n    startClosed?: boolean | undefined\n}\n\nconst Search: React.FC<SearchProps> = props => {\n    const {className, title, startClosed = false, children, ...otherProps} = props\n    const [closed, setClosed] = useState(startClosed)\n\n    return (\n        <div className={classes(\"search-k5ec\", closed ? \"closed-k5ec\" : \"\", className)} {...otherProps}>\n            <button className=\"button-k5ec\" onClick={e => setClosed(state => !state)}>\n                <ChevronUpIcon className=\"icon-k5ec\" />\n                <span className=\"title-k5ec\">{title}</span>\n            </button>\n            <Drawer closed={closed} className=\"content-k5ec\">\n                {children}\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Search\n","import {GatsbyImage} from \"gatsby-plugin-image\"\nimport {useContext} from \"react\"\nimport GenericLink from \"~/components/UI/GenericLink/GenericLink\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport {useLabelsQuery} from \"~/queries/LabelsQuery\"\nimport {PostItem, PostTypes} from \"~/types/PostItem\"\nimport {classes} from \"~/utilities/classes\"\nimport LinkButton from \"../../UI/Button/LinkButton\"\n\nimport \"./Post.css\"\n\nexport interface PostProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {}\n\ntype PostStyle = 1 | 2 | 3 | 4\n\nconst Post: React.VFC<PostProps & PostItem> = props => {\n    const {\n        date,\n        image,\n        title,\n        category,\n        tags,\n        description_short,\n        pdf,\n        slug,\n        customer,\n        project,\n        className,\n        children,\n        type,\n        ...otherProps\n    } = props\n    const labels = useLabelsQuery()\n    const i18n = useContext(I18nContext)\n\n    let formattedDate\n    if (date) {\n        formattedDate = new Intl.DateTimeFormat(i18n.language, {\n            day: \"numeric\",\n            month: \"long\",\n            year: \"numeric\",\n        }).format(new Date(date))\n    }\n\n    let postStyle: PostStyle = 1\n\n    switch (type) {\n        case PostTypes.blog:\n            postStyle = 1\n            break\n        case PostTypes.caseHistory:\n            postStyle = 2\n            break\n        case PostTypes.academy:\n            postStyle = 1\n            break\n        case PostTypes.events:\n            postStyle = 1\n            break\n        case PostTypes.analysis:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n        case PostTypes.video:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n        case PostTypes.onDemand:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n        case PostTypes.podcast:\n            if (pdf) {\n                postStyle = 4\n            } else {\n                postStyle = 3\n            }\n            break\n    }\n\n    return (\n        <div className={classes(\"post-n3j4\", className)} {...otherProps}>\n            <GenericLink {...(pdf ? {to: pdf?.url} : {to: `/${i18n.language}/${type}/${slug}/`})} className=\"left-n3j4\">\n                {image?.gatsbyImageData && image.title && (\n                    <GatsbyImage alt={image.title} image={image?.gatsbyImageData} className=\"image-n3j4\" />\n                )}\n                {(postStyle === 1 || postStyle === 2) && (\n                    <div className=\"overlay-n3j4\">\n                        {formattedDate && postStyle === 1 && <span className=\"date-n3j4\">{formattedDate}</span>}\n                        {postStyle === 1 && <h5 className=\"title-n3j4\">{title}</h5>}\n                        {postStyle !== 1 && <h4 className=\"title-n3j4\">{title}</h4>}\n                    </div>\n                )}\n            </GenericLink>\n            <div className=\"right-n3j4\">\n                <div className=\"lip-n3j4\" />\n                {(postStyle === 3 || postStyle === 4) && <div className=\"text-n3j4\">{title}</div>}\n                {postStyle === 1 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.category}: `}\n                        <span className=\"green-n3j4\">{category}</span>\n                    </div>\n                )}\n                {postStyle === 1 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.tag}: `}\n                        <span className=\"green-n3j4\">{tags?.join(\", \")}</span>\n                    </div>\n                )}\n                {postStyle === 2 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.customer}: `}\n                        <span className=\"green-n3j4\">{customer}</span>\n                    </div>\n                )}\n                {postStyle === 2 && (\n                    <div className=\"text-n3j4\">\n                        {`${labels.project}: `}\n                        <span className=\"green-n3j4\">{project}</span>\n                    </div>\n                )}\n                <div className=\"text-n3j4\">{description_short}</div>\n                <div className=\"cta-n3j4\">\n                    {postStyle !== 4 && (\n                        <LinkButton to={`/${i18n.language}/${type}/${slug}/`}>{labels.read}</LinkButton>\n                    )}\n                    {postStyle === 4 && (\n                        <LinkButton to={pdf?.url} download>\n                            {labels.downloadPdf}\n                        </LinkButton>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Post\n","import {Children, Fragment, useEffect, useRef, useState} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {useLabelsQuery} from \"~/queries/LabelsQuery\"\nimport {PostItem} from \"~/types/PostItem\"\nimport {classes} from \"~/utilities/classes\"\nimport Button from \"~/components/UI/Button/Button\"\nimport Select, {Option} from \"~/components/UI/Select/Select\"\nimport {PostProps} from \"./Post\"\nimport \"./Shelf.css\"\n\ninterface ShelfProps extends React.HTMLAttributes<HTMLDivElement> {\n    label?: string | undefined | null\n    withSorting?: boolean | undefined\n    withShowMore?: boolean | undefined\n    show?: number | undefined\n    loading?: boolean | undefined\n    sortyBy?: ShelfSortCategories | string | undefined | null\n    onSortSelect?: ((value: ShelfSortCategories | string) => void) | undefined | null\n}\n\nconst Shelf: React.FC<ShelfProps> = props => {\n    const {\n        className,\n        title,\n        loading,\n        label,\n        withSorting = false,\n        withShowMore = false,\n        sortyBy: sort,\n        onSortSelect,\n        show = 5,\n        children,\n        ...otherProps\n    } = props\n    const [showing, setShowing] = useState(show)\n    const [sortBy, setSortBy] = useState<ShelfSortCategories | string>(sort ? sort : ShelfSortCategories.DateC)\n    const [items, setItems] = useState<Array<React.ReactElement<PostProps>>>()\n    const [isLoading, setLoading] = useState<boolean>(false)\n    const timeoutRef = useRef<NodeJS.Timeout | undefined>()\n    const labels = useLabelsQuery()\n\n    const onSelectChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setSortBy(event.currentTarget.value)\n        if (onSortSelect) onSortSelect(event.currentTarget.value)\n    }\n\n    const updateItems = async () => {\n        let itemsToShow: Array<React.ReactElement<PostProps & PostItem>> = Children.toArray(children) as Array<\n            React.ReactElement<PostProps>\n        >\n\n        switch (sortBy) {\n            case ShelfSortCategories.CategoryC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.category) return 1\n                    if (!b.props.category) return -1\n                    return a.props.category.localeCompare(b.props.category)\n                })\n                break\n            case ShelfSortCategories.CategoryD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.category) return -1\n                    if (!b.props.category) return 1\n                    return b.props.category.localeCompare(a.props.category)\n                })\n                break\n            case ShelfSortCategories.CustomerC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.customer) return 1\n                    if (!b.props.customer) return -1\n                    return a.props.customer.localeCompare(b.props.customer)\n                })\n                break\n            case ShelfSortCategories.CustomerD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.customer) return -1\n                    if (!b.props.customer) return 1\n                    return b.props.customer.localeCompare(a.props.customer)\n                })\n                break\n            case ShelfSortCategories.DateC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.date) return 1\n                    if (!b.props.date) return -1\n                    if (a.props.date > b.props.date) return -1\n                    if (b.props.date > a.props.date) return 1\n                    return 0\n                })\n                break\n            case ShelfSortCategories.DateD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.date) return -1\n                    if (!b.props.date) return 1\n                    if (a.props.date > b.props.date) return 1\n                    if (b.props.date > a.props.date) return -1\n                    return 0\n                })\n                break\n            case ShelfSortCategories.TitleC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.title) return 1\n                    if (!b.props.title) return -1\n                    return a.props.title.localeCompare(b.props.title)\n                })\n                break\n            case ShelfSortCategories.TitleD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.title) return -1\n                    if (!b.props.title) return 1\n                    return b.props.title.localeCompare(a.props.title)\n                })\n                break\n            case ShelfSortCategories.TypeC:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.type) return 1\n                    if (!b.props.type) return -1\n                    return a.props.type.localeCompare(b.props.type)\n                })\n                break\n            case ShelfSortCategories.TypeD:\n                itemsToShow.sort((a, b) => {\n                    if (!a.props.type) return -1\n                    if (!b.props.type) return 1\n                    return b.props.type.localeCompare(a.props.type)\n                })\n                break\n        }\n\n        setItems(itemsToShow.slice(0, showing))\n    }\n\n    useEffect(() => {\n        setShowing(show)\n        if (loading || sortBy) {\n            setLoading(true)\n            updateItems().then(result => (timeoutRef.current = setTimeout(() => setLoading(false), 0)))\n        }\n        return () => {\n            if (timeoutRef.current) clearTimeout(timeoutRef.current)\n        }\n    }, [loading, sortBy])\n\n    useEffect(() => {\n        updateItems()\n    }, [showing])\n\n    const onShowMoreClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setShowing(state => state + show)\n    }\n\n    return (\n        <div className={classes(\"shelf-ym83\", className)} {...otherProps}>\n            {(withSorting || label) && (\n                <header className=\"header-ym83\">\n                    <span className=\"label-ym83\">{label}</span>\n                    {withSorting && (\n                        <span className=\"sort-ym83\">\n                            <label className=\"sort-label-ym83\" htmlFor=\"select-ym83\">\n                                {labels.sortBy}\n                            </label>\n\n                            {labels.ascending &&\n                                labels.descending &&\n                                labels.category &&\n                                labels.customer &&\n                                labels.date &&\n                                labels.title &&\n                                labels.type && (\n                                    <Select\n                                        id=\"select-ym83\"\n                                        className=\"select-ym83\"\n                                        value={sortBy}\n                                        onChange={onSelectChangeHandler}\n                                    >\n                                        <Option value={ShelfSortCategories.CategoryC}>\n                                            {`${labels.category} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.CategoryD}>\n                                            {`${labels.category} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.CustomerC}>\n                                            {`${labels.customer} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.CustomerD}>\n                                            {`${labels.customer} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.DateC}>\n                                            {`${labels.date} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.DateD}>\n                                            {`${labels.date} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TitleC}>\n                                            {`${labels.title} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TitleD}>\n                                            {`${labels.title} ${labels.descending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TypeC}>\n                                            {`${labels.type} ${labels.ascending}`}\n                                        </Option>\n                                        <Option value={ShelfSortCategories.TypeD}>\n                                            {`${labels.type} ${labels.descending}`}\n                                        </Option>\n                                    </Select>\n                                )}\n                        </span>\n                    )}\n                </header>\n            )}\n            {items && (\n                <Fragment>\n                    {items.length > 0 && <div className=\"items-ym83\">{items}</div>}\n                    {items.length < 1 && (\n                        <div className=\"no-result-ym83\">\n                            <p>{labels.noMatchingResult}</p>\n                        </div>\n                    )}\n                </Fragment>\n            )}\n\n            {withShowMore && showing < Children.count(children) && (\n                <footer className=\"shelf-footer-ym83\">\n                    <Button\n                        className=\"show-more-button-ym83\"\n                        onClick={onShowMoreClickHandler}\n                        type=\"button\"\n                        color=\"transparent\"\n                    >\n                        <ChevronDownIcon className=\"show-more-icon-ym83\" />\n                        <span className=\"show-more-text-ym83\">{labels.showMore}</span>\n                    </Button>\n                </footer>\n            )}\n        </div>\n    )\n}\n\nexport default Shelf\n\nexport enum ShelfSortCategories {\n    CategoryC = \"categoryC\",\n    CategoryD = \"categoryD\",\n    CustomerC = \"customerC\",\n    CustomerD = \"customerD\",\n    DateC = \"dateC\",\n    DateD = \"dateD\",\n    TitleC = \"titleC\",\n    TitleD = \"titleD\",\n    TypeC = \"typeC\",\n    TypeD = \"typeD\",\n}\n","import {navigate} from \"@reach/router\"\nimport {GatsbyLinkProps, Link} from \"gatsby\"\nimport {useContext} from \"react\"\nimport Ripple, {RippleColor} from \"~/components/UI/Ripple/Ripple\"\nimport TransitionContext from \"~/contexts/TransitionContext\"\nimport {classes} from \"~/utilities/classes\"\nimport NavBarContext from \"../../../contexts/NavBarContext\"\nimport {ButtonColor} from \"./Button\"\n\nimport \"./Button.css\"\n\nexport interface LinkButtonProps extends Omit<GatsbyLinkProps<any>, \"to\"> {\n    color?: ButtonColor\n    withoutTransition?: boolean | undefined\n    to?: string | null | undefined\n}\n\nconst LinkButton: React.FC<LinkButtonProps> = props => {\n    const {\n        color = \"green\",\n        to = \"\",\n        children,\n        download,\n        withoutTransition,\n        onClick,\n        className,\n        ref,\n        ...otherProps\n    } = props\n    const internal = /^\\/(?!\\/)/.test(to ? to : \"\")\n    const transitionContenxt = useContext(TransitionContext)\n    const navbarContext = useContext(NavBarContext)\n\n    let rippleColor: RippleColor = \"light-green\"\n    switch (color) {\n        case \"green\":\n            rippleColor = \"light-green\"\n            break\n        case \"white\":\n            rippleColor = \"green\"\n            break\n        case \"blue\":\n            rippleColor = \"blue\"\n            break\n        case \"gray\":\n            rippleColor = \"gray\"\n            break\n        case \"red\":\n            rippleColor = \"red\"\n            break\n    }\n\n    const goTo = (url: string) => {\n        if (!url) return\n        if (withoutTransition) {\n            navigate(url)\n            return\n        }\n        transitionContenxt.navigateTo(url)\n    }\n\n    const onClickHandler = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        event.preventDefault()\n        navbarContext.hide(1000)\n        if (onClick) onClick(event)\n        goTo(event.currentTarget.href)\n    }\n\n    const button =\n        internal && to ? (\n            <Link\n                className={classes(\"button-8p4x\", `${color}-8p4x`, className)}\n                to={to}\n                download={download}\n                target=\"_self\"\n                onClick={onClickHandler}\n                {...otherProps}\n            >\n                {children}\n            </Link>\n        ) : (\n            <a\n                href={to ?? undefined}\n                className={classes(\"button-8p4x\", `${color}-8p4x`, className)}\n                download={download}\n                target={download ? \"_self\" : \"_blank\"}\n                {...otherProps}\n                ref={ref}\n            >\n                {children}\n            </a>\n        )\n\n    return <Ripple color={rippleColor}>{button}</Ripple>\n}\n\nexport default LinkButton\n","import {Children, useCallback, useRef} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Fader.css\"\n\ninterface FaderComponents {\n    Slide: React.FC\n}\n\ninterface FaderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\" | \"onSelect\"> {\n    children: React.ReactElement<React.FC> | Array<React.ReactElement<React.FC>>\n    selected: number\n    onSelect?: undefined | ((value: number) => void)\n    slideClass?: undefined | string\n}\n\nconst Fader: React.FC<FaderProps> & FaderComponents = (props: FaderProps) => {\n    const {selected, onSelect, className, slideClass, children, ...otherProps} = props\n    const touchStartRef = useRef<undefined | number>()\n\n    const onTouchStart = useCallback((event: React.TouchEvent<HTMLDivElement>) => {\n        touchStartRef.current = event.touches[0]?.screenX\n    }, [])\n\n    const onTouchMove = useCallback((event: React.TouchEvent<HTMLDivElement>) => {\n        const currentX = event.touches[0]?.screenX\n\n        if (false\n            || typeof currentX === 'undefined'\n            || typeof touchStartRef.current === 'undefined'\n        ) {\n            return\n        }\n\n        const movesLeft = currentX > touchStartRef.current + 50\n        const movesRight = currentX < touchStartRef.current - 50\n\n        if (movesLeft) {\n            onSelect?.(Math.max(selected - 1, 0))\n            touchStartRef.current = undefined\n            return\n        }\n        if (movesRight) {\n            onSelect?.(Math.min(selected + 1, Children.count(children) - 1))\n            touchStartRef.current = undefined\n            return\n        }\n    }, [selected])\n\n    return (\n        <div\n            {...otherProps}\n            className={classes(\"fader-kpz3\", className)}\n        >\n            {Children.map(children, (child, index) =>\n                <div\n                    key={index}\n                    className={classes(\"slide-kpz3\", slideClass, {\n                        \"selected-kpz3\": selected === index,\n                    })}\n                    onTouchStart={onTouchStart}\n                    onTouchMove={onTouchMove}\n                >\n                    {child}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Fader\n\nconst Slide: React.FC = props => <>{props.children}</>\n\nFader.Slide = Slide\n","import {HTMLAttributes} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Gap.css\"\n\ninterface GapProps extends React.HTMLAttributes<HTMLDivElement> {\n    centered?: boolean | undefined\n}\n\nconst Gap: React.FC<GapProps> = props => {\n    const {className, centered = false, ...otherProps} = props\n\n    return <div className={classes(\"gap-q2z3\", centered ? \"centered-q2z3\" : \"\", className)} {...otherProps} />\n}\n\nexport default Gap\n","import {HTMLAttributes} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./ScrollButton.css\"\n\ninterface ScrollButtonProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ScrollButton = (props: ScrollButtonProps) => {\n    const {onClick, className, ...otherProps} = props\n    return (\n        <div className={classes(\"scroller-r94f\", className)} {...otherProps}>\n            <div className=\"mouse-r94f\">\n                <div className=\"scroll-r94f\"></div>\n            </div>\n            <ChevronDownIcon className=\"icon-r94f\" />\n        </div>\n    )\n}\n\nexport default ScrollButton\n","import {forwardRef, useState} from \"react\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Select.css\"\n\ninterface SelectProps extends Omit<React.SelectHTMLAttributes<HTMLSelectElement>, \"placeholder\"> {\n    placeholder?: string | undefined\n    containerProps?: React.HTMLAttributes<HTMLDivElement> | undefined\n    invalid?: boolean\n}\n\nconst Select: React.FC<SelectProps> = forwardRef<HTMLSelectElement, SelectProps>((props, ref): JSX.Element => {\n    const {className, invalid, id, onChange, placeholder = \" - \", containerProps, children, ...otherProps} = props\n    const [selected, setSelected] = useState(\"undefined\")\n\n    const onSelectChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        if (onChange) onChange(event)\n        setSelected(event.currentTarget.value)\n    }\n\n    return (\n        <div\n            className={classes(\n                \"select-container-fn79\",\n                selected === \"undefined\" ? \"gray-x8np\" : \"\",\n                invalid ? \"invalid-fn79\" : \"\",\n                className,\n            )}\n            {...containerProps}\n        >\n            <select id={id} className=\"select-fn79\" onChange={onSelectChangeHandler} ref={ref} {...otherProps}>\n                <option value=\"undefined\" key=\"-1\">\n                    {placeholder}\n                </option>\n                {children}\n            </select>\n            <div className=\"icon-container-fn79\">\n                <ChevronDownIcon className=\"icon-fn79\" />\n            </div>\n        </div>\n    )\n})\n\nexport default Select\n\ninterface OptionProps extends React.OptionHTMLAttributes<HTMLOptionElement> {\n    children: string\n}\n\nexport const Option: React.FC<OptionProps> = props => {\n    const {children, value, ...otherProps} = props\n    return (\n        <option value={value ? value : children} {...otherProps}>\n            {children}\n        </option>\n    )\n}\n","import {useEffect, useState} from \"react\"\nimport Ripple from \"~/components/UI/Ripple/Ripple\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Switch.css\"\n\ninterface SwitchProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"select\" | \"onSelect\"> {\n    selected?: boolean | undefined\n    onSelect?: ((event: React.MouseEvent<HTMLButtonElement>) => void) | undefined\n}\n\nconst Switch: React.FC<SwitchProps> = props => {\n    const {className, selected = false, onSelect, children, ...otherProps} = props\n    const [_selected, _setSelected] = useState(selected)\n\n    useEffect(() => {\n        _setSelected(selected)\n    }, [selected])\n\n    const onButtonClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (onSelect) onSelect(event)\n    }\n\n    return (\n        <Ripple>\n            <button\n                className={classes(\"switch-n8h6\", _selected ? \"selected-n8h6\" : \"\", className)}\n                onClick={onButtonClickHandler}\n                {...otherProps}\n            >\n                {children}\n            </button>\n        </Ripple>\n    )\n}\n\nexport default Switch\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useAcademyPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.AcademyPostsQuery = useStaticQuery(graphql`\n        query AcademyPosts {\n            allContentfulContenutoMagazine(filter: {type: {eq: \"academy\"}}) {\n                nodes {\n                    date\n                    title\n                    category\n                    type\n                    tags\n                    description_short\n                    slug\n                    image {\n                        url\n                        gatsbyImageData(\n                            layout: CONSTRAINED\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: DOMINANT_COLOR\n                            quality: 90\n                        )\n                        title\n                    }\n                    node_locale\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoMagazine.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useBlogPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.BlogPostsQuery = useStaticQuery(graphql`\n        query BlogPosts {\n            allContentfulContenutoMagazine(filter: {type: {eq: \"blog\"}}) {\n                nodes {\n                    date\n                    title\n                    category\n                    type\n                    tags\n                    description_short\n                    slug\n                    image {\n                        url\n                        gatsbyImageData(\n                            layout: CONSTRAINED\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: DOMINANT_COLOR\n                            quality: 90\n                        )\n                        title\n                    }\n                    node_locale\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoMagazine.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useCasePostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.CasePostsQuery = useStaticQuery(graphql`\n        query CasePosts {\n            allContentfulContenutoCaseHistory {\n                nodes {\n                    customer\n                    slug\n                    type\n                    image {\n                        url\n                        gatsbyImageData(\n                            layout: CONSTRAINED\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: DOMINANT_COLOR\n                            quality: 90\n                        )\n                        title\n                    }\n                    title\n                    description_short\n                    project\n                    node_locale\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoCaseHistory.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {graphql, useStaticQuery} from \"gatsby\"\nimport {useContext} from \"react\"\nimport I18nContext from \"~/contexts/I18nContext\"\n\nexport const useEventPostsQuery = () => {\n    const i18n = useContext(I18nContext)\n\n    const data: Queries.EventPostsQuery = useStaticQuery(graphql`\n        query EventPosts {\n            allContentfulContenutoMagazine(filter: {type: {eq: \"events\"}}) {\n                nodes {\n                    date\n                    title\n                    category\n                    type\n                    tags\n                    description_short\n                    slug\n                    image {\n                        url\n                        gatsbyImageData(\n                            layout: CONSTRAINED\n                            formats: [AUTO, AVIF, WEBP]\n                            placeholder: DOMINANT_COLOR\n                            quality: 90\n                        )\n                        title\n                    }\n                    node_locale\n                }\n            }\n        }\n    `)\n\n    const localizedData = []\n    for (const post of data.allContentfulContenutoMagazine.nodes) {\n        if (post.node_locale === i18n.language) {\n            localizedData.push(post)\n        }\n    }\n    return localizedData\n}\n","import {PageProps} from \"gatsby\"\nimport {IGatsbyImageData} from \"gatsby-plugin-image\"\nimport {GatsbySeo} from \"gatsby-plugin-next-seo\"\nimport {Fragment, useContext, useLayoutEffect, useRef, useState} from \"react\"\nimport HeroSection from \"~/components/Sections/HeroSection/HeroSection\"\nimport Search from \"~/components/Sections/Search/Search\"\nimport Post from \"~/components/Sections/Shelf/Post\"\nimport Shelf, {ShelfSortCategories} from \"~/components/Sections/Shelf/Shelf\"\nimport Button from \"~/components/UI/Button/Button\"\nimport Fader from \"~/components/UI/Fader/Fader\"\nimport Gap from \"~/components/UI/Gap/Gap\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport MultiStyleText from \"~/components/UI/MultiStyleText/MultiStyleText\"\nimport ScrollButton from \"~/components/UI/ScrollButton/ScrollButton\"\nimport SectionContainer from \"~/components/UI/SectionContainer/SectionContainer\"\nimport Switch from \"~/components/UI/Switch/Switch\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport {useAcademyPostsQuery} from \"~/queries/AcademyPostsQuery\"\nimport {useBlogPostsQuery} from \"~/queries/BlogPostsQuery\"\nimport {useCasePostsQuery} from \"~/queries/CasePostsQuery\"\nimport {useEventPostsQuery} from \"~/queries/EventPostsQuery\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport {PostItem, PostTypes} from \"~/types/PostItem\"\nimport {getQueryParam, setQueryParams} from \"~/utilities/queryParams\"\n\ninterface MagazinePageProps extends PageProps<any, MagazinePageContext> {}\n\nexport const MagazineSectionParam = \"section\"\nexport const MagazineSearchParam = \"search\"\nexport const MagazineSortParam = \"sort\"\n\nexport enum SectionIndex {\n    index = 0,\n    blog = 1,\n    caseHistory = 2,\n    academy = 3,\n    events = 4,\n}\n\ninterface SectionContent {\n    title: string | undefined | null\n    image: IGatsbyImageData | undefined | null\n    mobileImage: IGatsbyImageData | undefined | null\n    imageAlt: string | undefined | null\n    slug: string | undefined | null\n}\n\nconst MagazinePage: React.FC<MagazinePageProps> = props => {\n    const magazinePageData = props.pageContext.data\n    const links = useLinksQuery()\n    const i18n = useContext(I18nContext)\n\n    const getFilteredItems = () => {\n        let posts: Array<PostItem> = []\n        allPosts.forEach(post => {\n            if (selectedSectionName !== PostTypes.all && post.type !== selectedSectionName) return\n            if (inputTextValue !== \"\") {\n                let foundInTitle = false\n                let foundInDescription = false\n                let foundInCategory = false\n                let foundInCustomer = false\n                let foundInProject = false\n                let foundInTags = false\n\n                const lowCaseValueToFind = inputTextValue.toLowerCase()\n                if (post.title && post.title.toLowerCase().indexOf(lowCaseValueToFind) > -1) foundInTitle = true\n                if (post.description_short && post.description_short.toLowerCase().indexOf(lowCaseValueToFind) > -1)\n                    foundInDescription = true\n                if (post.category && post.category.toLowerCase().indexOf(lowCaseValueToFind) > -1)\n                    foundInCategory = true\n                if (post.customer && post.customer.toLowerCase().indexOf(lowCaseValueToFind) > -1)\n                    foundInCustomer = true\n                if (post.project && post.project.toLowerCase().indexOf(lowCaseValueToFind) > -1) foundInProject = true\n                if (post.tags) {\n                    post.tags.forEach(tag => {\n                        if (tag && tag.toLowerCase().indexOf(lowCaseValueToFind) > -1) foundInTags = true\n                    })\n                }\n\n                if (\n                    !foundInTitle &&\n                    !foundInCategory &&\n                    !foundInDescription &&\n                    !foundInTags &&\n                    !foundInCustomer &&\n                    !foundInProject\n                )\n                    return\n            }\n\n            posts.push(post)\n        })\n        return posts\n    }\n\n    const asyncFIlterItems = async () => {\n        return getFilteredItems()\n    }\n\n    const allPosts: Array<PostItem> = [\n        ...useBlogPostsQuery(),\n        ...useCasePostsQuery(),\n        ...useAcademyPostsQuery(),\n        ...useEventPostsQuery(),\n    ] as Array<PostItem>\n\n    const sections = getSections(props.pageContext)\n    const sectionParam = getQueryParam(MagazineSectionParam)\n    const searchParam = getQueryParam(MagazineSearchParam)\n    const sortParam = getQueryParam(MagazineSortParam)\n\n    const [selectedSectionIndex, setSelectedSectionIndex] = useState<SectionIndex | number>(\n        sectionNameToIndex(sectionParam),\n    )\n    const [selectedSectionName, setSelectedSectionName] = useState<PostTypes | string>(sectionParam ? sectionParam : \"\")\n\n    const [selectedSort, setSelectedSort] = useState<ShelfSortCategories | string>(sortParam ? sortParam : \"\")\n    const [inputTextValue, setInputTextValue] = useState(searchParam ? searchParam : \"\")\n\n    const [shelfItems, setShelfItems] = useState<Array<PostItem>>(getFilteredItems())\n    const [isLoading, setLoading] = useState<boolean>(false)\n    const searchRef = useRef<HTMLElement | null>(null)\n\n    useLayoutEffect(() => {\n        if (!sectionParam) return\n        setSelectedSectionName(sectionParam)\n        setSelectedSectionIndex(sectionNameToIndex(sectionParam))\n    }, [sectionParam])\n\n    useLayoutEffect(() => {\n        updateShelf()\n    }, [selectedSectionName, selectedSort])\n\n    const onSwitchClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const selectedType = Number(event.currentTarget.value)\n        setSelectedSectionIndex(selectedType)\n        setSelectedSectionName(sectionsIndexToname(selectedType))\n    }\n\n    const onInputChangeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInputTextValue(event.currentTarget.value)\n    }\n\n    const onSortChange = (value: ShelfSortCategories | string) => {\n        setSelectedSort(value)\n    }\n\n    const updateShelf = () => {\n        updateUrl()\n        setLoading(true)\n        asyncFIlterItems()\n            .then(posts => {\n                setShelfItems(posts)\n            })\n            .then(() => {\n                setLoading(false)\n            })\n    }\n\n    const onFormSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        updateShelf()\n    }\n\n    const updateUrl = () => {\n        setQueryParams(\n            {name: MagazineSectionParam, value: selectedSectionName},\n            {name: MagazineSearchParam, value: inputTextValue},\n            {name: MagazineSortParam, value: selectedSort},\n        )\n    }\n\n    return (\n        <Fragment>\n            <GatsbySeo\n                title={magazinePageData.titolo ? magazinePageData.titolo : \"\"}\n                canonical={`${process.env.SITE_URL}${links.magazine.url}`}\n                language={i18n.language}\n                openGraph={{\n                    url: `${process.env.SITE_URL}${links.magazine.url}`,\n                    title: `${magazinePageData.titolo}`,\n                    locale: i18n.language,\n                    images: [\n                        {\n                            url: `${magazinePageData.header?.url}`,\n                            width: Number(magazinePageData.header?.width),\n                            height: Number(magazinePageData.header?.height),\n                            alt: `${magazinePageData.header?.title}`,\n                        },\n                    ],\n                }}\n            />\n            <Fader selected={selectedSectionIndex}>\n                {sections.map((section, index) => {\n                    return (\n                        <Fader.Slide key={index}>\n                            <HeroSection\n                                image={section?.image}\n                                imageAlt={section?.imageAlt}\n                                mobileImage={section?.mobileImage}\n                            >\n                                <MultiStyleText\n                                    flex\n                                    className1=\"hero-title-part-1-d2bh\"\n                                    className2=\"hero-title-part-2-d2bh\"\n                                >\n                                    {section.title}\n                                </MultiStyleText>\n                            </HeroSection>\n                        </Fader.Slide>\n                    )\n                })}\n            </Fader>\n            <SectionContainer tabbed marginPost customTab={<ScrollButton />} ref={searchRef}>\n                <Search title={magazinePageData.titolo}>\n                    <Gap centered style={{marginTop: \"var(--gutter-4)\"}}>\n                        <Switch\n                            key={magazinePageData.allLabel}\n                            selected={selectedSectionIndex === SectionIndex.index}\n                            onSelect={onSwitchClickHandler}\n                            value={SectionIndex.index}\n                        >\n                            {magazinePageData.allLabel}\n                        </Switch>\n                        {magazinePageData.sezioni?.map((section, index) => {\n                            const fixedIndex = index + 1\n                            return (\n                                <Switch\n                                    key={section?.slug}\n                                    selected={selectedSectionIndex === fixedIndex}\n                                    onSelect={onSwitchClickHandler}\n                                    value={fixedIndex}\n                                >\n                                    {section?.titolo}\n                                </Switch>\n                            )\n                        })}\n                    </Gap>\n                    <form onSubmit={onFormSubmitHandler}>\n                        <Gap centered>\n                            <InputText\n                                {...(magazinePageData.searchInputPlaceholder\n                                    ? {placeholder: magazinePageData.searchInputPlaceholder}\n                                    : {})}\n                                onChange={onInputChangeValue}\n                                value={inputTextValue}\n                                style={{\n                                    width: \"min(30vw,500px)\",\n                                    minWidth: \"240px\",\n                                    fontStyle: \"italic\",\n                                }}\n                            />\n                            <Button color=\"green\" type=\"submit\">\n                                {magazinePageData.searchButtonLabel}\n                            </Button>\n                        </Gap>\n                    </form>\n                </Search>\n            </SectionContainer>\n            <SectionContainer>\n                <Shelf withShowMore withSorting loading={isLoading} sortyBy={sortParam} onSortSelect={onSortChange}>\n                    {shelfItems.map((item, index) => {\n                        return (\n                            <Post\n                                key={index}\n                                date={item.date}\n                                title={item.title}\n                                image={item.image}\n                                category={item.category}\n                                tags={item.tags}\n                                description_short={item.description_short}\n                                slug={item.slug}\n                                type={item.type}\n                                customer={item.customer}\n                                project={item.project}\n                            />\n                        )\n                    })}\n                </Shelf>\n            </SectionContainer>\n        </Fragment>\n    )\n}\n\nexport default MagazinePage\n\nconst getSections = (magazinePageContext: MagazinePageContext): Array<SectionContent> => {\n    let sections: Array<SectionContent> = []\n    const index: SectionContent = {\n        title: magazinePageContext.data.titolo,\n        image: magazinePageContext.data.header?.gatsbyImageData,\n        mobileImage: magazinePageContext.data.headerMobile?.gatsbyImageData,\n        imageAlt: magazinePageContext.data.headerMobile?.title,\n        slug: magazinePageContext.data.slug,\n    }\n    sections.push(index)\n    magazinePageContext.data.sezioni?.forEach(sezione => {\n        sections.push({\n            title: sezione?.titolo,\n            image: sezione?.header?.gatsbyImageData,\n            mobileImage: sezione?.headerMobile?.gatsbyImageData,\n            imageAlt: sezione?.header?.title,\n            slug: sezione?.slug,\n        })\n    })\n    return sections\n}\n\nexport const sectionNameToIndex = (value: string | undefined | null): number => {\n    switch (value) {\n        case PostTypes.blog:\n            return SectionIndex.blog\n        case PostTypes.caseHistory:\n            return SectionIndex.caseHistory\n        case PostTypes.academy:\n            return SectionIndex.academy\n        case PostTypes.events:\n            return SectionIndex.events\n        default:\n            return SectionIndex.index\n    }\n}\nexport const sectionsIndexToname = (value: number | undefined | null): string => {\n    switch (value) {\n        case SectionIndex.academy:\n            return PostTypes.academy\n        case SectionIndex.blog:\n            return PostTypes.blog\n        case SectionIndex.caseHistory:\n            return PostTypes.caseHistory\n        case SectionIndex.events:\n            return PostTypes.events\n        default:\n            return PostTypes.all\n    }\n}\n\ninterface MagazinePageContext {\n    data: {\n        id: string\n        titolo?: string | null\n        slug?: string | null\n        node_locale: string\n        allLabel?: string | null\n        searchButtonLabel?: string | null\n        searchInputPlaceholder?: string | null\n        header?: {\n            title?: string | null\n            height?: number | null\n            width?: number | null\n            url?: string | null\n            gatsbyImageData?: any | null\n        } | null\n        headerMobile?: {\n            title?: string | null\n            height?: number | null\n            width?: number | null\n            url?: string | null\n            gatsbyImageData?: any | null\n        } | null\n        sezioni?: Array<{\n            titolo?: string | null\n            slug?: string | null\n            header?: {\n                title?: string | null\n                height?: number | null\n                width?: number | null\n                url?: string | null\n                gatsbyImageData?: any | null\n            } | null\n            headerMobile?: {\n                title?: string | null\n                height?: number | null\n                width?: number | null\n                url?: string | null\n                gatsbyImageData?: any | null\n            } | null\n        } | null> | null\n    }\n}\n","import {useLocation} from \"@reach/router\"\n\nexport const getQueryParam = (paramName: string) => {\n    const search = new URLSearchParams(useLocation().search)\n    return search.get(paramName)\n}\n\nexport const setQueryParams = (...urlParams: Array<URLParam | undefined>) => {\n    const url = generateQueryParams(...urlParams)\n    if (url.length > 0) {\n        history.replaceState(null, \"\", `?${url}`)\n    } else {\n        history.replaceState(null, \"\", location.pathname)\n    }\n}\n\nexport const generateQueryParams = (...urlParams: Array<URLParam | undefined>): string => {\n    const queryStrings: Array<string> = []\n    urlParams.forEach(urlParam => {\n        if (!urlParam || !urlParam.name || !urlParam.value) return\n        queryStrings.push(`${urlParam.name}=${urlParam.value}`)\n    })\n    const url = queryStrings.join(\"&\")\n    return url\n}\n\nexport interface URLParam {\n    name: string | undefined\n    value: string | undefined\n}\n"],"names":["props","closed","input_closed","style","children","otherProps","setClosed","useState","drawerRef","useRef","useEffect","current","height","scrollHeight","offsetHeight","ontransitionend","removeProperty","_jsx","overflow","transitionDuration","transitionTimingFunction","ref","className","title","startClosed","_jsxs","classes","onClick","e","state","ChevronUpIcon","Drawer","date","image","category","tags","description_short","pdf","slug","customer","project","type","labels","useLabelsQuery","i18n","useContext","I18nContext","formattedDate","Intl","DateTimeFormat","language","day","month","year","format","Date","postStyle","PostTypes","GenericLink","to","url","gatsbyImageData","GatsbyImage","alt","tag","join","LinkButton","read","download","downloadPdf","ShelfSortCategories","loading","label","withSorting","withShowMore","sortyBy","sort","onSortSelect","show","showing","setShowing","sortBy","setSortBy","DateC","items","setItems","isLoading","setLoading","timeoutRef","updateItems","async","itemsToShow","Children","CategoryC","a","b","localeCompare","CategoryD","CustomerC","CustomerD","DateD","TitleC","TitleD","TypeC","TypeD","slice","then","result","setTimeout","clearTimeout","htmlFor","ascending","descending","Select","id","value","onChange","event","currentTarget","Option","Fragment","length","noMatchingResult","Button","color","ChevronDownIcon","showMore","withoutTransition","internal","test","transitionContenxt","TransitionContext","navbarContext","NavBarContext","rippleColor","button","Link","target","preventDefault","hide","href","navigate","navigateTo","undefined","Ripple","Fader","selected","onSelect","slideClass","touchStartRef","onTouchStart","useCallback","touches","_event$touches$","screenX","onTouchMove","currentX","_event$touches$2","movesLeft","movesRight","Math","max","min","child","index","Slide","centered","forwardRef","invalid","placeholder","containerProps","setSelected","_selected","_setSelected","useAcademyPostsQuery","data","useStaticQuery","localizedData","post","allContentfulContenutoMagazine","nodes","node_locale","push","useBlogPostsQuery","useCasePostsQuery","allContentfulContenutoCaseHistory","useEventPostsQuery","MagazineSectionParam","MagazineSearchParam","MagazineSortParam","SectionIndex","magazinePageData","pageContext","links","useLinksQuery","getFilteredItems","posts","allPosts","forEach","selectedSectionName","inputTextValue","foundInTitle","foundInDescription","foundInCategory","foundInCustomer","foundInProject","foundInTags","lowCaseValueToFind","toLowerCase","indexOf","sections","getSections","sectionParam","getQueryParam","searchParam","sortParam","selectedSectionIndex","setSelectedSectionIndex","sectionNameToIndex","setSelectedSectionName","selectedSort","setSelectedSort","setInputTextValue","shelfItems","setShelfItems","searchRef","useLayoutEffect","updateShelf","onSwitchClickHandler","selectedType","Number","sectionsIndexToname","updateUrl","asyncFIlterItems","setQueryParams","name","GatsbySeo","titolo","canonical","magazine","openGraph","locale","images","header","_magazinePageData$hea","width","_magazinePageData$hea2","_magazinePageData$hea3","_magazinePageData$hea4","map","section","HeroSection","imageAlt","mobileImage","MultiStyleText","flex","className1","className2","SectionContainer","tabbed","marginPost","customTab","ScrollButton","Search","Gap","marginTop","Switch","allLabel","sezioni","_magazinePageData$sez","fixedIndex","onSubmit","InputText","searchInputPlaceholder","minWidth","fontStyle","searchButtonLabel","Shelf","item","Post","magazinePageContext","_magazinePageContext$","headerMobile","_magazinePageContext$2","_magazinePageContext$3","sezione","_sezione$header","_sezione$headerMobile","_sezione$header2","blog","caseHistory","academy","events","paramName","URLSearchParams","useLocation","search","get","generateQueryParams","history","replaceState","location","pathname","queryStrings","urlParams","arguments","urlParam"],"sourceRoot":""}