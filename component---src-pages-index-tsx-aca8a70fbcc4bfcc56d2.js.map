{"version":3,"file":"component---src-pages-index-tsx-aca8a70fbcc4bfcc56d2.js","mappings":"yKAYA,MAViBA,KACb,MAAM,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,WAAS,GAMnC,OAJAC,EAAAA,EAAAA,YAAU,KACNF,GAAS,EAAM,GAChB,IAEID,CAAK,ECShB,MAf+CI,IAE3C,IADcL,IACF,CACR,MAAMM,EAAoB,KACpBC,EAAuB,QAAwDC,MAAM,KACrFC,EAAkBC,UAAUC,SAASC,UAAU,EAAG,GACpDL,EAAoBM,QAAQJ,EAAgBK,gBAAkB,EAC9DC,OAAOC,SAASC,QAAS,iBAA6BR,KAEtDM,OAAOC,SAASC,QAAS,iBAA6BX,IAE9D,CACA,OAAO,IAAI,C","sources":["webpack://adkaora.com/./src/hooks/useIsSSR.tsx","webpack://adkaora.com/./src/pages/index.tsx"],"sourcesContent":["import {useEffect, useState} from \"react\"\n\nconst useIsSSR = () => {\n    const [isSSR, setIsSsr] = useState(true)\n\n    useEffect(() => {\n        setIsSsr(false)\n    }, [])\n\n    return isSSR\n}\n\nexport default useIsSSR\n","import React, {ReactNode} from \"react\"\nimport useIsSSR from \"../hooks/useIsSSR\"\n\nconst index: React.FC<{children: ReactNode}> = props => {\n    const isSSR = useIsSSR()\n    if (!isSSR) {\n        const DEFAULT_LANGUAGE = `${process.env.DEFAULT_LANGUAGE || \"it\"}`\n        const SUPPORTED_LANGUAGES = `${process.env.SUPPORTED_LANGUAGES || DEFAULT_LANGUAGE}`.split(\",\")\n        const browserLanguage = navigator.language.substring(0, 2)\n        if (SUPPORTED_LANGUAGES.indexOf(browserLanguage.toLowerCase()) >= 0) {\n            window.location.replace(`${process.env.PATH_PREFIX}/${browserLanguage}`)\n        } else {\n            window.location.replace(`${process.env.PATH_PREFIX}/${DEFAULT_LANGUAGE}`)\n        }\n    }\n    return null\n}\n\nexport default index\n"],"names":["useIsSSR","isSSR","setIsSsr","useState","useEffect","props","DEFAULT_LANGUAGE","SUPPORTED_LANGUAGES","split","browserLanguage","navigator","language","substring","indexOf","toLowerCase","window","location","replace"],"sourceRoot":""}