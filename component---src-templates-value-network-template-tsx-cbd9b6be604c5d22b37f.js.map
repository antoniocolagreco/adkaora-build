{"version":3,"file":"component---src-templates-value-network-template-tsx-cbd9b6be604c5d22b37f.js","mappings":"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","sources":["webpack://adkaora.com/./src/components/Sections/Blank/Blank.tsx","webpack://adkaora.com/./src/components/UI/Numbers/Numbers.tsx","webpack://adkaora.com/./src/components/Sections/Carousel/Carousel.tsx","webpack://adkaora.com/./src/components/UI/Drawer/Drawer.tsx","webpack://adkaora.com/./src/components/UI/Accordion/Accordion.tsx","webpack://adkaora.com/./src/components/UI/Button/LinkButton.tsx","webpack://adkaora.com/./src/components/UI/DotsSelect/DotsSelect.tsx","webpack://adkaora.com/./src/components/UI/Fader/Fader.tsx","webpack://adkaora.com/./src/components/UI/RichText/RichText.tsx","webpack://adkaora.com/./src/components/UI/ScrollButton/ScrollButton.tsx","webpack://adkaora.com/./src/components/UI/Spacer/Spacer.tsx","webpack://adkaora.com/./src/components/UI/VideoPlayer/MobileVideoPlayer.tsx","webpack://adkaora.com/./src/icons/PlayIcon.tsx","webpack://adkaora.com/./src/components/UI/VideoPlayer/VideoPlayer.tsx","webpack://adkaora.com/./src/components/Forms/ValueNetworkForm.tsx","webpack://adkaora.com/./src/icons/QuoteIcon.tsx","webpack://adkaora.com/./src/components/UI/BlockQuote/BlockQuote.tsx","webpack://adkaora.com/./src/components/UI/HeroContent/HeroContent.tsx","webpack://adkaora.com/./src/components/UI/LogoContainer/LogoContainer.tsx","webpack://adkaora.com/./src/components/UI/ScrollingText/ScrollingText.tsx","webpack://adkaora.com/./src/icons/ChevroRightIcon.tsx","webpack://adkaora.com/./src/icons/ChevronLeftIcon.tsx","webpack://adkaora.com/./src/components/UI/SlideShow/SlideShow.tsx","webpack://adkaora.com/./src/templates/ValueNetworkTemplate.tsx","webpack://adkaora.com/./src/utilities/getTextFromHTML.ts","webpack://adkaora.com/./src/utilities/transition.ts"],"sourcesContent":["import clsx from \"clsx\"\nimport React from \"react\"\nimport \"./Blank.css\"\n\ninterface BlankProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst Blank: React.FC<BlankProps> = props => {\n    const {className, children, ...otherProps} = props\n    return (\n        <div className={clsx(\"blank-x5d9\", className)} {...otherProps}>\n            {children}\n        </div>\n    )\n}\n\nexport default Blank\n","import clsx from \"clsx\"\nimport {Children, isValidElement} from \"react\"\nimport \"./Numbers.css\"\n\ninterface NumbersProps extends React.HTMLAttributes<HTMLUListElement> {}\n\ninterface NumbersComponents {\n    Item: React.FC<NumbersItemProps>\n}\n\nconst Numbers: React.FC<NumbersProps> & NumbersComponents = props => {\n    const {className, children, ...otherProps} = props\n\n    let items: Array<React.ReactElement<NumbersItemProps>> = []\n    Children.map(children, (child, index) => {\n        if (!isValidElement<NumbersItemProps>(child)) return\n        items.push(child)\n    })\n\n    return (\n        <ul className={clsx(\"numbers-5xak\", className)} {...otherProps}>\n            {items.map((item, index) => {\n                return (\n                    <li key={index} className=\"item-5xak\">\n                        <span className=\"value-5xak\">{item.props.value}</span>\n                        <span className=\"description-5xak\">{item.props.description}</span>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default Numbers\n\ninterface NumbersItemProps {\n    value: string | null | undefined\n    description: string | null | undefined\n}\n\nconst NumbersItem: React.FC<NumbersItemProps> = props => null\n\nNumbers.Item = NumbersItem\n","import clsx from \"clsx\"\nimport {GatsbyImage, IGatsbyImageData} from \"gatsby-plugin-image\"\nimport {Children, isValidElement, useState} from \"react\"\nimport DotsSelect from \"~/components/UI/DotsSelect/DotsSelect\"\nimport Fader from \"~/components/UI/Fader/Fader\"\nimport MultiStyleText from \"~/components/UI/MultiStyleText/MultiStyleText\"\nimport Numbers from \"~/components/UI/Numbers/Numbers\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport MobileVideoPlayer from \"~/components/UI/VideoPlayer/MobileVideoPlayer\"\nimport {VideoSource} from \"~/types/VideoSource\"\nimport LinkButton from \"../../UI/Button/LinkButton\"\nimport \"./Carousel.css\"\n\ninterface CarouselProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n    title: string | undefined | null\n    backgroundImage: IGatsbyImageData | undefined | null\n    backgroundAlt: string | undefined | null\n    noVideo?: boolean\n    ctaName?: string | undefined\n    ctaLink?: string | undefined\n}\n\ninterface CarouselComponents {\n    Slide: React.FC<CarouselSlideProps>\n}\n\nconst Carousel: React.FC<CarouselProps> & CarouselComponents = props => {\n    const {className, children, title, noVideo = false, backgroundImage, backgroundAlt, ...otherProps} = props\n    const [selected, setSelected] = useState(0)\n\n    const slides: Array<React.ReactElement<CarouselSlideProps>> = []\n    Children.map(children, child => {\n        if (!isValidElement<CarouselSlideProps>(child)) return\n        slides.push(child)\n    })\n\n    return (\n        <div className={clsx(\"carousel-t99q\", className)} {...otherProps}>\n            <MultiStyleText className=\"title-t99q\" className1=\"title-part-1-t99q\" className2=\"title-part-2-t99q\">\n                {title}\n            </MultiStyleText>\n            <div className=\"left-t99q\">\n                {backgroundImage && backgroundAlt && (\n                    <GatsbyImage alt={backgroundAlt} image={backgroundImage} className=\"image-wrapper-t99q\" />\n                )}\n                <Fader selected={selected} onSelect={setSelected} className=\"video-fader-t99q\">\n                    {slides.map((slide, index) => {\n                        return (\n                            <Fader.Slide key={index}>\n                                {slide.props.video?.src && (\n                                    <MobileVideoPlayer\n                                        videoClass=\"mobile-video-player-t99q\"\n                                        pauseVideo={index !== selected}\n                                        videoSources={[\n                                            {\n                                                src: slide.props.video.src,\n                                                mimeType: slide.props.video.mimeType,\n                                            },\n                                        ]}\n                                    />\n                                )}\n                            </Fader.Slide>\n                        )\n                    })}\n                </Fader>\n            </div>\n            <div className={clsx(\"right-t99q\", noVideo ? \"noVideo-t99q\" : \"\")}>\n                <Fader selected={selected} onSelect={setSelected} slideClass=\"slide-t99q\">\n                    {slides.map((slide, index) => {\n                        return (\n                            <Fader.Slide key={index}>\n                                <h2 className=\"sub-title-t99q\">{slide.props.title}</h2>\n                                <RichTextField className=\"description-t99q\">{slide.props.description}</RichTextField>\n                                <div className=\"addons-t99q\">\n                                    {slide.props.chart &&\n                                        slide.props.chart.image?.gatsbyImageData &&\n                                        slide.props.chart.title && (\n                                            <>\n                                                <GatsbyImage\n                                                    className=\"chart-t99q\"\n                                                    alt={slide.props.chart.imageDescription ?? \"\"}\n                                                    image={slide.props.chart.image?.gatsbyImageData}\n                                                />\n                                                <RichTextField>{slide.props.chart.content?.raw}</RichTextField>\n                                            </>\n                                        )}\n                                    <Numbers>\n                                        {slide.props.dataList?.map((item, index) => {\n                                            return (\n                                                <Numbers.Item\n                                                    key={index}\n                                                    value={item?.value}\n                                                    description={item?.description}\n                                                />\n                                            )\n                                        })}\n                                    </Numbers>\n                                </div>\n                                {slide.props.ctaLink && slide.props.ctaName && (\n                                    <LinkButton className=\"cta-t99q\" to={slide.props.ctaLink}>\n                                        {slide.props.ctaName}\n                                    </LinkButton>\n                                )}\n                            </Fader.Slide>\n                        )\n                    })}\n                </Fader>\n                <DotsSelect length={slides.length} selected={selected} onSelect={setSelected} className=\"dots-t99q\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Carousel\n\ninterface CarouselSlideProps {\n    readonly title: string | undefined | null | undefined\n    readonly description: string | undefined | null | undefined\n    readonly ctaName?: string | undefined | null | undefined\n    readonly ctaLink?: string | undefined | null | undefined\n    readonly video: VideoSource | null | undefined\n    readonly dataList?: ReadonlyArray<Content | null> | null | undefined\n    readonly chart?: Content | null | undefined\n}\n\ntype Content = {\n    readonly title?: string | null | undefined\n    readonly value?: string | null | undefined\n    readonly description?: string | null | undefined\n    readonly imageDescription?: string | null | undefined\n    readonly content?: {readonly raw?: string | null} | null | undefined\n    readonly image?:\n        | {\n              readonly gatsbyImageData?: import(\"gatsby-plugin-image\").IGatsbyImageData | null\n          }\n        | null\n        | undefined\n}\n\nconst CarouselSlide: React.FC<CarouselSlideProps> = props => null\n\nCarousel.Slide = CarouselSlide\n","import {AllHTMLAttributes, CSSProperties, ElementType, FC, useCallback, useEffect, useRef, useState} from \"react\"\nimport {onTrasitionEnd} from \"~/utilities/transition\"\n\ntype DrawerProps = AllHTMLAttributes<HTMLElement> & {\n    closed: boolean\n    as?: ElementType\n}\n\nconst defaultStyle: React.CSSProperties = {\n    overflow: \"hidden\",\n    transitionDuration: \"0.5s\",\n    transitionTimingFunction: \"cubic-bezier(0.645, 0.045, 0.355, 1)\",\n}\n\nconst Drawer: FC<DrawerProps> = props => {\n    const {children, closed: _closed, as: Component = \"div\", style, ...otherProps} = props\n    const drawerRef = useRef<HTMLElement>(null)\n    const [isClosed, setClosed] = useState(_closed)\n    const [transitionStyle, setTransitionStyle] = useState<CSSProperties>(_closed ? {display: \"none\"} : {})\n\n    const collapse = useCallback(() => {\n        if (!drawerRef.current) return\n        setTransitionStyle({height: drawerRef.current?.scrollHeight + \"px\"})\n        setTimeout(() => {\n            onTrasitionEnd(drawerRef.current, () => {\n                setTransitionStyle({display: \"none\"})\n                setClosed(true)\n            })\n            setTransitionStyle({height: \"0px\"})\n        }, 20)\n    }, [])\n\n    const expand = useCallback(() => {\n        if (!drawerRef.current) return\n        setTransitionStyle({height: \"0px\"})\n        setTimeout(() => {\n            onTrasitionEnd(drawerRef.current, () => {\n                setTransitionStyle({})\n                setClosed(false)\n            })\n            if (!drawerRef.current) return\n            setTransitionStyle({height: drawerRef.current.scrollHeight + \"px\"})\n        }, 20)\n    }, [])\n\n    useEffect(() => {\n        if (!drawerRef.current) return\n        if (_closed && !isClosed) {\n            collapse()\n        }\n        if (!_closed && isClosed) {\n            expand()\n        }\n    }, [_closed, isClosed, expand, collapse])\n\n    return (\n        <Component style={{...defaultStyle, ...transitionStyle}} ref={drawerRef} {...otherProps}>\n            {children}\n        </Component>\n    )\n}\n\nexport default Drawer\n","import clsx from \"clsx\"\nimport {useState} from \"react\"\nimport Drawer from \"~/components/UI/Drawer/Drawer\"\nimport ChevronUpIcon from \"~/icons/ChevronUpIcon\"\nimport \"./Accordion.css\"\n\nexport interface AccordionProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n    title?: string | null | undefined\n    startClosed?: boolean | undefined\n    titleClassName?: string | undefined\n    iconClassName?: string | undefined\n}\n\nconst Accordion: React.FC<AccordionProps> = props => {\n    const {className, titleClassName, iconClassName, title, startClosed = false, children, ...otherProps} = props\n    const [closed, setClosed] = useState(startClosed)\n\n    return (\n        <div className={clsx(\"accordion-90d3\", closed ? \"closed-90d3\" : \"\", className)} {...otherProps}>\n            <button className=\"button-90d3\" onClick={e => setClosed(state => !state)}>\n                <ChevronUpIcon className={clsx(\"icon-90d3 \", iconClassName)} />\n                <span className={clsx(titleClassName, \"\")}>{title}</span>\n            </button>\n            <Drawer closed={closed} className=\"content-90d3\">\n                {children}\n            </Drawer>\n        </div>\n    )\n}\n\nexport default Accordion\n","import {Link, LinkProps} from \"@gatsbyjs/reach-router\"\nimport clsx from \"clsx\"\nimport {navigate} from \"gatsby\"\nimport React, {useContext} from \"react\"\nimport Ripple, {RippleColor} from \"~/components/UI/Ripple/Ripple\"\nimport TransitionContext from \"~/contexts/TransitionContext\"\nimport NavBarContext from \"../../../contexts/NavBarContext\"\nimport {ButtonColor} from \"./Button\"\n\nimport \"./Button.css\"\n\nexport interface LinkButtonProps extends Omit<LinkProps<any>, \"to\"> {\n    color?: ButtonColor\n    withoutTransition?: boolean | undefined\n    to?: string | null | undefined\n}\n\nconst LinkButton: React.FC<LinkButtonProps> = props => {\n    const {\n        color = \"green\",\n        to = \"\",\n        children,\n        download,\n        withoutTransition,\n        onClick,\n        className,\n        ref,\n        ...otherProps\n    } = props\n    const internal = /^\\/(?!\\/)/.test(to ? to : \"\")\n    const transitionContenxt = useContext(TransitionContext)\n    const navbarContext = useContext(NavBarContext)\n\n    let rippleColor: RippleColor = \"light-green\"\n    switch (color) {\n        case \"green\":\n            rippleColor = \"light-green\"\n            break\n        case \"white\":\n            rippleColor = \"green\"\n            break\n        case \"blue\":\n            rippleColor = \"blue\"\n            break\n        case \"gray\":\n            rippleColor = \"gray\"\n            break\n        case \"red\":\n            rippleColor = \"red\"\n            break\n    }\n\n    const goTo = (url: string) => {\n        if (!url) return\n        if (withoutTransition) {\n            navigate(url)\n            return\n        }\n        transitionContenxt.navigateTo(url)\n    }\n\n    const onClickHandler = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        event.preventDefault()\n        navbarContext.hide(1000)\n        if (onClick) onClick(event)\n        goTo(event.currentTarget.href)\n    }\n\n    const button =\n        internal && to ? (\n            <Link\n                className={clsx(\"button-8p4x\", `${color}-8p4x`, className)}\n                to={to}\n                download={download}\n                target=\"_self\"\n                onClick={onClickHandler}\n                {...otherProps}\n            >\n                {children}\n            </Link>\n        ) : (\n            <a\n                href={to ?? undefined}\n                className={clsx(\"button-8p4x\", `${color}-8p4x`, className)}\n                download={download}\n                target={download ? \"_self\" : \"_blank\"}\n                {...otherProps}\n                ref={ref}\n            >\n                {children}\n            </a>\n        )\n\n    return <Ripple color={rippleColor}>{button}</Ripple>\n}\n\nexport default LinkButton\n","import React from \"react\"\n\ninterface DotsSelectProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onSelect\"> {\n    selected?: number | undefined\n    length: number | undefined\n    onSelect?: ((value: number) => void) | undefined\n    dotStyle?: React.CSSProperties | undefined\n    selectedDotStyle?: React.CSSProperties | undefined\n}\n\nconst DOT_BUTTON_STYLE: React.CSSProperties = {\n    backgroundColor: \"transparent\",\n    padding: \"4px\",\n    cursor: \"pointer\",\n}\n\nconst DOT_STYLE: React.CSSProperties = {\n    width: \"16px\",\n    height: \"16px\",\n    backgroundColor: \"var(--color-neutral-300)\",\n    borderRadius: \"var(--radius-5)\",\n}\n\nconst SELECTED_DOT_STYLE: React.CSSProperties = {\n    backgroundColor: \"var(--color-primary-700)\",\n}\n\nconst DotsSelect: React.FC<DotsSelectProps> = props => {\n    const {selected, length = 0, selectedDotStyle, dotStyle, onSelect, ...otherProps} = props\n\n    const dots = []\n    for (let index = 0; index < length; index++) {\n        dots.push(\n            <Dot\n                key={index}\n                style={DOT_BUTTON_STYLE}\n                {...(onSelect ? {onClick: () => onSelect(index)} : {})}\n                dotStyle={\n                    index === selected\n                        ? {...DOT_STYLE, ...dotStyle, ...SELECTED_DOT_STYLE, ...selectedDotStyle}\n                        : {...DOT_STYLE, ...dotStyle}\n                }\n            />,\n        )\n    }\n\n    return <div {...otherProps}>{dots}</div>\n}\n\ninterface DotProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    dotStyle?: React.CSSProperties | undefined\n}\n\nconst Dot: React.FC<DotProps> = props => {\n    const {style, dotStyle, ...otherProps} = props\n\n    return (\n        <button style={{...style}} {...otherProps}>\n            <div style={dotStyle} />\n        </button>\n    )\n}\n\nexport default DotsSelect\n","import clsx from \"clsx\"\nimport {Children, ReactNode, useCallback, useRef} from \"react\"\nimport \"./Fader.css\"\n\ninterface FaderComponents {\n    Slide: React.FC<{children: ReactNode}>\n}\n\ninterface FaderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\" | \"onSelect\"> {\n    children: ReactNode\n    selected: number\n    onSelect?: undefined | ((value: number) => void)\n    slideClass?: undefined | string\n}\n\nconst Fader: React.FC<FaderProps> & FaderComponents = (props: FaderProps) => {\n    const {selected, onSelect, className, slideClass, children, ...otherProps} = props\n    const touchStartRef = useRef<undefined | number>()\n\n    const onTouchStart = useCallback((event: React.TouchEvent<HTMLDivElement>) => {\n        touchStartRef.current = event.touches[0]?.screenX\n    }, [])\n\n    const onTouchMove = useCallback(\n        (event: React.TouchEvent<HTMLDivElement>) => {\n            const currentX = event.touches[0]?.screenX\n\n            if (false || typeof currentX === \"undefined\" || typeof touchStartRef.current === \"undefined\") {\n                return\n            }\n\n            const movesLeft = currentX > touchStartRef.current + 50\n            const movesRight = currentX < touchStartRef.current - 50\n\n            if (movesLeft) {\n                onSelect?.(Math.max(selected - 1, 0))\n                touchStartRef.current = undefined\n                return\n            }\n            if (movesRight) {\n                onSelect?.(Math.min(selected + 1, Children.count(children) - 1))\n                touchStartRef.current = undefined\n                return\n            }\n        },\n        [selected],\n    )\n\n    return (\n        <div {...otherProps} className={clsx(\"fader-kpz3\", className)}>\n            {Children.map(children, (child, index) => (\n                <div\n                    key={index}\n                    className={clsx(\"slide-kpz3\", slideClass, {\n                        \"selected-kpz3\": selected === index,\n                    })}\n                    onTouchStart={onTouchStart}\n                    onTouchMove={onTouchMove}\n                >\n                    {child}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Fader\n\nconst Slide: React.FC<{children: ReactNode}> = props => <>{props.children}</>\n\nFader.Slide = Slide\n","import {documentToHtmlString} from \"@contentful/rich-text-html-renderer\"\nimport clsx from \"clsx\"\nimport React from \"react\"\nimport \"./RichText.css\"\n\nexport interface RichTextFieldProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst RichTextField: React.FC<RichTextFieldProps> = props => {\n    const {children, className, ...otherPros} = props\n\n    if (typeof children !== \"string\") return null\n\n    return (\n        <div\n            className={clsx(\"rich-56aq\", className)}\n            dangerouslySetInnerHTML={children ? {__html: documentToHtmlString(JSON.parse(children))} : undefined}\n            {...otherPros}\n        />\n    )\n}\n\nexport default RichTextField\n","import clsx from \"clsx\"\nimport ChevronDownIcon from \"~/icons/ChevronDownIcon\"\nimport \"./ScrollButton.css\"\n\ninterface ScrollButtonProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ScrollButton = (props: ScrollButtonProps) => {\n    const {onClick, className, ...otherProps} = props\n    return (\n        <div className={clsx(\"scroller-r94f\", className)} {...otherProps}>\n            <div className=\"mouse-r94f\">\n                <div className=\"scroll-r94f\"></div>\n            </div>\n            <ChevronDownIcon className=\"icon-r94f\" />\n        </div>\n    )\n}\n\nexport default ScrollButton\n","import clsx from \"clsx\"\nimport {GatsbyImage, IGatsbyImageData} from \"gatsby-plugin-image\"\nimport \"./Spacer.css\"\n\ninterface SpacerProps extends React.HTMLAttributes<HTMLDivElement> {\n    paddingHeight?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10\n    borderHeight?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10\n    marginHeight?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10\n    color?: \"green\" | \"gray\"\n    top?: boolean\n    bottom?: boolean\n    backgroundImage: IGatsbyImageData | null | undefined\n    backgroundImageAlt: string | null | undefined\n}\n\nconst Spacer = (props: SpacerProps) => {\n    const {\n        paddingHeight,\n        marginHeight,\n        borderHeight = 0,\n        backgroundImage,\n        backgroundImageAlt,\n        color,\n        top = false,\n        bottom = false,\n        children,\n        className,\n        ...otherProps\n    } = props\n\n    let paddigHeightClass = \"\"\n    switch (paddingHeight) {\n        case 0:\n            paddigHeightClass = \"ph-0-typ6\"\n            break\n        case 1:\n            paddigHeightClass = \"ph-1-typ6\"\n            break\n        case 2:\n            paddigHeightClass = \"ph-2-typ6\"\n            break\n        case 3:\n            paddigHeightClass = \"ph-3-typ6\"\n            break\n        case 4:\n            paddigHeightClass = \"ph-4-typ6\"\n            break\n        case 5:\n            paddigHeightClass = \"ph-5-typ6\"\n            break\n        case 6:\n            paddigHeightClass = \"ph-6-typ6\"\n            break\n        case 7:\n            paddigHeightClass = \"ph-7-typ6\"\n            break\n        case 8:\n            paddigHeightClass = \"ph-9-typ6\"\n            break\n        case 9:\n            paddigHeightClass = \"ph-9-typ6\"\n            break\n        case 10:\n            paddigHeightClass = \"ph-10-typ6\"\n            break\n    }\n    let borderHeightClass = \"\"\n    switch (borderHeight) {\n        case 0:\n            borderHeightClass = \"bh-0-typ6\"\n            break\n        case 1:\n            borderHeightClass = \"bh-1-typ6\"\n            break\n        case 2:\n            borderHeightClass = \"bh-2-typ6\"\n            break\n        case 3:\n            borderHeightClass = \"bh-3-typ6\"\n            break\n        case 4:\n            borderHeightClass = \"bh-4-typ6\"\n            break\n        case 5:\n            borderHeightClass = \"bh-5-typ6\"\n            break\n        case 6:\n            borderHeightClass = \"bh-6-typ6\"\n            break\n        case 7:\n            borderHeightClass = \"bh-7-typ6\"\n            break\n        case 8:\n            borderHeightClass = \"bh-9-typ6\"\n            break\n        case 9:\n            borderHeightClass = \"bh-9-typ6\"\n            break\n        case 10:\n            borderHeightClass = \"bh-10-typ6\"\n            break\n    }\n    let marginHeightClass = \"\"\n    switch (marginHeight) {\n        case 0:\n            marginHeightClass = \"mh-0-typ6\"\n            break\n        case 1:\n            marginHeightClass = \"mh-1-typ6\"\n            break\n        case 2:\n            marginHeightClass = \"mh-2-typ6\"\n            break\n        case 3:\n            marginHeightClass = \"mh-3-typ6\"\n            break\n        case 4:\n            marginHeightClass = \"mh-4-typ6\"\n            break\n        case 5:\n            marginHeightClass = \"mh-5-typ6\"\n            break\n        case 6:\n            marginHeightClass = \"mh-6-typ6\"\n            break\n        case 7:\n            marginHeightClass = \"mh-7-typ6\"\n            break\n        case 8:\n            marginHeightClass = \"mh-9-typ6\"\n            break\n        case 9:\n            marginHeightClass = \"mh-9-typ6\"\n            break\n        case 10:\n            marginHeightClass = \"mh-10-typ6\"\n            break\n    }\n\n    return (\n        <div\n            className={clsx(\n                \"spacer-typ6\",\n                top ? \"top-typ6\" : undefined,\n                bottom ? \"bottom-typ6\" : undefined,\n                `${color}-typ6`,\n                borderHeightClass,\n                marginHeightClass,\n                className,\n            )}\n            {...otherProps}\n        >\n            <div className={clsx(\"white-space-typ6\", `${color}-typ6`, paddigHeightClass)}>\n                {backgroundImage && backgroundImageAlt && (\n                    <GatsbyImage\n                        className={clsx({\"image-typ6\": color})}\n                        image={backgroundImage}\n                        alt={backgroundImageAlt}\n                    />\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Spacer\n","import clsx from \"clsx\"\nimport {useEffect, useRef} from \"react\"\nimport {VideoSource} from \"~/types/VideoSource\"\n\nimport \"./MobileVideoPlayer.css\"\n\ninterface MobileVideoPlayerProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onPause\"> {\n    videoSources: Array<VideoSource> | VideoSource\n    videoClass?: string | undefined\n    videoStyle?: React.CSSProperties | undefined\n    pauseVideo?: boolean\n}\n\nconst MobileVideoPlayer: React.FC<MobileVideoPlayerProps> = props => {\n    const {className, pauseVideo = false, videoClass, videoStyle, videoSources, ...otherProps} = props\n    const videoRef = useRef<HTMLVideoElement | null>(null)\n\n    useEffect(() => {\n        if (pauseVideo) {\n            videoRef.current?.pause()\n        } else {\n            videoRef.current?.play()\n        }\n    }, [pauseVideo])\n\n    return (\n        <div className={clsx(\"mobile-video-player-k6zm\", \"visible-k6zm\", className)} {...otherProps}>\n            <div className=\"mobile-frame-k6zm\">\n                <video\n                    className={clsx(\"video-k6zm\", videoClass)}\n                    autoPlay\n                    loop\n                    muted\n                    playsInline\n                    ref={videoRef}\n                    style={videoStyle}\n                >\n                    {[videoSources].flat().map((source, index) => {\n                        if (!source.src || !source.mimeType) return\n                        return <source src={source.src} type={source.mimeType} key={index} />\n                    })}\n                </video>\n            </div>\n        </div>\n    )\n}\n\nexport default MobileVideoPlayer\n","const PlayIcon: React.FC<React.SVGProps<SVGSVGElement>> = props => {\n    const {viewBox, fill, stroke, ...otherProps} = props\n    return (\n        <svg\n            viewBox={viewBox ? viewBox : \"0 0 87 96\"}\n            fill={fill ? fill : \"currentColor\"}\n            stroke={stroke ? stroke : \"currentColor\"}\n            {...otherProps}\n        >\n            <path d=\"M2,47.47c0-10.66,0-21.33,0-32C2.07,3.2,12.11-3.06,22.66,3Q51.27,19.26,79.53,36.18a13.61,13.61,0,0,1,0,23.54Q51.26,76.6,22.68,93C12.11,99,2.07,92.75,2,80.47,2,69.47,2,58.47,2,47.47Zm5.73.31c0,10.66,0,21.33,0,32,0,8.55,5.46,11.84,12.66,7.65Q47.58,71.6,74.68,55.65c8-4.7,7.93-10.77-.11-15.5q-27.1-16-54.3-31.74c-7-4.06-12.47-.83-12.53,7.37C7.67,26.44,7.72,37.11,7.72,47.78Z\" />\n        </svg>\n    )\n}\n\nexport default PlayIcon\n","import clsx from \"clsx\"\nimport {GatsbyImage, IGatsbyImageData} from \"gatsby-plugin-image\"\nimport React, {useContext, useEffect, useRef, useState} from \"react\"\nimport {useInView} from \"react-hook-inview\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport NavBarContext from \"~/contexts/NavBarContext\"\nimport PlayIcon from \"~/icons/PlayIcon\"\nimport {VideoSource} from \"~/types/VideoSource\"\n\nimport \"./VideoPlayer.css\"\n\ninterface VideoPlayerProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n    title: string | undefined | null\n    description: string | undefined | null\n    backgroundImage: IGatsbyImageData | undefined | null\n    backgroundAlt: string | undefined | null\n    videoSources: Array<VideoSource> | VideoSource\n}\n\nconst VideoPlayer: React.FC<VideoPlayerProps> = props => {\n    const {className, title, description, backgroundImage, backgroundAlt, videoSources, children, ...otherProps} = props\n\n    const [playing, setPlaying] = useState(false)\n    const videoRef = useRef<HTMLVideoElement | null>(null)\n    const [videoPlayerRef, isVideoVisible] = useInView({threshold: 1})\n    const navBarContext = useContext(NavBarContext)\n\n    useEffect(() => {\n        if (!playing || !videoRef.current) return\n        if (!isVideoVisible) {\n            videoRef.current.scrollIntoView({\n                block: \"start\",\n                behavior: \"smooth\",\n            })\n        }\n    }, [playing])\n\n    const playAndPause = () => {\n        if (!videoRef.current) return\n        if (!playing) {\n            setPlaying(true)\n            videoRef.current.play()\n        } else {\n            setPlaying(false)\n            videoRef.current.pause()\n        }\n        navBarContext.hide(1000)\n    }\n\n    return (\n        <div\n            className={clsx(\"full-video-player-m9ce\", playing ? \"playing-m9ce\" : \"\")}\n            {...otherProps}\n            ref={videoPlayerRef}\n        >\n            {backgroundImage && backgroundAlt && (\n                <GatsbyImage alt={backgroundAlt} image={backgroundImage} className=\"image-m9ce\" />\n            )}\n\n            <div className=\"overlay-m9ce\">\n                <button className=\"play-button-m9ce\" onClick={e => playAndPause()}>\n                    <PlayIcon className=\"play-icon-m9ce\" />\n                </button>\n                <h2 className=\"title-m9ce\">{title}</h2>\n                <RichTextField className=\"description-m9ce\">{description}</RichTextField>\n            </div>\n            <video\n                playsInline\n                className=\"video-m9ce\"\n                ref={videoRef}\n                onClick={() => playAndPause()}\n                onEnded={() => setPlaying(false)}\n            >\n                {[videoSources].flat().map((source, index) => {\n                    if (!source.src || !source.mimeType) return\n                    return <source src={source.src} type={source.mimeType} key={index} />\n                })}\n            </video>\n        </div>\n    )\n}\n\nexport default VideoPlayer\n","import clsx from \"clsx\"\nimport {useState} from \"react\"\nimport {SubmitHandler, useForm} from \"react-hook-form\"\nimport Button from \"~/components/UI/Button/Button\"\nimport InputText from \"~/components/UI/InputText/InputText\"\nimport CheckIcon from \"../../icons/CheckIcon\"\nimport ErrorIcon from \"../../icons/ErrorIcon\"\nimport {emailRegex, nameRegex, numberRegex, urlRegex} from \"../../utilities/RegexStrings\"\nimport \"./Form.css\"\n\ntype ValueNetworkLabels = {\n    readonly formEmailLabel: string | null\n    readonly formFieldsLabel: string | null\n    readonly formLastNameLabel: string | null\n    readonly formNameLabel: string | null\n    readonly formSessionsLabel: string | null\n    readonly formSubmitButton: string | null\n    readonly formSubmitSuccessMessage: string | null\n    readonly formUrlLabel: string | null\n    readonly formValueLabel: string | null\n    readonly formViewsLabel: string | null\n}\n\ninterface ValueNetworkFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n    labels: ValueNetworkLabels\n}\n\ntype ValueNetworkFields = {\n    Website: string\n    Number: string\n    Number1: string\n    Name_First: string\n    Name_Last: string\n    Email: string\n}\n\ntype SubmitStatus = undefined | \"success\" | \"error\"\n\nconst ValueNetworkForm: React.FC<ValueNetworkFormProps> = props => {\n    const {className, children, labels, ...otherProps} = props\n    const [submitStatus, setSubmitStatus] = useState<SubmitStatus>()\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: {errors},\n    } = useForm<ValueNetworkFields>()\n\n    const onFormSubmitHandler: SubmitHandler<ValueNetworkFields> = async data => {\n        const url =\n            \"https://forms.zohopublic.eu/adkaora/form/calcolatore/formperma/DEkOD-r6j5npz_Yzfh5jL5UebikqWJD6H3Px-yWIPJQ/htmlRecords/submit\"\n        const formData = new FormData()\n        for (const field in data) {\n            type ObjectKey = keyof ValueNetworkFields\n            const fieldKey = field as ObjectKey\n            formData.append(field, data[fieldKey])\n        }\n        const requestOptions: RequestInit = {\n            method: \"POST\",\n            mode: \"cors\",\n            body: formData,\n            redirect: \"manual\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n        }\n        await fetch(url, requestOptions)\n            .then(result => {})\n            .catch((error: Error) => {})\n            .finally(() => {\n                setSubmitStatus(\"success\")\n            })\n    }\n\n    return (\n        <form\n            className={clsx(\"white-background-ykf9\", className)}\n            style={{position: \"relative\"}}\n            onSubmit={handleSubmit(onFormSubmitHandler)}\n            {...otherProps}\n        >\n            <div className={clsx(\"form-ykf9\", {\"hidden-ykf9\": submitStatus === \"success\"})}>\n                <InputText\n                    type=\"text\"\n                    placeholder={labels.formUrlLabel}\n                    invalid={errors.Website !== undefined}\n                    {...register(\"Website\", {required: true, pattern: urlRegex})}\n                    variant=\"soft-filled\"\n                    containerClassName=\"span2-ykf9\"\n                />\n                <InputText\n                    type=\"text\"\n                    placeholder={labels.formViewsLabel}\n                    invalid={errors.Number !== undefined}\n                    {...register(\"Number\", {required: true, pattern: numberRegex})}\n                    variant=\"soft\"\n                    containerClassName=\"span2-ykf9\"\n                />\n                <InputText\n                    type=\"text\"\n                    placeholder={labels.formSessionsLabel}\n                    invalid={errors.Number1 !== undefined}\n                    {...register(\"Number1\", {required: true, pattern: numberRegex})}\n                    variant=\"soft-filled\"\n                    containerClassName=\"span2-ykf9\"\n                />\n                <InputText\n                    type=\"text\"\n                    placeholder={labels.formNameLabel}\n                    invalid={errors.Name_First !== undefined}\n                    {...register(\"Name_First\", {required: true, pattern: nameRegex})}\n                    variant=\"soft\"\n                    containerClassName=\"span2-ykf9\"\n                />\n                <InputText\n                    type=\"text\"\n                    placeholder={labels.formLastNameLabel}\n                    invalid={errors.Name_Last !== undefined}\n                    {...register(\"Name_Last\", {required: true, pattern: nameRegex})}\n                    variant=\"soft-filled\"\n                    containerClassName=\"span2-ykf9\"\n                />\n                <InputText\n                    type=\"email\"\n                    placeholder={labels.formEmailLabel}\n                    invalid={errors.Email !== undefined}\n                    {...register(\"Email\", {\n                        required: true,\n                        pattern: emailRegex,\n                    })}\n                    variant=\"soft\"\n                    containerClassName=\"span2-ykf9\"\n                />\n                <div className=\"span2-ykf9 button-ykf9\">\n                    <Button type=\"submit\">{labels.formSubmitButton}</Button>\n                </div>\n            </div>\n            {submitStatus === \"success\" && (\n                <div className=\"overlay-ykf9\">\n                    <div className=\"modal-ykf9\">\n                        <CheckIcon className=\"check-icon-ykf9\" />\n                        <span className=\"submit-success-message-ykf9\">{labels.formSubmitSuccessMessage}</span>\n                    </div>\n                </div>\n            )}\n            {submitStatus === \"error\" && (\n                <div className=\"overlay-ykf9\">\n                    <div className=\"modal-ykf9\">\n                        <ErrorIcon className=\"error-icon-ykf9\" />\n                        <span className=\"submit-success-message-ykf9\">Error</span>\n                    </div>\n                </div>\n            )}\n        </form>\n    )\n}\n\nexport default ValueNetworkForm\n","const QuoteIcon: React.FC<React.SVGProps<SVGSVGElement>> = props => {\n    const {viewBox, fill, stroke, ...otherProps} = props\n    return (\n        <svg\n            fill={fill ? fill : \"none\"}\n            viewBox=\"0 0 24 24 \"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            {...otherProps}\n        >\n            <path d=\"M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z\" />\n            <path d=\"M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z\" />\n        </svg>\n    )\n}\n\nexport default QuoteIcon\n","import clsx from \"clsx\"\nimport {BlockquoteHTMLAttributes, FC} from \"react\"\nimport QuoteIcon from \"../../../icons/QuoteIcon\"\nimport RichTextField from \"../RichText/RichText\"\nimport \"./BlockQuote.css\"\n\ntype BlockQuoteProps = BlockquoteHTMLAttributes<HTMLQuoteElement> & {\n    author: string\n}\n\nconst BlockQuote: FC<BlockQuoteProps> = props => {\n    const {children, className, author, ...otherProps} = props\n    return (\n        <blockquote className={clsx(\"blockquote-k04l\", className)} {...otherProps}>\n            <QuoteIcon className=\"quote-icon\" />\n            <RichTextField className=\"content chars-h6-80\">{children}</RichTextField>\n            <footer className=\"author\">{author}</footer>\n        </blockquote>\n    )\n}\n\nexport default BlockQuote\n","import {documentToHtmlString} from \"@contentful/rich-text-html-renderer\"\nimport clsx from \"clsx\"\nimport {FC, HTMLAttributes} from \"react\"\nimport \"./HeroContent.css\"\n\ntype HeroContentProps = HTMLAttributes<HTMLDivElement> & {}\n\nconst HeroContent: FC<HeroContentProps> = props => {\n    const {className, children, ...otherProps} = props\n    return (\n        <div\n            className={clsx(\"hero-content-z9p0\", className)}\n            dangerouslySetInnerHTML={\n                children ? {__html: documentToHtmlString(JSON.parse(String(children)))} : undefined\n            }\n            {...otherProps}\n        />\n    )\n}\n\nexport default HeroContent\n","import {clsx} from \"clsx\"\nimport {GatsbyImage} from \"gatsby-plugin-image\"\nimport {FC, HTMLAttributes} from \"react\"\nimport \"./LogoContainer.css\"\n\ntype LogoContainerProps = HTMLAttributes<HTMLDivElement> & {\n    images:\n        | ReadonlyArray<{\n              readonly width: number | null | undefined\n              readonly url: string | null | undefined\n              readonly title: string | null | undefined\n              readonly height: number | null | undefined\n              readonly gatsbyImageData: import(\"gatsby-plugin-image\").IGatsbyImageData | null | undefined\n          } | null>\n        | null\n        | undefined\n}\n\nconst LogoContainer: FC<LogoContainerProps> = props => {\n    const {className, children, images, ...otherProps} = props\n\n    return (\n        <div className={clsx(\"logo-container-3js8\", className)} {...otherProps}>\n            {images &&\n                images.map((logo, index) => {\n                    if (!logo?.url || !logo.gatsbyImageData) return\n                    return (\n                        <div className=\"image-container-3js8\" key={index}>\n                            <GatsbyImage image={logo.gatsbyImageData} alt={logo.title ?? \"\"} key={index} />\n                        </div>\n                    )\n                })}\n        </div>\n    )\n}\n\nexport default LogoContainer\n","import clsx from \"clsx\"\nimport {GatsbyImage} from \"gatsby-plugin-image\"\nimport {FC, HTMLAttributes, useRef} from \"react\"\nimport \"./ScrollingText.css\"\n\ntype ScrollingTextProps = Omit<HTMLAttributes<HTMLDivElement>, \"children\"> & {\n    backgroundImage: {\n        readonly width: number | null\n        readonly url: string | null\n        readonly title: string | null\n        readonly height: number | null\n        readonly gatsbyImageData: import(\"gatsby-plugin-image\").IGatsbyImageData | null\n    } | null\n    children: string | undefined | null\n}\n\nconst ScrollingText: FC<ScrollingTextProps> = props => {\n    const {children, className, backgroundImage, ...otherProps} = props\n    const containerRef = useRef<HTMLDivElement>(null)\n\n    const animationDuration = children ? `${children.length * 0.5}s` : \"10s\"\n\n    return (\n        <div className={clsx(\"scrolling-text-r01z\", className)} {...otherProps}>\n            {backgroundImage && backgroundImage.gatsbyImageData && (\n                <GatsbyImage\n                    className=\"gatsby-image-r01z\"\n                    image={backgroundImage.gatsbyImageData}\n                    alt={backgroundImage.title ?? \"\"}\n                />\n            )}\n\n            {/* con 7 elementi, fino a 10 caratteri supportati */}\n            <div className=\"scroll-container-r01z\" ref={containerRef}>\n                <span className=\"text-r01z\" style={{animationDuration}}>\n                    {children}\n                </span>\n                <span className=\"text-r01z\" style={{animationDuration}}>\n                    {children}\n                </span>\n                <span className=\"text-r01z\" style={{animationDuration}}>\n                    {children}\n                </span>\n                <span className=\"text-r01z\" style={{animationDuration}}>\n                    {children}\n                </span>\n                <span className=\"text-r01z\" style={{animationDuration}}>\n                    {children}\n                </span>\n                <span className=\"text-r01z\" style={{animationDuration}}>\n                    {children}\n                </span>\n                <span className=\"text-r01z\" style={{animationDuration}}>\n                    {children}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default ScrollingText\n","const ChevronRightIcon: React.FC<React.SVGProps<SVGSVGElement>> = props => {\n    const {viewBox, fill, stroke, ...otherProps} = props\n    return (\n        <svg fill={fill ? fill : \"currentColor\"} viewBox={viewBox ? viewBox : \"0 0 48 48 \"} {...otherProps}>\n            <path d=\"M18.75 36 16.6 33.85 26.5 23.95 16.6 14.05 18.75 11.9 30.8 23.95Z\" />\n        </svg>\n    )\n}\n\nexport default ChevronRightIcon\n","const ChevronLeftIcon: React.FC<React.SVGProps<SVGSVGElement>> = props => {\n    const {viewBox, fill, stroke, ...otherProps} = props\n    return (\n        <svg fill={fill ? fill : \"currentColor\"} viewBox={viewBox ? viewBox : \"0 0 48 48 \"} {...otherProps}>\n            <path d=\"M28.05 36 16 23.95 28.05 11.9 30.2 14.05 20.3 23.95 30.2 33.85Z\" />\n        </svg>\n    )\n}\n\nexport default ChevronLeftIcon\n","import clsx from \"clsx\"\nimport {Children, FC, HTMLAttributes, Reducer, useCallback, useEffect, useReducer, useRef} from \"react\"\nimport ChevronRightIcon from \"../../../icons/ChevroRightIcon\"\nimport ChevronLeftIcon from \"../../../icons/ChevronLeftIcon\"\nimport {onTrasitionEnd} from \"../../../utilities/transition\"\nimport DotsSelect from \"../DotsSelect/DotsSelect\"\nimport \"./SlideShow.css\"\n\ntype SlideShowProps = HTMLAttributes<HTMLDivElement> & {}\n\ntype SlideStateClassnameType = null | \"prev\" | \"next\"\n\ntype SlideshowState = {\n    numberOfItems: number\n    currentIndex: number\n    targetIndex: number\n    isTransitionEnabled: boolean\n    isReadyToAnimate: boolean\n    prevClassname: SlideStateClassnameType\n    currentClassname: SlideStateClassnameType\n    nextClassname: SlideStateClassnameType\n}\n\nconst slideshowInitialState: SlideshowState = {\n    numberOfItems: 0,\n    currentIndex: 0,\n    targetIndex: 0,\n    isTransitionEnabled: true,\n    isReadyToAnimate: true,\n    prevClassname: \"prev\",\n    currentClassname: null,\n    nextClassname: \"next\",\n}\n\ntype SlideshowActionType =\n    | \"transit-forward\"\n    | \"transit-backward\"\n    | \"enable-controls\"\n    | \"disable-controls\"\n    | \"enable-transitions\"\n    | \"disable-transitions\"\n    | \"reset-transition\"\n\ntype SlideshowActionWithPayloadType = \"go-to\" | \"update-current-index\"\n\ntype SlideshowAction = {type: SlideshowActionType}\ntype SlideshowActionWithPayload = {type: SlideshowActionWithPayloadType; value: number}\n\nconst mod = (value: number, module: number) => ((value % module) + module) % module\n\nconst slideshowReducer: Reducer<SlideshowState, SlideshowAction | SlideshowActionWithPayload> = (state, action) => {\n    switch (action.type) {\n        case \"enable-controls\":\n            return {...state, isReadyToAnimate: true}\n        case \"disable-controls\":\n            return {...state, isReadyToAnimate: false}\n        case \"enable-transitions\":\n            return {...state, isTransitionEnabled: true}\n        case \"disable-transitions\":\n            return {...state, isTransitionEnabled: false}\n        case \"reset-transition\":\n            return {...state, currentClassname: null, prevClassname: \"prev\", nextClassname: \"next\"}\n        case \"transit-forward\":\n            return {...state, currentClassname: \"prev\", nextClassname: null}\n        case \"transit-backward\":\n            return {...state, currentClassname: \"next\", prevClassname: null}\n        case \"update-current-index\":\n            return {\n                ...state,\n                currentIndex: mod(action.value, state.numberOfItems),\n            }\n        case \"go-to\":\n            return {...state, targetIndex: mod(action.value, state.numberOfItems)}\n        default:\n            return {...state}\n    }\n}\n\ntype CoordinatesType = {x: number | undefined; y: number | undefined}\n\nconst SlideShow: FC<SlideShowProps> = props => {\n    const {children, className, ...otherProps} = props\n    const items = Children.toArray(children)\n    const [state, dispatch] = useReducer(slideshowReducer, {...slideshowInitialState, numberOfItems: items.length})\n    const currentSlideRef = useRef<HTMLDivElement>(null)\n    const dragStartingPosRef = useRef<CoordinatesType | null>(null)\n\n    const handleDragStart = useCallback(\n        (event: React.TouchEvent<HTMLDivElement>) => {\n            dragStartingPosRef.current = {x: event.touches[0]?.clientX, y: event.touches[0]?.clientY}\n        },\n        [dragStartingPosRef.current],\n    )\n\n    const handleDrag = useCallback(\n        (event: React.TouchEvent<HTMLDivElement>) => {\n            if (!dragStartingPosRef.current || !dragStartingPosRef.current.x || !state.isReadyToAnimate) return\n            const dragCurrentPos = {x: event.touches[0]?.clientX, y: event.touches[0]?.clientY}\n            if (!dragCurrentPos.x) return\n            const diff = dragCurrentPos.x - dragStartingPosRef.current.x\n            if (Math.abs(diff) < 10) return\n\n            if (diff < 0) {\n                dispatch({type: \"go-to\", value: state.currentIndex + 1})\n            } else {\n                dispatch({type: \"go-to\", value: state.currentIndex - 1})\n            }\n        },\n        [dragStartingPosRef.current?.x, state.isReadyToAnimate],\n    )\n\n    const handleNextClick = () => {\n        dispatch({type: \"go-to\", value: state.currentIndex + 1})\n    }\n\n    const handlePrevClick = () => {\n        dispatch({type: \"go-to\", value: state.currentIndex - 1})\n    }\n\n    const goToNext = useCallback(() => {\n        if (!state.isReadyToAnimate) return\n        onTrasitionEnd(currentSlideRef.current, () => {\n            dispatch({type: \"disable-transitions\"})\n            dispatch({type: \"reset-transition\"})\n            dispatch({type: \"update-current-index\", value: state.currentIndex + 1})\n            setTimeout(() => {\n                dispatch({type: \"enable-transitions\"})\n                dispatch({type: \"enable-controls\"})\n            }, 10)\n        })\n        dispatch({type: \"disable-controls\"})\n        dispatch({type: \"transit-forward\"})\n    }, [state.isReadyToAnimate, currentSlideRef.current])\n\n    const goToPrev = useCallback(() => {\n        if (!state.isReadyToAnimate) return\n        onTrasitionEnd(currentSlideRef.current, () => {\n            dispatch({type: \"disable-transitions\"})\n            dispatch({type: \"reset-transition\"})\n            dispatch({type: \"update-current-index\", value: state.currentIndex - 1})\n            setTimeout(() => {\n                dispatch({type: \"enable-transitions\"})\n                dispatch({type: \"enable-controls\"})\n            }, 10)\n        })\n        dispatch({type: \"transit-backward\"})\n        dispatch({type: \"disable-controls\"})\n    }, [state.isReadyToAnimate, currentSlideRef.current])\n\n    const findFastestWay = (start: number, end: number, total: number): \"forward\" | \"backward\" => {\n        const tStart = start ?? total\n        const tEnd = end ?? total\n\n        const diffPos = (tEnd - tStart + total) % total\n        const diffNeg = (tEnd - tStart - total) % total\n\n        if (Math.abs(diffNeg) < diffPos) return \"backward\"\n        if (Math.abs(diffNeg) > diffPos) return \"forward\"\n\n        if (end < start) {\n            return \"backward\"\n        } else {\n            return \"forward\"\n        }\n    }\n\n    const handleDotClick = (desiredIndex: number) => {\n        dispatch({type: \"go-to\", value: desiredIndex})\n    }\n\n    useEffect(() => {\n        if (state.currentIndex === state.targetIndex) return\n\n        const direction = findFastestWay(state.currentIndex, state.targetIndex, state.numberOfItems)\n\n        if (direction === \"forward\") {\n            goToNext()\n        } else {\n            goToPrev()\n        }\n    }, [state])\n\n    return (\n        <div\n            className={clsx(\"slideshow-73jc\", {transition: state.isTransitionEnabled}, className)}\n            onTouchStart={handleDragStart}\n            onTouchMove={handleDrag}\n            {...otherProps}\n        >\n            <div className={clsx(\"slide\", state.prevClassname)}>\n                {items[mod(state.currentIndex - 1, state.numberOfItems)]}\n            </div>\n            <div className={clsx(\"slide\", state.currentClassname)} ref={currentSlideRef}>\n                {items[state.currentIndex]}\n            </div>\n            <div className={clsx(\"slide\", state.nextClassname)}>\n                {items[mod(state.currentIndex + 1, state.numberOfItems)]}\n            </div>\n            <button className=\"prev-button\" onClick={handlePrevClick} disabled={!state.isReadyToAnimate}>\n                <ChevronLeftIcon className=\"icon\" />\n            </button>\n            <button className=\"next-button\" onClick={handleNextClick} disabled={!state.isReadyToAnimate}>\n                <ChevronRightIcon className=\"icon\" />\n            </button>\n            <DotsSelect\n                className=\"dots\"\n                length={state.numberOfItems}\n                selected={state.targetIndex}\n                onSelect={handleDotClick}\n            />\n        </div>\n    )\n}\n\nexport default SlideShow\n","import clsx from \"clsx\"\nimport {HeadFC, PageProps} from \"gatsby\"\nimport {Fragment} from \"react\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport ValueNetworkForm from \"../components/Forms/ValueNetworkForm\"\nimport Blank from \"../components/Sections/Blank/Blank\"\nimport Carousel from \"../components/Sections/Carousel/Carousel\"\nimport HeroSection from \"../components/Sections/HeroSection/HeroSection\"\nimport Accordion from \"../components/UI/Accordion/Accordion\"\nimport BlockQuote from \"../components/UI/BlockQuote/BlockQuote\"\nimport HeroContent from \"../components/UI/HeroContent/HeroContent\"\nimport LogoContainer from \"../components/UI/LogoContainer/LogoContainer\"\nimport RichTextField from \"../components/UI/RichText/RichText\"\nimport {SEO} from \"../components/UI/SEO/SEO\"\nimport ScrollButton from \"../components/UI/ScrollButton/ScrollButton\"\nimport ScrollingText from \"../components/UI/ScrollingText/ScrollingText\"\nimport SectionContainer from \"../components/UI/SectionContainer/SectionContainer\"\nimport SlideShow from \"../components/UI/SlideShow/SlideShow\"\nimport Spacer from \"../components/UI/Spacer/Spacer\"\nimport VideoPlayer from \"../components/UI/VideoPlayer/VideoPlayer\"\nimport {PageContext} from \"../types/PageContext\"\nimport getTextFromHTML from \"../utilities/getTextFromHTML\"\nimport \"./ValueNetwork.css\"\n\ntype ValueNetworkPageContext = PageContext<\n    Queries.ValueNetworkPageQuery[\"allContentfulPaginaValueNetwork\"][\"edges\"][0][\"node\"]\n>\n\ninterface ValueNetworkPageTemplateProps extends PageProps<any, ValueNetworkPageContext> {}\n\nconst ValueNetworkPageTemplate: React.FC<ValueNetworkPageTemplateProps> = props => {\n    const valueNetworkPageData = props.pageContext.data\n\n    return (\n        <Fragment>\n            <HeroSection\n                id=\"value-network\"\n                image={valueNetworkPageData.heroBackgroundImage?.gatsbyImageData}\n                imageAlt={valueNetworkPageData.heroBackgroundImage?.title}\n            >\n                <HeroContent>{valueNetworkPageData.heroContent?.raw}</HeroContent>\n            </HeroSection>\n            <SectionContainer tabbed marginPost customTab={<ScrollButton />} withFadeInEffect>\n                <Blank>\n                    <h3 className=\"no-margin\">{valueNetworkPageData.firstParagraphTitle}</h3>\n                    <RichTextField style={{marginTop: \"var(--gutter-5)\"}} className=\"font-h6 chars-h6-80\">\n                        {valueNetworkPageData.firstParagraphDescription?.raw}\n                    </RichTextField>\n                </Blank>\n            </SectionContainer>\n            <SectionContainer>\n                <Blank\n                    className=\"black-background-dun6\"\n                    style={{paddingTop: \"var(--gutter-7)\", paddingBottom: \"var(--gutter-7)\"}}\n                >\n                    <LogoContainer images={valueNetworkPageData.subsidiariesLogos} />\n                </Blank>\n            </SectionContainer>\n            <SectionContainer>\n                <ScrollingText backgroundImage={valueNetworkPageData.scrollingTextBackgroundImage}>\n                    {valueNetworkPageData.scrollingText}\n                </ScrollingText>\n            </SectionContainer>\n            <SectionContainer>\n                <Blank>\n                    <RichTextField className=\"font-h6 chars-h6-80\">\n                        {valueNetworkPageData.secondParagraphDescription?.raw}\n                    </RichTextField>\n                </Blank>\n            </SectionContainer>\n            <SectionContainer>\n                {valueNetworkPageData.firstAccordionGroup?.map((accordion, index) => {\n                    const odd = Boolean(index % 2)\n                    return (\n                        <Accordion\n                            title={accordion?.title}\n                            key={index}\n                            startClosed\n                            titleClassName=\"accordion-title-dun6\"\n                            iconClassName=\"accordion-icon-dun6\"\n                            className={clsx(odd ? \"accordion-background-odd-90d3\" : \"accordion-background-even-90d3\")}\n                        >\n                            <Blank>\n                                <RichTextField className=\"font-h6 chars-h6-80\">{accordion?.content?.raw}</RichTextField>\n                            </Blank>\n                        </Accordion>\n                    )\n                })}\n            </SectionContainer>\n            <SectionContainer>\n                <Spacer\n                    borderHeight={1}\n                    backgroundImage={valueNetworkPageData.firstSpacerBackgroundImage?.gatsbyImageData}\n                    backgroundImageAlt={valueNetworkPageData.firstSpacerBackgroundImage?.title}\n                />\n            </SectionContainer>\n            <SectionContainer id=\"our-formats\">\n                <Carousel\n                    title={valueNetworkPageData.formatsTitle}\n                    backgroundImage={valueNetworkPageData.formatsBackgroundImage?.gatsbyImageData}\n                    backgroundAlt={valueNetworkPageData.formatsBackgroundImage?.title}\n                >\n                    {valueNetworkPageData.ourFormats?.map((slide, index) => {\n                        return (\n                            <Carousel.Slide\n                                key={index}\n                                title={slide?.title}\n                                description={slide?.description?.raw}\n                                video={{\n                                    src: slide?.video?.url,\n                                    mimeType: slide?.video?.mimeType,\n                                }}\n                            />\n                        )\n                    })}\n                </Carousel>\n            </SectionContainer>\n            <SectionContainer>\n                <Spacer\n                    borderHeight={1}\n                    backgroundImage={valueNetworkPageData.secondSpacerBackgroundImage?.gatsbyImageData}\n                    backgroundImageAlt={valueNetworkPageData.secondSpacerBackgroundImage?.title}\n                />\n            </SectionContainer>\n            <SectionContainer withFadeInEffect>\n                <Blank>\n                    <h3 className=\"no-margin\">\n                        <div className=\"green\">{valueNetworkPageData?.thirdParagraphTitleFirstPart}</div>\n                        {valueNetworkPageData?.thirdParagraphTitleSecondPart}\n                    </h3>\n                    <RichTextField style={{marginTop: \"var(--gutter-4)\"}} className=\"font-h6 chars-h6-80\">\n                        {valueNetworkPageData?.thirdParagraphDescription?.raw}\n                    </RichTextField>\n                </Blank>\n            </SectionContainer>\n            <SectionContainer>\n                {valueNetworkPageData.accordionSecondGroup?.map((accordion, index) => {\n                    const odd = Boolean(index % 2)\n                    return (\n                        <Accordion\n                            title={accordion?.title}\n                            key={index}\n                            startClosed\n                            titleClassName=\"accordion-title-dun6\"\n                            iconClassName=\"accordion-icon-dun6\"\n                            className={clsx(odd ? \"accordion-background-odd-90d3\" : \"accordion-background-even-90d3\")}\n                        >\n                            <Blank>\n                                <RichTextField className=\"font-h6 chars-h6-80\">{accordion?.content?.raw}</RichTextField>\n                            </Blank>\n                        </Accordion>\n                    )\n                })}\n            </SectionContainer>\n            <SectionContainer>\n                <Spacer\n                    borderHeight={1}\n                    backgroundImage={valueNetworkPageData.thirdSpacerBackgroundImage?.gatsbyImageData}\n                    backgroundImageAlt={valueNetworkPageData.thirdSpacerBackgroundImage?.title}\n                />\n            </SectionContainer>\n            <SectionContainer withFadeInEffect id=\"our-publishers\">\n                <Blank>\n                    <h3 className=\"no-margin\">\n                        <div className=\"thin-title-text-dun6 \">\n                            {valueNetworkPageData?.customersSectionTitleFirstPart}\n                        </div>\n                        <span className=\"green\">{valueNetworkPageData?.customersSectionTitleSecondPart}</span>\n                    </h3>\n                    <RichTextField style={{marginTop: \"var(--gutter-4)\"}} className=\"font-h6 chars-h6-80\">\n                        {valueNetworkPageData?.customerSectionDescription?.raw}\n                    </RichTextField>\n                </Blank>\n            </SectionContainer>\n            <SectionContainer title={valueNetworkPageData.customersLogosTitle}>\n                <Blank className=\"customers-section-dun6\" style={{paddingTop: 0}}>\n                    <LogoContainer\n                        images={valueNetworkPageData.customersSubsidiariesLogos}\n                        style={{flexWrap: \"nowrap\"}}\n                        className=\"customers-sections-ubsidiaries-logos-dun6\"\n                    />\n                    <LogoContainer\n                        images={valueNetworkPageData.customersLogos}\n                        style={{\n                            paddingTop: \"var(--gutter-5)\",\n                            rowGap: \"var(--gutter-0)\",\n                            columnGap: \"var(--gutter-4)\",\n                            justifyContent: \"space-around\",\n                        }}\n                    />\n                </Blank>\n            </SectionContainer>\n            <SectionContainer>\n                <Spacer\n                    borderHeight={1}\n                    backgroundImage={valueNetworkPageData.fifthSpacerBackgroundImage?.gatsbyImageData}\n                    backgroundImageAlt={valueNetworkPageData.fifthSpacerBackgroundImage?.title}\n                />\n            </SectionContainer>\n            <SectionContainer>\n                <Blank>\n                    <h3 className=\"no-margin\">\n                        <span className=\"green\">{`${valueNetworkPageData?.formTitleFirstPart} `}</span>\n                        <span className=\"white-space-no-wrap-dun6\">{valueNetworkPageData?.formTitleSecondPart}</span>\n                    </h3>\n                </Blank>\n                <ValueNetworkForm labels={valueNetworkPageData} />\n            </SectionContainer>\n            <SectionContainer>\n                <Spacer\n                    borderHeight={1}\n                    backgroundImage={valueNetworkPageData.fourthSpacerBackgroundImage?.gatsbyImageData}\n                    backgroundImageAlt={valueNetworkPageData.fourthSpacerBackgroundImage?.title}\n                />\n            </SectionContainer>\n            <SectionContainer id=\"our-last-projects\">\n                <VideoPlayer\n                    title={valueNetworkPageData.promoVideo?.title}\n                    description={valueNetworkPageData.promoVideo?.description?.raw}\n                    backgroundImage={valueNetworkPageData.promoVideo?.image?.gatsbyImageData}\n                    backgroundAlt={valueNetworkPageData.promoVideo?.image?.title}\n                    videoSources={{\n                        src: valueNetworkPageData.promoVideo?.video?.url,\n                        mimeType: valueNetworkPageData.promoVideo?.video?.mimeType,\n                    }}\n                />\n            </SectionContainer>\n            <SectionContainer id=\"testimonials\">\n                <Blank>\n                    <h3>{valueNetworkPageData?.testimonialsTitle}</h3>\n                    <SlideShow>\n                        {valueNetworkPageData.testimonials?.map((t, i) => (\n                            <BlockQuote key={i} author={t?.author ?? \"\"}>\n                                {t?.content?.raw}\n                            </BlockQuote>\n                        ))}\n                    </SlideShow>\n                </Blank>\n            </SectionContainer>\n        </Fragment>\n    )\n}\n\nexport default ValueNetworkPageTemplate\n\nexport const Head: HeadFC<any, ValueNetworkPageContext> = props => {\n    const valueNetworkPageData = props.pageContext.data\n\n    const links = useLinksQuery()\n\n    return (\n        <SEO\n            title={valueNetworkPageData?.title}\n            description={getTextFromHTML(valueNetworkPageData?.firstParagraphDescription?.raw)}\n            language={props.pageContext.language}\n            image={valueNetworkPageData.seoImage?.url}\n            imageAlt={valueNetworkPageData?.seoImage?.title}\n            siteUrl={`${process.env.SITE_URL}${links.valueNetwork.url}`}\n        />\n    )\n}\n","import {documentToHtmlString} from \"@contentful/rich-text-html-renderer\"\n\nconst getTextFromHTML = (input: string | undefined | null) => {\n    if (!input) return \"\"\n    let result = documentToHtmlString(JSON.parse(input))\n    result = result.replaceAll(/<[^<>]+>/gm, \"\")\n    return result\n}\n\nexport default getTextFromHTML\n","export const onTrasitionEnd = (element: HTMLElement | undefined | null, callback: Function) => {\r\n    if (!element) return\r\n    const handleTransitionEnd = (ev: TransitionEvent) => {\r\n        if (ev.target === element) {\r\n            element.removeEventListener(\"transitionend\", handleTransitionEnd)\r\n        }\r\n        callback()\r\n    }\r\n    element.addEventListener(\"transitionend\", handleTransitionEnd)\r\n}\r\n"],"names":["props","className","children","otherProps","_jsx","clsx","Numbers","items","Children","map","child","index","isValidElement","push","item","_jsxs","value","description","Item","Carousel","title","noVideo","backgroundImage","backgroundAlt","selected","setSelected","useState","slides","MultiStyleText","className1","className2","GatsbyImage","alt","image","Fader","onSelect","slide","_slide$props$video","Slide","video","src","MobileVideoPlayer","videoClass","pauseVideo","videoSources","mimeType","slideClass","_slide$props$chart$im","_slide$props$chart$im2","_slide$props$chart$im3","_slide$props$chart$co","_slide$props$dataList","RichTextField","chart","gatsbyImageData","_Fragment","imageDescription","content","raw","dataList","ctaLink","ctaName","LinkButton","to","DotsSelect","length","defaultStyle","overflow","transitionDuration","transitionTimingFunction","closed","_closed","as","Component","style","drawerRef","useRef","isClosed","setClosed","transitionStyle","setTransitionStyle","display","collapse","useCallback","_drawerRef$current","current","height","scrollHeight","setTimeout","onTrasitionEnd","expand","useEffect","ref","titleClassName","iconClassName","startClosed","onClick","e","state","ChevronUpIcon","Drawer","color","download","withoutTransition","internal","test","transitionContenxt","useContext","TransitionContext","navbarContext","NavBarContext","rippleColor","button","Link","target","event","url","preventDefault","hide","currentTarget","href","navigate","navigateTo","undefined","Ripple","DOT_BUTTON_STYLE","backgroundColor","padding","cursor","DOT_STYLE","width","borderRadius","SELECTED_DOT_STYLE","Dot","dotStyle","selectedDotStyle","dots","touchStartRef","onTouchStart","_event$touches$","touches","screenX","onTouchMove","_event$touches$2","currentX","movesLeft","movesRight","Math","max","min","count","otherPros","dangerouslySetInnerHTML","__html","documentToHtmlString","JSON","parse","ChevronDownIcon","paddingHeight","marginHeight","borderHeight","backgroundImageAlt","top","bottom","paddigHeightClass","borderHeightClass","marginHeightClass","videoStyle","videoRef","_videoRef$current","_videoRef$current2","pause","play","autoPlay","loop","muted","playsInline","flat","source","type","viewBox","fill","stroke","d","playing","setPlaying","videoPlayerRef","isVideoVisible","useInView","threshold","navBarContext","scrollIntoView","block","behavior","playAndPause","PlayIcon","onEnded","labels","submitStatus","setSubmitStatus","register","handleSubmit","watch","formState","errors","useForm","position","onSubmit","async","formData","FormData","field","data","fieldKey","append","requestOptions","method","mode","body","redirect","cache","credentials","fetch","then","result","catch","error","finally","InputText","placeholder","formUrlLabel","invalid","Website","required","pattern","urlRegex","variant","containerClassName","formViewsLabel","Number","numberRegex","formSessionsLabel","Number1","formNameLabel","Name_First","nameRegex","formLastNameLabel","Name_Last","formEmailLabel","Email","emailRegex","Button","formSubmitButton","CheckIcon","formSubmitSuccessMessage","ErrorIcon","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","author","QuoteIcon","String","images","logo","_logo$title","_backgroundImage$titl","containerRef","animationDuration","slideshowInitialState","numberOfItems","currentIndex","targetIndex","isTransitionEnabled","isReadyToAnimate","prevClassname","currentClassname","nextClassname","mod","module","slideshowReducer","action","_dragStartingPosRef$c","toArray","dispatch","useReducer","currentSlideRef","dragStartingPosRef","handleDragStart","x","clientX","y","clientY","handleDrag","_event$touches$3","_event$touches$4","dragCurrentPos","diff","abs","goToNext","goToPrev","findFastestWay","start","end","total","tStart","tEnd","diffPos","diffNeg","transition","handlePrevClick","disabled","ChevronLeftIcon","handleNextClick","ChevronRightIcon","desiredIndex","_valueNetworkPageData","_valueNetworkPageData2","_valueNetworkPageData3","_valueNetworkPageData4","_valueNetworkPageData5","_valueNetworkPageData6","_valueNetworkPageData7","_valueNetworkPageData8","_valueNetworkPageData9","_valueNetworkPageData10","_valueNetworkPageData11","_valueNetworkPageData12","_valueNetworkPageData13","_valueNetworkPageData14","_valueNetworkPageData15","_valueNetworkPageData16","_valueNetworkPageData17","_valueNetworkPageData18","_valueNetworkPageData19","_valueNetworkPageData20","_valueNetworkPageData21","_valueNetworkPageData22","_valueNetworkPageData23","_valueNetworkPageData24","_valueNetworkPageData25","_valueNetworkPageData26","_valueNetworkPageData27","_valueNetworkPageData28","_valueNetworkPageData29","_valueNetworkPageData30","_valueNetworkPageData31","_valueNetworkPageData32","_valueNetworkPageData33","_valueNetworkPageData34","valueNetworkPageData","pageContext","Fragment","HeroSection","id","heroBackgroundImage","imageAlt","HeroContent","heroContent","SectionContainer","tabbed","marginPost","customTab","ScrollButton","withFadeInEffect","Blank","firstParagraphTitle","marginTop","firstParagraphDescription","paddingTop","paddingBottom","LogoContainer","subsidiariesLogos","ScrollingText","scrollingTextBackgroundImage","scrollingText","secondParagraphDescription","firstAccordionGroup","accordion","_accordion$content","odd","Boolean","Accordion","Spacer","firstSpacerBackgroundImage","formatsTitle","formatsBackgroundImage","ourFormats","_slide$description","_slide$video","_slide$video2","secondSpacerBackgroundImage","thirdParagraphTitleFirstPart","thirdParagraphTitleSecondPart","thirdParagraphDescription","accordionSecondGroup","_accordion$content2","thirdSpacerBackgroundImage","customersSectionTitleFirstPart","customersSectionTitleSecondPart","customerSectionDescription","customersLogosTitle","customersSubsidiariesLogos","flexWrap","customersLogos","rowGap","columnGap","justifyContent","fifthSpacerBackgroundImage","formTitleFirstPart","formTitleSecondPart","ValueNetworkForm","fourthSpacerBackgroundImage","VideoPlayer","promoVideo","testimonialsTitle","SlideShow","testimonials","t","i","_t$author","_t$content","BlockQuote","Head","_valueNetworkPageData35","_valueNetworkPageData36","_valueNetworkPageData37","links","useLinksQuery","SEO","getTextFromHTML","language","seoImage","siteUrl","valueNetwork","input","replaceAll","element","callback","handleTransitionEnd","ev","removeEventListener","addEventListener"],"sourceRoot":""}