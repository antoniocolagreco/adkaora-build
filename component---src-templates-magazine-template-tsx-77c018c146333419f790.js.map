{"version":3,"file":"component---src-templates-magazine-template-tsx-77c018c146333419f790.js","mappings":"2JAsEA,IAxDiDA,IAC7C,MAAM,MACFC,EADE,YAEFC,EAFE,iBAGFC,EAHE,SAIFC,EAJE,WAKFC,GAAa,EALX,SAMFC,EANE,SAOFC,EAAW,SAPT,UAQFC,KACGC,GACHT,EAYJ,OAVAU,EAAAA,EAAAA,YAAU,KACN,GAAIL,EAAY,CACZ,MAAMM,EAASC,SAASC,eAAe,WACjCC,EAAOF,SAASC,eAAe,QACrC,IAAKF,IAAWG,EAAM,OACtB,MAAMC,EAAeJ,EAAOK,aAC5BF,EAAKG,MAAMC,UAAa,GAAEH,KAC7B,IACF,KAGCI,EAAAA,EAAAA,MAAAA,SAAAA,CAAQX,WAAWY,EAAAA,EAAAA,GAAQ,YAAaZ,MAAgBC,EAAYY,GAAG,OAAvE,UACKpB,GAASK,IACNgB,EAAAA,EAAAA,KAACC,EAAAA,EAAD,CACIC,IAAKlB,EACLL,MAAOA,EACPO,WAAWY,EAAAA,EAAAA,GACP,oBACAjB,GAAsC,GACtCD,EAAc,yBAA2B,IAE7CuB,aAAa,aACbC,QAAQ,QACRC,UAAU,QACVC,eAAgBrB,IAGvBL,GAAeI,IACZgB,EAAAA,EAAAA,KAACC,EAAAA,EAAD,CACIC,IAAKlB,EACLL,MAAOC,EACPM,WAAWY,EAAAA,EAAAA,GAAQ,2BAA4BjB,GAAsC,IACrFsB,aAAa,aACbC,QAAQ,QACRC,UAAU,QACVC,eAAgBrB,IAGvBH,IAAYkB,EAAAA,EAAAA,KAAAA,MAAAA,CAAKd,UAAU,eAAf,SAA+BJ,MA5BpD,C,+CCcJ,IAvCwBJ,IACpB,MAAM,UAACQ,EAAD,WAAYqB,EAAZ,WAAwBC,EAAxB,KAAoCC,GAAO,EAA3C,OAAkDC,EAAlD,OAA0DC,EAAQ7B,SAAU8B,GAAalC,EACzFI,EAAW8B,aAAH,EAAGA,EAAWC,OAE5B,IAAK/B,EAAU,OAAO,KACtB,MAAMgC,EAAgBhC,EAASiC,OAEzBC,EADQlC,EAASmC,MAAM,KACDF,OAE5B,IAAIG,EAAQ,GACRC,EAAQ,GAEZ,GAAsB,IAAlBH,EACAE,EAAQpC,EAASsC,UAAU,EAAGC,KAAKC,MAAMxC,EAASiC,OAAS,IAC3DI,EAAQrC,EAASsC,UAAUC,KAAKC,MAAMxC,EAASiC,OAAS,GAAIjC,EAASiC,YAClE,CACH,IAAIQ,EAAO,EACX,IAAK,IAAIC,EAAQ,EAAGV,EAAgB,EAAIU,EAAQ,IAC5CD,EAAOzC,EAAS2C,QAAQ,IAAKX,EAAgB,EAAIU,IACnC,IAAVD,GAF2CC,KAMnDN,EAAQpC,EAASsC,UAAU,EAAGG,GAC9BJ,EAAQrC,EAASsC,UAAUG,EAAMzC,EAASiC,OAC7C,CAED,OACIlB,EAAAA,EAAAA,MAAAA,OAAAA,CAAMX,WAAWY,EAAAA,EAAAA,GAAQ,mBAAoBW,EAAO,YAAc,YAAavB,GAA/E,WACIc,EAAAA,EAAAA,KAAAA,OAAAA,CAAMd,WAAWY,EAAAA,EAAAA,GAAQ,cAAekB,EAAgB,EAAI,aAAe,GAAIT,GAAaZ,MAAOe,EAAnG,SACKQ,KAELlB,EAAAA,EAAAA,KAAAA,OAAAA,CAAMd,WAAWY,EAAAA,EAAAA,GAAQ,cAAekB,EAAgB,EAAI,aAAe,GAAIR,GAAab,MAAOgB,EAAnG,SACKQ,EAAMO,cANnB,C","sources":["webpack://adkaora.com/./src/components/Sections/HeroSection/HeroSection.tsx","webpack://adkaora.com/./src/components/UI/MultiStyleText/MultiStyleText.tsx"],"sourcesContent":["import {GatsbyImage, IGatsbyImageData} from \"gatsby-plugin-image\"\nimport {CSSProperties, useEffect} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./HeroSection.css\"\n\nexport interface HeroSectionProps extends React.HTMLAttributes<HTMLElement> {\n    image: IGatsbyImageData | null | undefined\n    mobileImage?: IGatsbyImageData | null | undefined\n    gatsbyImageClass?: string | undefined | null\n    imageAlt: string | null | undefined\n    withMargin?: boolean\n    position?: React.CSSProperties[\"objectPosition\"] | undefined\n}\n\nconst HeroSection: React.VFC<HeroSectionProps> = props => {\n    const {\n        image,\n        mobileImage,\n        gatsbyImageClass,\n        children,\n        withMargin = false,\n        imageAlt,\n        position = \"center\",\n        className,\n        ...otherProps\n    } = props\n\n    useEffect(() => {\n        if (withMargin) {\n            const navbar = document.getElementById(\"nav-bar\")\n            const hero = document.getElementById(\"hero\")\n            if (!navbar || !hero) return\n            const navbarHeight = navbar.scrollHeight\n            hero.style.marginTop = `${navbarHeight}px`\n        }\n    }, [])\n\n    return (\n        <header className={classes(\"hero-d2bh\", className)} {...otherProps} id=\"hero\">\n            {image && imageAlt && (\n                <GatsbyImage\n                    alt={imageAlt}\n                    image={image}\n                    className={classes(\n                        \"gatsby-image-d2bh\",\n                        gatsbyImageClass ? gatsbyImageClass : \"\",\n                        mobileImage ? \"gatsby-image-hide-d2bh\" : \"\",\n                    )}\n                    imgClassName=\"image-d2bh\"\n                    loading=\"eager\"\n                    objectFit=\"cover\"\n                    objectPosition={position}\n                />\n            )}\n            {mobileImage && imageAlt && (\n                <GatsbyImage\n                    alt={imageAlt}\n                    image={mobileImage}\n                    className={classes(\"gatsby-mobile-image-d2bh\", gatsbyImageClass ? gatsbyImageClass : \"\")}\n                    imgClassName=\"image-d2bh\"\n                    loading=\"eager\"\n                    objectFit=\"cover\"\n                    objectPosition={position}\n                />\n            )}\n            {children && <div className=\"overlay-d2bh\">{children}</div>}\n        </header>\n    )\n}\n\nexport default HeroSection\n","import {classes} from \"~/utilities/classes\"\nimport \"./MultiStyleText.css\"\n\ninterface MultiStyleTextProps extends React.HTMLAttributes<HTMLSpanElement> {\n    flex?: boolean | undefined\n    children?: string | undefined | null\n    className1?: string\n    className2?: string\n    style1?: React.CSSProperties | undefined\n    style2?: React.CSSProperties | undefined\n}\n\nconst MultiStyleText = (props: MultiStyleTextProps) => {\n    const {className, className1, className2, flex = false, style1, style2, children: _children} = props\n    const children = _children?.trim()\n\n    if (!children) return null\n    const numberOfChars = children.length\n    const words = children.split(\" \")\n    const numberOfWords = words.length\n\n    let part1 = \"\"\n    let part2 = \"\"\n\n    if (numberOfWords === 1) {\n        part1 = children.substring(0, Math.round(children.length / 2))\n        part2 = children.substring(Math.round(children.length / 2), children.length)\n    } else {\n        let half = 0\n        for (let index = 1; numberOfChars / 2 - index > 0; index++) {\n            half = children.indexOf(\" \", numberOfChars / 2 - index)\n            if (half !== -1) {\n                break\n            }\n        }\n        part1 = children.substring(0, half)\n        part2 = children.substring(half, children.length)\n    }\n\n    return (\n        <span className={classes(\"multi-style-vu88\", flex ? \"flex-vu88\" : \"grid-vu88\", className)}>\n            <span className={classes(\"part-1-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className1)} style={style1}>\n                {part1}\n            </span>\n            <span className={classes(\"part-2-vu88\", numberOfWords > 1 ? \"space-vu88\" : \"\", className2)} style={style2}>\n                {part2.trimEnd()}\n            </span>\n        </span>\n    )\n}\n\nexport default MultiStyleText\n"],"names":["props","image","mobileImage","gatsbyImageClass","children","withMargin","imageAlt","position","className","otherProps","useEffect","navbar","document","getElementById","hero","navbarHeight","scrollHeight","style","marginTop","_jsxs","classes","id","_jsx","GatsbyImage","alt","imgClassName","loading","objectFit","objectPosition","className1","className2","flex","style1","style2","_children","trim","numberOfChars","length","numberOfWords","split","part1","part2","substring","Math","round","half","index","indexOf","trimEnd"],"sourceRoot":""}