{"version":3,"file":"component---src-templates-home-page-template-tsx-fdbf8ee77f93435d5497.js","mappings":"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","sources":["webpack://adkaora.com/./src/components/UI/Button/LinkButton.tsx","webpack://adkaora.com/./src/components/UI/DotsSelect/DotsSelect.tsx","webpack://adkaora.com/./src/components/UI/Fader/Fader.tsx","webpack://adkaora.com/./src/components/UI/Tabs/Tabs.tsx","webpack://adkaora.com/./src/components/UI/Slider/Slider.tsx","webpack://adkaora.com/./src/components/Sections/Approach/Approach.tsx","webpack://adkaora.com/./src/components/Sections/CaseHistory/CaseHistory.tsx","webpack://adkaora.com/./src/components/Sections/News/News.tsx","webpack://adkaora.com/./src/icons/AccountIcon.tsx","webpack://adkaora.com/./src/components/Sections/PrivateArea/PrivateArea.tsx","webpack://adkaora.com/./src/components/Sections/Products/Products.tsx","webpack://adkaora.com/./src/templates/HomePageTemplate.tsx"],"sourcesContent":["import {navigate} from \"@reach/router\"\nimport {GatsbyLinkProps, Link} from \"gatsby\"\nimport {useContext} from \"react\"\nimport Ripple, {RippleColor} from \"~/components/UI/Ripple/Ripple\"\nimport TransitionContext from \"~/contexts/TransitionContext\"\nimport {classes} from \"~/utilities/classes\"\nimport NavBarContext from \"../../../contexts/NavBarContext\"\nimport {ButtonColor} from \"./Button\"\n\nimport \"./Button.css\"\n\nexport interface LinkButtonProps extends Omit<GatsbyLinkProps<any>, \"to\"> {\n    color?: ButtonColor\n    withoutTransition?: boolean | undefined\n    to?: string | null | undefined\n}\n\nconst LinkButton: React.FC<LinkButtonProps> = props => {\n    const {\n        color = \"green\",\n        to = \"\",\n        children,\n        download,\n        withoutTransition,\n        onClick,\n        className,\n        ref,\n        ...otherProps\n    } = props\n    const internal = /^\\/(?!\\/)/.test(to ? to : \"\")\n    const transitionContenxt = useContext(TransitionContext)\n    const navbarContext = useContext(NavBarContext)\n\n    let rippleColor: RippleColor = \"light-green\"\n    switch (color) {\n        case \"green\":\n            rippleColor = \"light-green\"\n            break\n        case \"white\":\n            rippleColor = \"green\"\n            break\n        case \"blue\":\n            rippleColor = \"blue\"\n            break\n        case \"gray\":\n            rippleColor = \"gray\"\n            break\n        case \"red\":\n            rippleColor = \"red\"\n            break\n    }\n\n    const goTo = (url: string) => {\n        if (!url) return\n        if (withoutTransition) {\n            navigate(url)\n            return\n        }\n        transitionContenxt.navigateTo(url)\n    }\n\n    const onClickHandler = (event: React.MouseEvent<HTMLAnchorElement>) => {\n        event.preventDefault()\n        navbarContext.hide(1000)\n        if (onClick) onClick(event)\n        goTo(event.currentTarget.href)\n    }\n\n    const button =\n        internal && to ? (\n            <Link\n                className={classes(\"button-8p4x\", `${color}-8p4x`, className)}\n                to={to}\n                download={download}\n                target=\"_self\"\n                onClick={onClickHandler}\n                {...otherProps}\n            >\n                {children}\n            </Link>\n        ) : (\n            <a\n                href={to ?? undefined}\n                className={classes(\"button-8p4x\", `${color}-8p4x`, className)}\n                download={download}\n                target={download ? \"_self\" : \"_blank\"}\n                {...otherProps}\n                ref={ref}\n            >\n                {children}\n            </a>\n        )\n\n    return <Ripple color={rippleColor}>{button}</Ripple>\n}\n\nexport default LinkButton\n","import {CSSProperties} from \"react\"\n\ninterface DotsSelectProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onSelect\"> {\n    selected?: number | undefined\n    length: number\n    onSelect?: ((value: number) => void) | undefined\n    dotStyle?: React.CSSProperties | undefined\n    selectedDotStyle?: React.CSSProperties | undefined\n}\n\nconst DOT_BUTTON_STYLE: React.CSSProperties = {\n    backgroundColor: \"transparent\",\n    padding: \"4px\",\n    cursor: \"pointer\",\n}\n\nconst DOT_STYLE: React.CSSProperties = {\n    width: \"16px\",\n    height: \"16px\",\n    backgroundColor: \"var(--color-neutral-300)\",\n    borderRadius: \"var(--radius-5)\",\n}\n\nconst SELECTED_DOT_STYLE: React.CSSProperties = {\n    backgroundColor: \"var(--color-primary-700)\",\n}\n\nconst DotsSelect: React.VFC<DotsSelectProps> = props => {\n    const {selected, length, selectedDotStyle, dotStyle, onSelect, children, ...otherProps} = props\n\n    const dots = []\n    for (let index = 0; index < length; index++) {\n        dots.push(\n            <Dot\n                key={index}\n                style={DOT_BUTTON_STYLE}\n                {...(onSelect ? {onClick: () => onSelect(index)} : {})}\n                dotStyle={\n                    index === selected\n                        ? {...DOT_STYLE, ...dotStyle, ...SELECTED_DOT_STYLE, ...selectedDotStyle}\n                        : {...DOT_STYLE, ...dotStyle}\n                }\n            />,\n        )\n    }\n\n    return <div {...otherProps}>{dots}</div>\n}\n\ninterface DotProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    dotStyle?: React.CSSProperties | undefined\n}\n\nconst Dot: React.VFC<DotProps> = props => {\n    const {style, dotStyle, ...otherProps} = props\n\n    return (\n        <button style={{...style}} {...otherProps}>\n            <div style={dotStyle} />\n        </button>\n    )\n}\n\nexport default DotsSelect\n","import {Children, useCallback, useRef} from \"react\"\nimport {classes} from \"~/utilities/classes\"\nimport \"./Fader.css\"\n\ninterface FaderComponents {\n    Slide: React.FC\n}\n\ninterface FaderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\" | \"onSelect\"> {\n    children: React.ReactElement<React.FC> | Array<React.ReactElement<React.FC>>\n    selected: number\n    onSelect?: undefined | ((value: number) => void)\n    slideClass?: undefined | string\n}\n\nconst Fader: React.FC<FaderProps> & FaderComponents = (props: FaderProps) => {\n    const {selected, onSelect, className, slideClass, children, ...otherProps} = props\n    const touchStartRef = useRef<undefined | number>()\n\n    const onTouchStart = useCallback((event: React.TouchEvent<HTMLDivElement>) => {\n        touchStartRef.current = event.touches[0]?.screenX\n    }, [])\n\n    const onTouchMove = useCallback((event: React.TouchEvent<HTMLDivElement>) => {\n        const currentX = event.touches[0]?.screenX\n\n        if (false\n            || typeof currentX === 'undefined'\n            || typeof touchStartRef.current === 'undefined'\n        ) {\n            return\n        }\n\n        const movesLeft = currentX > touchStartRef.current + 50\n        const movesRight = currentX < touchStartRef.current - 50\n\n        if (movesLeft) {\n            onSelect?.(Math.max(selected - 1, 0))\n            touchStartRef.current = undefined\n            return\n        }\n        if (movesRight) {\n            onSelect?.(Math.min(selected + 1, Children.count(children) - 1))\n            touchStartRef.current = undefined\n            return\n        }\n    }, [selected])\n\n    return (\n        <div\n            {...otherProps}\n            className={classes(\"fader-kpz3\", className)}\n        >\n            {Children.map(children, (child, index) =>\n                <div\n                    key={index}\n                    className={classes(\"slide-kpz3\", slideClass, {\n                        \"selected-kpz3\": selected === index,\n                    })}\n                    onTouchStart={onTouchStart}\n                    onTouchMove={onTouchMove}\n                >\n                    {child}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Fader\n\nconst Slide: React.FC = props => <>{props.children}</>\n\nFader.Slide = Slide\n","import {Children, cloneElement} from \"react\"\nimport {classes} from \"~/utilities/classes\"\n\ninterface TabsComponents {\n    Tab: React.FC<TabProps>\n}\n\nexport interface TabsProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\" | \"onSelect\"> {\n    children?: React.ReactElement | Array<React.ReactElement> | null | undefined\n    tabClass?: string | undefined\n    tabActiveClass?: string | undefined\n    selected: number\n    onSelect: (value: number) => void\n}\n\nconst Tabs: React.FC<TabsProps> & TabsComponents = props => {\n    const {onSelect, selected, tabClass, tabActiveClass, className, children, ...otherProps} = props\n    const tabs = Children.map(children, (child, index) => {\n        const tab = child as React.ReactElement<TabProps>\n        return cloneElement(tab, {\n            selectedTabClass: classes(tab.props.selectedTabClass, tabActiveClass),\n            onSelect: () => onSelect(index),\n            className: classes(tab.props.className, tabClass),\n            selected: index === selected,\n        })\n    })\n    return (\n        <div className={className} {...otherProps}>\n            {tabs}\n        </div>\n    )\n}\n\nexport default Tabs\n\ninterface TabProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"onSelect\"> {\n    selecteTabStyle?: React.CSSProperties | undefined\n    selectedTabClass?: string | undefined\n    selected?: boolean | undefined\n    onSelect?: (() => void) | undefined\n}\n\nconst Tab: React.FC<TabProps> = props => {\n    const {className, children, selectedTabClass, selecteTabStyle, style, selected, onSelect, ...otherProps} = props\n\n    return (\n        <button\n            {...otherProps}\n            className={classes(className, selected ? selectedTabClass : undefined)}\n            style={{...style, ...selected ? selecteTabStyle : undefined}}\n            onClick={\n                onSelect\n                    ? event => onSelect()\n                    : undefined\n            }\n        >\n            {children}\n        </button>\n    )\n}\n\nTabs.Tab = Tab\n","import {Children, useEffect, useState} from \"react\"\n\ninterface SliderComponents {\n    Slide: React.FC\n}\n\ninterface SliderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\" | \"onSelect\"> {\n    children: React.ReactElement<React.FC> | Array<React.ReactElement<React.FC>>\n    selected?: number | undefined\n    onSelect?: ((value: number) => void) | undefined\n    type?: \"horizontal\" | \"vertical\"\n}\n\nconst Slider: React.FC<SliderProps> & SliderComponents = (props: SliderProps) => {\n    const {selected, onSelect, type = \"horizontal\", children, ...otherProps} = props\n    const [_selected, _setSelected] = useState<number>(selected ? selected : 0)\n\n    const sliderStyle: React.CSSProperties = {\n        width: `${Children.count(children) * 100}vw`,\n        display: \"grid\",\n        gridAutoFlow: \"column\",\n        gridAutoColumns: \"100vw\",\n        justifyContent: \"left\",\n        justifyItems: \"center\",\n        transition: \"0.5s\",\n    }\n\n    let translateStyle: React.CSSProperties = {transform: `translate(${_selected * -100}vw , 0)`}\n    let touchStart: number | undefined = undefined\n\n    const onTouchStart = (event: React.TouchEvent<HTMLDivElement>) => {\n        touchStart = event.touches[0]?.screenX\n    }\n\n    const onTouchMove = (event: React.TouchEvent<HTMLDivElement>) => {\n        const currentX = event.touches[0]?.screenX\n        if (!currentX || !touchStart) return\n        if (currentX < touchStart - 50) {\n            if (_selected < Children.count(children) - 1) {\n                _setSelected(state => state + 1)\n                if (onSelect) onSelect(_selected + 1)\n            }\n        }\n        if (currentX > touchStart + 50) {\n            if (_selected > 0) {\n                _setSelected(state => state - 1)\n                if (onSelect) onSelect(_selected - 1)\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (selected === undefined || _selected === undefined || selected === _selected) return\n        _setSelected(selected)\n    }, [selected])\n\n    return (\n        <div\n            style={{...sliderStyle, ...translateStyle}}\n            {...otherProps}\n            onTouchStart={onTouchStart}\n            onTouchMove={onTouchMove}\n        >\n            {children}\n        </div>\n    )\n}\n\nexport default Slider\n\nconst Slide: React.FC = props => <>{props.children}</>\n\nSlider.Slide = Slide\n","import {GatsbyImage, IGatsbyImageData} from \"gatsby-plugin-image\"\nimport {Children, isValidElement, useState} from \"react\"\nimport DotsSelect from \"~/components/UI/DotsSelect/DotsSelect\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport Slider from \"~/components/UI/Slider/Slider\"\nimport Tabs from \"~/components/UI/Tabs/Tabs\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport LinkButton from \"../../UI/Button/LinkButton\"\nimport \"./Approach.css\"\n\ninterface ApproachProps extends React.HTMLAttributes<HTMLDivElement> {\n    cta: string | null | undefined\n    linkCta: string | null | undefined\n    titolo: string | null | undefined\n    titoloBold: string | null | undefined\n    paragrafo: {raw?: string | null | undefined} | null | undefined\n}\n\nconst dotsColor: Array<React.CSSProperties> = [\n    {backgroundColor: \"var(--color-primary-700)\"},\n    {backgroundColor: \"var(--color-blue-match)\"},\n    {backgroundColor: \"var(--color-red-power)\"},\n]\n\ninterface ApproachComponents {\n    Card: React.VFC<InputCardProps>\n}\n\nconst Approach: React.FC<ApproachProps> & ApproachComponents = props => {\n    const {cta, linkCta, titolo, titoloBold, paragrafo, className, children, ...otherProps} = props\n    const [selectd, setSelected] = useState(0)\n    const links = useLinksQuery()\n\n    const cards: Array<React.ReactElement<InputCardProps>> = []\n\n    Children.forEach(children, child => {\n        if (!child || !isValidElement<InputCardProps>(child)) return\n        cards.push(child)\n    })\n\n    return (\n        <div className={classes(\"approach-z5cw\", className)} {...otherProps}>\n            <h3 className=\"title-z5cw\">{titolo}</h3>\n            <Slider className=\"slider-z5cw\" selected={selectd} onSelect={setSelected}>\n                {cards.map((card, index) => {\n                    return (\n                        <ApproachCard\n                            key={index}\n                            selected={index}\n                            length={3}\n                            onSelect={setSelected}\n                            title={card.props.title}\n                            image={card.props.image}\n                            imageAlt={card.props.imageAlt}\n                            description={card.props.description}\n                            selectedDotStyle={dotsColor[index]}\n                        />\n                    )\n                })}\n            </Slider>\n            <div className=\"cards-z5cw\">\n                {cards.map((card, index) => {\n                    return (\n                        <ApproachCard\n                            key={index}\n                            selected={index}\n                            length={3}\n                            onSelect={setSelected}\n                            title={card.props.title}\n                            image={card.props.image}\n                            imageAlt={card.props.imageAlt}\n                            description={card.props.description}\n                            selectedDotStyle={dotsColor[index]}\n                        />\n                    )\n                })}\n            </div>\n            <Tabs selected={selectd} onSelect={setSelected} className=\"tabs-z5cw\" tabClass=\"tab-z5cw\">\n                <Tabs.Tab className=\"know-tab-z5cw\" selectedTabClass=\"know-tab-selected-z5cw\">\n                    {cards[0]!.props.title}\n                </Tabs.Tab>\n                <Tabs.Tab className=\"match-tab-z5cw\" selectedTabClass=\"match-tab-selected-z5cw\">\n                    {cards[1]!.props.title}\n                </Tabs.Tab>\n                <Tabs.Tab className=\"power-tab-z5cw\" selectedTabClass=\"power-tab-selected-z5cw\">\n                    {cards[2]!.props.title}\n                </Tabs.Tab>\n            </Tabs>\n            <RichTextField className=\"description-z5cw chars-h6-80\">{paragrafo?.raw}</RichTextField>\n            <LinkButton to={`${links.about.url}#governance`}>{cta}</LinkButton>\n        </div>\n    )\n}\n\nexport default Approach\n\ninterface InputCardProps {\n    title: string | null | undefined\n    image: IGatsbyImageData | null | undefined\n    imageAlt: string | null | undefined\n    description: string | null | undefined\n    buttonStyle?: React.CSSProperties | undefined\n    dotStyle?: React.CSSProperties | undefined\n    selectedDotStyle?: React.CSSProperties | undefined\n}\n\ninterface ApproachCardProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onSelect\" | \"title\">, InputCardProps {\n    selected?: number | undefined\n    length?: number | undefined\n    onSelect?: ((value: number) => void) | undefined\n}\n\nconst ApproachCard: React.VFC<ApproachCardProps> = props => {\n    const {selected, title, image, imageAlt, description, buttonStyle, length, dotStyle, selectedDotStyle, onSelect} =\n        props\n    return (\n        <div className={`${title}-z5cw card-z5cw`}>\n            <div className=\"icon-container-z5cw\">\n                <div className=\"icon-badge-z5cw\" />\n                {image && imageAlt && (\n                    <GatsbyImage image={image} alt={imageAlt} className=\"gatsby-image-z5cw\" imgClassName=\"image-z5cw\" />\n                )}\n            </div>\n            <h4 className=\"no-margin card-title-z5cw\">{title}</h4>\n            <RichTextField className=\"no-margin card-description-z5cw chars-i-80\">{description}</RichTextField>\n            {length !== undefined && (\n                <DotsSelect\n                    length={length}\n                    selected={selected}\n                    className=\"dots-z5cw\"\n                    onSelect={onSelect}\n                    style={buttonStyle}\n                    dotStyle={dotStyle}\n                    selectedDotStyle={selectedDotStyle}\n                />\n            )}\n        </div>\n    )\n}\n\nconst InputCard: React.VFC<InputCardProps> = props => null\n\nApproach.Card = InputCard\n","import {GatsbyImage} from \"gatsby-plugin-image\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport {PostItem} from \"~/types/PostItem\"\nimport {classes} from \"~/utilities/classes\"\nimport LinkButton from \"../../UI/Button/LinkButton\"\n\nimport \"./CaseHistory.css\"\n\ninterface CaseHistoryProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n    children?: React.ReactNode\n}\n\ninterface CaseHistoryComponents {\n    Case: React.VFC<CaseCardProps & PostItem>\n}\n\nconst CaseHistory: React.VFC<CaseHistoryProps> & CaseHistoryComponents = props => {\n    const {className, children, ...otherProps} = props\n\n    return (\n        <div className={classes(\"case-history-q24h\", className)} {...otherProps}>\n            {children}\n        </div>\n    )\n}\n\nexport default CaseHistory\n\ninterface CaseCardProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n    cta: string | undefined | null\n}\n\nconst CaseCard: React.VFC<CaseCardProps & PostItem> = props => {\n    const {\n        date,\n        image,\n        title,\n        category,\n        tags,\n        description_short,\n        cta,\n        slug,\n        customer,\n        project,\n        className,\n        children,\n        type,\n        ...otherProps\n    } = props\n    const links = useLinksQuery()\n\n    return (\n        <div className={classes(\"case-box-q24h\", className)} {...otherProps}>\n            {image?.gatsbyImageData && image.title && (\n                <GatsbyImage alt={image.title} image={image.gatsbyImageData} className=\"gatsby-image-q24h\" />\n            )}\n            <h5 className=\"title-q24h\">{title}</h5>\n            <p className=\"description-q24h\">{description_short}</p>\n            <LinkButton to={`${links.caseHistory.url}/${slug}`} className=\"cta-q24h\">\n                {cta}\n            </LinkButton>\n        </div>\n    )\n}\n\nCaseHistory.Case = CaseCard\n","import {GatsbyImage} from \"gatsby-plugin-image\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport {PostItem} from \"~/types/PostItem\"\nimport {classes} from \"~/utilities/classes\"\nimport LinkButton from \"../../UI/Button/LinkButton\"\nimport \"./News.css\"\n\ninterface NewsProps extends React.HTMLAttributes<HTMLDivElement> {}\n\ninterface NewsComponents {\n    NewsItem: React.VFC<NewsBoxProps & PostItem>\n}\n\nconst News: React.FC<NewsProps> & NewsComponents = props => {\n    const {className, children, ...otherProps} = props\n\n    return (\n        <div className={classes(\"news-b4x2\", className)} {...otherProps}>\n            {children}\n        </div>\n    )\n}\n\nexport default News\n\ninterface NewsBoxProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n    title: string | null | undefined\n    cta: string | null | undefined\n}\n\nconst NewsBox: React.VFC<NewsBoxProps & PostItem> = props => {\n    const {image, title, cta, date, className, category, type, tags, description_short, slug, ...otherProps} = props\n    const links = useLinksQuery()\n\n    return (\n        <div className={classes(\"news-box-b4x2\", className)} {...otherProps}>\n            <div className=\"image-wrapper-b4x2\">\n                {image?.gatsbyImageData && image.title && (\n                    <GatsbyImage alt={image.title} image={image.gatsbyImageData} className=\"gatsby-image-b4x2\" />\n                )}\n            </div>\n            <div className=\"text-b4x2\">\n                <p className=\"date-b4x2\">{date}</p>\n                <h6 className=\"title-b4x2\">{title}</h6>\n                <p className=\"description-b4x2\">{description_short}</p>\n                <LinkButton to={`${links.blog.url}/${slug}`} className=\"cta-b4x2\" color=\"white\">\n                    {cta}\n                </LinkButton>\n            </div>\n        </div>\n    )\n}\n\nNews.NewsItem = NewsBox\n","const AccountIcon: React.VFC<React.SVGProps<SVGSVGElement>> = props => {\n    const {viewBox, fill, stroke, ...otherProps} = props\n    return (\n        <svg\n            viewBox={viewBox ? viewBox : \"0 0 100 100\"}\n            fill={fill ? fill : \"currentColor\"}\n            stroke={stroke ? stroke : \"currentColor\"}\n            {...otherProps}\n        >\n            <path d=\"M50,48A14,14,0,1,0,36,34,14,14,0,0,0,50,48Zm0,4A18,18,0,1,1,68,34,18,18,0,0,1,50,52Z\" />\n            <path d=\"M19,83.16a2,2,0,0,1-4,0,25.93,25.93,0,0,1,25.87-26H59.13A25.93,25.93,0,0,1,85,83.16a2,2,0,0,1-4,0,21.93,21.93,0,0,0-21.87-22H40.87A21.93,21.93,0,0,0,19,83.16Z\" />\n            <path d=\"M50,95A45,45,0,1,0,5,50,45,45,0,0,0,50,95Zm0,4A49,49,0,1,1,99,50,49,49,0,0,1,50,99Z\" />\n        </svg>\n    )\n}\n\nexport default AccountIcon\n","import MultiStyleText from \"~/components/UI/MultiStyleText/MultiStyleText\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport AccountIcon from \"~/icons/AccountIcon\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport LinkButton from \"../../UI/Button/LinkButton\"\nimport \"./PrivateArea.css\"\n\ninterface PrivateAreaProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"title\"> {\n    title: string | null | undefined\n    content: string | null | undefined\n    ctaName: string | null | undefined\n    ctaLink: string | null | undefined\n}\n\nconst PrivateArea: React.VFC<PrivateAreaProps> = props => {\n    const {className, children, title, content, ctaName, ctaLink, ...otherProps} = props\n    const links = useLinksQuery()\n\n    return (\n        <div className={classes(\"private-area-86pn\")} {...otherProps}>\n            <div className=\"icon-container-86pn\">\n                <div className=\"badge-86pn\" />\n                <AccountIcon className=\"icon-86pn\" />\n            </div>\n            <MultiStyleText flex className=\"title-86pn\" className1=\"title-part-1-86pn\" className2=\"title-part-2-86pn\">\n                {title}\n            </MultiStyleText>\n            <RichTextField className=\"content-86pn chars-h6-80\">{content}</RichTextField>\n            <LinkButton className=\"cta-86pn\" to={links.privateArea.url}>\n                {ctaName}\n            </LinkButton>\n        </div>\n    )\n}\n\nexport default PrivateArea\n","import {GatsbyImage, IGatsbyImageData} from \"gatsby-plugin-image\"\nimport {Children, useState} from \"react\"\nimport Fader from \"~/components/UI/Fader/Fader\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport Tabs from \"~/components/UI/Tabs/Tabs\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport {classes} from \"~/utilities/classes\"\nimport LinkButton from \"../../UI/Button/LinkButton\"\nimport \"./Products.css\"\n\ninterface SliderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\"> {\n    children: React.ReactElement<SlideProps> | Array<React.ReactElement<SlideProps>>\n}\n\ninterface SliderComponents {\n    Slide: React.VFC<SlideProps>\n}\n\nconst Products: React.FC<SliderProps> & SliderComponents = props => {\n    const {className, children, ...otherProps} = props\n    const slides = Children.toArray(children) as Array<React.ReactElement<SlideProps>>\n    const [selected, setSelected] = useState<number>(0)\n    const links = useLinksQuery()\n\n    return (\n        <div className={classes(\"products-z3iz\", className)} {...otherProps}>\n            <Fader className=\"fader-text-z3iz\" selected={selected} onSelect={setSelected}>\n                {slides.map((slide, index) => (\n                    <Fader.Slide key={index}>\n                        <h3 className=\"fader-title-z3iz\">{slide.props.title}</h3>\n                        <RichTextField>{slide.props.description?.raw}</RichTextField>\n                        {slide.props.ctaLink && (\n                            <LinkButton\n                                to={`${links.products.url}#${slide.props.ctaLink}`}\n                                color=\"white\"\n                                style={{marginTop: \"var(--gutter-2)\"}}\n                            >\n                                {slide.props.cta}\n                            </LinkButton>\n                        )}\n                    </Fader.Slide>\n                ))}\n            </Fader>\n            <Tabs\n                className=\"tabs-z3iz\"\n                tabClass=\"tab-z3iz\"\n                tabActiveClass=\"tab-active-z3iz\"\n                selected={selected}\n                onSelect={setSelected}\n            >\n                {slides.map((slide, index) => (\n                    <Tabs.Tab key={index}>{slide.props.title}</Tabs.Tab>\n                ))}\n            </Tabs>\n            <Fader className=\"fader-mobile-image-z3iz\" selected={selected} onSelect={setSelected}>\n                {slides.map((slide, index) => (\n                    <Fader.Slide key={index}>\n                        {slide.props.phoneImage?.gatsbyImageData && (\n                            <GatsbyImage\n                                className=\"mobile-image-z3iz\"\n                                imgClassName=\"mobile-image-inner-z3iz\"\n                                alt={slide.props.phoneImage.title ? slide.props.phoneImage.title : \"\"}\n                                image={slide.props.phoneImage.gatsbyImageData}\n                                objectFit=\"contain\"\n                            />\n                        )}\n                    </Fader.Slide>\n                ))}\n            </Fader>\n            <Fader className=\"right-fader-z3iz\" selected={selected} onSelect={setSelected}>\n                {slides.map((slide, index) => (\n                    <Fader.Slide key={index}>\n                        {slide.props.image?.gatsbyImageData && (\n                            <GatsbyImage\n                                alt={slide.props.image.title ? slide.props.image.title : \"\"}\n                                image={slide.props.image.gatsbyImageData}\n                                objectFit=\"cover\"\n                                objectPosition=\"center\"\n                                className=\"right-image-z3iz\"\n                                imgClassName=\"right-image-inner-z3iz\"\n                            />\n                        )}\n                    </Fader.Slide>\n                ))}\n            </Fader>\n        </div>\n    )\n}\n\nexport default Products\n\ninterface SlideProps {\n    title?: string | null | undefined\n    cta?: string | null | undefined\n    ctaLink?: string | null | undefined\n    description?: {raw?: string | null | undefined} | null | undefined\n    image?:\n        | {\n              gatsbyImageData?: IGatsbyImageData | null | undefined\n              title?: string | null | undefined\n          }\n        | null\n        | undefined\n    phoneImage?: {title?: string | null; gatsbyImageData?: IGatsbyImageData | null | undefined} | null | undefined\n}\n\nconst Slide: React.VFC<SlideProps> = props => null\n\nProducts.Slide = Slide\n","import {PageProps} from \"gatsby\"\nimport {GatsbySeo} from \"gatsby-plugin-next-seo\"\nimport {Fragment, useContext} from \"react\"\nimport Approach from \"~/components/Sections/Approach/Approach\"\nimport Blank from \"~/components/Sections/Blank/Blank\"\nimport CaseHistory from \"~/components/Sections/CaseHistory/CaseHistory\"\nimport HeroSection from \"~/components/Sections/HeroSection/HeroSection\"\nimport News from \"~/components/Sections/News/News\"\nimport PrivateArea from \"~/components/Sections/PrivateArea/PrivateArea\"\nimport Products from \"~/components/Sections/Products/Products\"\nimport RichTextField from \"~/components/UI/RichText/RichText\"\nimport SectionContainer from \"~/components/UI/SectionContainer/SectionContainer\"\nimport I18nContext from \"~/contexts/I18nContext\"\nimport {useLinksQuery} from \"~/queries/LinksQuery\"\nimport getTextFromHTML from \"~/utilities/getTextFromHTML\"\n\ninterface HomePageTemplateProps extends PageProps<any, HomePageContext> {}\n\nconst HomePageTemplate: React.FC<HomePageTemplateProps> = props => {\n    const homePageData = props.pageContext.data\n\n    const links = useLinksQuery()\n    const i18n = useContext(I18nContext)\n\n    return (\n        <Fragment>\n            <GatsbySeo\n                title={homePageData.title ? homePageData.title : \"homepage\"}\n                canonical={`${process.env.SITE_URL}${links.homepage.url}`}\n                description={getTextFromHTML(homePageData.paragrafo1?.raw)}\n                language={i18n.language}\n                openGraph={{\n                    url: `${process.env.SITE_URL}${links.homepage.url}`,\n                    title: `${homePageData.title}`,\n                    description: `${getTextFromHTML(homePageData.paragrafo1?.raw)}`,\n                    locale: `${i18n.language}`,\n                    images: [\n                        {\n                            url: `${homePageData.header?.url}`,\n                            width: Number(homePageData.header?.width),\n                            height: Number(homePageData.header?.height),\n                            alt: `${homePageData.header?.title}`,\n                        },\n                    ],\n                }}\n            />\n            <HeroSection\n                image={homePageData.header?.gatsbyImageData}\n                imageAlt={homePageData.header?.title}\n                mobileImage={homePageData.headerMobile?.gatsbyImageData}\n                position=\"BOTTOM\"\n            />\n            <SectionContainer withFadeInEffect>\n                <Blank>\n                    <h3 className=\"no-margin\">{homePageData.titolo1}</h3>\n                    <h3 className=\"green no-margin\">{homePageData.titolo2}</h3>\n                    <RichTextField style={{marginTop: \"var(--gutter-5)\"}} className=\"font-h6 chars-h6-80\">\n                        {homePageData.paragrafo1?.raw}\n                    </RichTextField>\n                </Blank>\n            </SectionContainer>\n            <SectionContainer tabbed hideTabOnMobile title={homePageData.titoloProdotti} id=\"products\">\n                {homePageData.defaultSlider && (\n                    <Products>\n                        {homePageData.defaultSlider?.map((slide, index) => (\n                            <Products.Slide\n                                cta={slide?.cta}\n                                ctaLink={slide?.ctaLink}\n                                description={slide?.description}\n                                image={slide?.image}\n                                phoneImage={slide?.phoneImage}\n                                title={slide?.title}\n                                key={index}\n                            />\n                        ))}\n                    </Products>\n                )}\n            </SectionContainer>\n            <SectionContainer id=\"approach\" withFadeInEffect>\n                <Approach\n                    cta={homePageData.approccio?.cta}\n                    linkCta={`/chi-siamo#governance`}\n                    titolo={homePageData.approccio?.titolo}\n                    titoloBold={homePageData.approccio?.titoloBold}\n                    paragrafo={homePageData.approccio?.paragrafo}\n                >\n                    {homePageData.approccio?.approcci?.map((approccio, index) => {\n                        return (\n                            <Approach.Card\n                                key={index}\n                                title={approccio?.titolo}\n                                image={approccio?.image?.gatsbyImageData}\n                                imageAlt={approccio?.image?.title}\n                                description={approccio?.paragrafo?.raw}\n                            />\n                        )\n                    })}\n                </Approach>\n            </SectionContainer>\n            <SectionContainer tabbed hideTabOnMobile title={homePageData.caseHistory?.titolo} id=\"case-history\">\n                {homePageData.caseHistory && (\n                    <CaseHistory>\n                        {homePageData.caseHistory.caseHistories?.map((item, index) => (\n                            <CaseHistory.Case\n                                key={index}\n                                image={item?.image}\n                                title={item?.title}\n                                description_short={item?.description_short}\n                                cta={homePageData.caseHistory?.ctaName}\n                                slug={item?.slug}\n                                type={item?.type}\n                                customer={item?.customer}\n                                project={item?.project}\n                            />\n                        ))}\n                    </CaseHistory>\n                )}\n            </SectionContainer>\n            <SectionContainer id=\"private-area\" withFadeInEffect>\n                <PrivateArea\n                    title={homePageData.areaRiservata?.titolo}\n                    content={homePageData.areaRiservata?.paragrafo?.raw}\n                    ctaName={homePageData.areaRiservata?.cta}\n                    ctaLink={`/area-riservata`}\n                />\n            </SectionContainer>\n            <SectionContainer id=\"news\">\n                {homePageData.news && (\n                    <News>\n                        {homePageData.news.news?.map((newsItem, index) => (\n                            <News.NewsItem\n                                key={index}\n                                title={newsItem?.title}\n                                image={newsItem?.image}\n                                cta={homePageData.news?.ctaName}\n                                description_short={newsItem?.description_short}\n                                date={newsItem?.date}\n                                category={newsItem?.category}\n                                type={newsItem?.type}\n                                slug={newsItem?.slug}\n                            />\n                        ))}\n                    </News>\n                )}\n            </SectionContainer>\n        </Fragment>\n    )\n}\n\nexport default HomePageTemplate\n\ninterface HomePageContext {\n    data: {\n        id: string\n        node_locale: string\n        title?: string | null\n        titolo1?: string | null\n        titolo2?: string | null\n        titoloProdotti?: string | null\n        header?: {\n            title?: string | null\n            height?: number | null\n            width?: number | null\n            url?: string | null\n            gatsbyImageData?: any | null\n        } | null\n        headerMobile?: {\n            title?: string | null\n            height?: number | null\n            width?: number | null\n            url?: string | null\n            gatsbyImageData?: any | null\n        } | null\n        paragrafo1?: {raw?: string | null} | null\n        defaultSlider?: Array<{\n            title?: string | null\n            cta?: string | null\n            ctaLink?: string | null\n            description?: {raw?: string | null} | null\n            image?: {\n                title?: string | null\n                height?: number | null\n                width?: number | null\n                url?: string | null\n                gatsbyImageData?: any | null\n            } | null\n            phoneImage?: {\n                title?: string | null\n                height?: number | null\n                width?: number | null\n                url?: string | null\n                gatsbyImageData?: any | null\n            } | null\n        } | null> | null\n        approccio?: {\n            cta?: string | null\n            linkCta?: string | null\n            titolo?: string | null\n            titoloBold?: string | null\n            paragrafo?: {raw?: string | null} | null\n            approcci?: Array<{\n                titolo?: string | null\n                paragrafo?: {raw?: string | null} | null\n                image?: {\n                    title?: string | null\n                    height?: number | null\n                    width?: number | null\n                    url?: string | null\n                    gatsbyImageData?: any | null\n                } | null\n            } | null> | null\n        } | null\n        caseHistory?: {\n            titolo?: string | null\n            ctaName?: string | null\n            caseHistories?: Array<{\n                title?: string | null\n                description_short?: string | null\n                slug?: string | null\n                customer?: string | null\n                project?: string | null\n                type?: string | null\n                image?: {\n                    title?: string | null\n                    height?: number | null\n                    width?: number | null\n                    url?: string | null\n                    gatsbyImageData?: any | null\n                } | null\n            } | null> | null\n        } | null\n        areaRiservata?: {\n            cta?: string | null\n            titolo?: string | null\n            ctaLink?: string | null\n            paragrafo?: {raw?: string | null} | null\n        } | null\n        news?: {\n            name?: string | null\n            ctaName?: string | null\n            news?: Array<{\n                category?: string | null\n                date?: any | null\n                description_short?: string | null\n                type?: string | null\n                slug?: string | null\n                title?: string | null\n                image?: {\n                    title?: string | null\n                    height?: number | null\n                    width?: number | null\n                    url?: string | null\n                    gatsbyImageData?: any | null\n                } | null\n            } | null> | null\n        } | null\n    }\n}\n"],"names":["props","color","to","children","download","withoutTransition","onClick","className","ref","otherProps","internal","test","transitionContenxt","useContext","TransitionContext","navbarContext","NavBarContext","rippleColor","button","_jsx","Link","classes","target","event","url","preventDefault","hide","currentTarget","href","navigate","navigateTo","undefined","Ripple","DOT_BUTTON_STYLE","backgroundColor","padding","cursor","DOT_STYLE","width","height","borderRadius","SELECTED_DOT_STYLE","Dot","style","dotStyle","selected","length","selectedDotStyle","onSelect","dots","index","push","Fader","slideClass","touchStartRef","useRef","onTouchStart","useCallback","current","touches","_event$touches$","screenX","onTouchMove","currentX","_event$touches$2","movesLeft","movesRight","Math","max","min","Children","child","Slide","Tabs","tabClass","tabActiveClass","tabs","tab","cloneElement","selectedTabClass","Tab","selecteTabStyle","Slider","type","_selected","_setSelected","useState","sliderStyle","display","gridAutoFlow","gridAutoColumns","justifyContent","justifyItems","transition","touchStart","translateStyle","transform","useEffect","state","dotsColor","Approach","cta","linkCta","titolo","titoloBold","paragrafo","selectd","setSelected","links","useLinksQuery","cards","isValidElement","_jsxs","map","card","ApproachCard","title","image","imageAlt","description","RichTextField","raw","LinkButton","about","buttonStyle","GatsbyImage","alt","imgClassName","DotsSelect","Card","CaseHistory","Case","date","category","tags","description_short","slug","customer","project","gatsbyImageData","caseHistory","News","NewsItem","blog","viewBox","fill","stroke","d","content","ctaName","ctaLink","AccountIcon","MultiStyleText","flex","className1","className2","privateArea","Products","slides","slide","_slide$props$descript","products","marginTop","phoneImage","objectFit","objectPosition","homePageData","pageContext","data","i18n","I18nContext","Fragment","GatsbySeo","canonical","homepage","getTextFromHTML","paragrafo1","_homePageData$paragra","language","openGraph","_homePageData$paragra2","locale","images","header","_homePageData$header","Number","_homePageData$header2","_homePageData$header3","_homePageData$header4","HeroSection","_homePageData$header5","_homePageData$header6","mobileImage","headerMobile","_homePageData$headerM","position","SectionContainer","withFadeInEffect","Blank","titolo1","titolo2","_homePageData$paragra3","tabbed","hideTabOnMobile","titoloProdotti","id","defaultSlider","_homePageData$default","approccio","_homePageData$approcc","_homePageData$approcc2","_homePageData$approcc3","_homePageData$approcc4","_homePageData$approcc5","approcci","_homePageData$approcc6","_approccio$image","_approccio$image2","_approccio$paragrafo","_homePageData$caseHis","caseHistories","_homePageData$caseHis2","item","_homePageData$caseHis3","PrivateArea","areaRiservata","_homePageData$areaRis","_homePageData$areaRis2","_homePageData$areaRis3","_homePageData$areaRis4","news","_homePageData$news$ne","newsItem","_homePageData$news"],"sourceRoot":""}